%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.4
%%For: Pachara
%%CreationDate: 5/10/2022
%%BoundingBox: 0 0 6400 3800
%%HiResBoundingBox: 0 0 6400 3800
%%CropBox: 0 0 6400 3800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.4.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.4.1 x498 R agm 4.7767 ct 6.0%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 13024 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFD06FF7D2752A8FD0AFF7D277DFD0FFFA852522E7DA8FD0F
%FF525227522752275227522752275227522752FD09FF7D27FD0552277DFD
%04FFA852277DFD10FFA8522752A8FD09FF7D27532E52FD09FF7D2853277D
%FD0DFF52050C050C05277DFD0DFFA827F827F8272127F821F8F800272127
%F827F8FD08FF7DF827F8525252F827F8FFA8A8A8274A7A207DFD0EFFA827
%7DFF5227A8FD08FF52522E7D2EFD09FF5259277D52FD0CFF7D050C2E7D53
%2E0C05A8FD0DFFF827002727272127F827F8272727F827F827FD08FF7D27
%28270027214C2727A852522E4A7B269F51FD0EFF527DFFFFFF527DFD08FF
%A8F8F8F852FFFF5252275252A8FF7DF8F8F87DFD0CFF050C4CFFFFFF7D2E
%0C52CA7DA8FD09FFA852525227524B5227524C5227524B52275927FD08FF
%7DF84C272721282728277D52FFA8519E754A52FD0EFF52FD04FFA852FD09
%FFA852A85252277DA8FFA87D275227A852A8FD0CFF7D0C27FFAFFFAF5252
%2E2EA8F8A8FD0AFF52520C350C3535350C3535350C352E352E59A8FD07FF
%7D272127F827F82727277D7DFFFFF8515051A8FD0BFFA87D7D527DA87DA8
%52527D7DA8FD0AFF2752FFFFA8FFFF7DF87DFD0FFF7D0552AFFFA9FF5252
%0C0CA152A8FD09FFA852053C1A431A0C1A0CF8350C131A431A2E27FD08FF
%7DF827F84C274CF827277D52FFFFFFA8A8FD0DFF52275927525253522E27
%7D2752FD0BFF52522751275227A827FD0FFF7D0C2EFFFFFFAF52522E2EA8
%52FD0BFF522E1A431A35F8350C35052E13433C3C2752A8FD07FF7D272727
%2127F84C27277D7DFD12FF27FFFF277DFFFFFF5252FFA952FD0BFF7EF8C7
%4A9F2659FF7D52FD0FFF270C27FFAFA97D2E0B52FD047DA8FD07FFA85227
%3C1A3C0505050C053513051A431A2E28FD08FF7DF827F8525227F828277D
%52FFFFA8275252FD0BFFA852A9A9F87DAFFFAF5227FFA852FD08FF7DA8FF
%52C77BF875C77CFF7D27FD0FFF520513277D522E0C27A852A851267DFD08
%FF522E1A431A351A350C05132E13421A3C2752A8FD07FF7D2721527E7D84
%2721277D7DFFFF277D525252FD0BFF52FFFFFFAFFFAFFFAFFFFFFF28FD08
%FFF852FF519E9FF84BC7A0FF7DF8A8FD0CFF7D52F8F8050C050C0527A87D
%27FFA07453FD07FFA8522705052E052E052E050C05353535F82E52A8FD07
%FF7DF827527DF8842727F852277D27527E528452FD0AFF7D52FF8427287D
%FF592727A9A952A8FD07FF7D52FF529F9F27759F7CFD0FFF8327F8F8A8FF
%5259527DFFFF27FFFFC9507DFD08FF52AF84FD06A8A9A8FFFFA8A8FFAF53
%A8FD07FF7D2727277EA85900274C7D7DFFFF27F8F8F852FD0AFF7D59FF20
%938C272E4B8D6827FF52A8FD07FFA827FF7DF8742674F852FD0EFFA8F821
%2152FD07FF277DFFFF517453FD07FFA852595228522E522852A8FF7D52F8
%2752FF52A8FD07FF7DF84C210027F8212827A852FFFFA8F82127FD0BFF52
%7D8444B0B58D448D936827AF597DFD08FF525227A8535252A9527DFD0DFF
%7DF80027FD06FFA8277DA8275352507DFD08FF52AF7DA87DA87EA87DFFAF
%27F82700F8A87DA8FD07FF7D27274CFD06277D7DFD11FF7D7DFF2768B5B5
%B56F204452FF527DFD08FF7DF852FD05FF7DF87DFD0CFFA87D52FD05FFA8
%5227A8FF7D4A524B7459FD07FFA8527D7D597D537D597DA87DF827F827F8
%5252FD08FF7DF827F8272127F827277D52FD11FF5284AFAF2768B0932020
%27FFFF7D52FD05FF52275227FF5252527D525252FF52522752A8FD08FFA8
%7DFFA8FF7D7D52527DA8527D769E5276507DFD08FF52A87D7D7D7E7D7D7D
%FF7DFD0527527DA8FD07FF7D27274C2727214C27277D7DFD04FF7DA8FD0B
%FF52A8FFFFFF2769936827FFFFFF7D7DFD04FF7D52595252FFFFA87D527D
%A8FFFF7D52595252FD08FF52F827525252277D2752524A4A52745251747D
%FD07FFA852FD047D597D7D7DA8FF00F82121F8A852FD08FF7DF828274C27
%28274C277D27A8A852F80C057DFD0AFF27FD04FFAF272027FFAFFFAFA827
%FD04FF522E275227FD09FF5252275252FD09FFA8FF52A852515275502E75
%75529F5276507DFD08FF52A87D847D7E7D847DFFFFA852272784FF59A8FD
%07FF7D272827F82727282727A87D52270C43FB1A27FD09FFA8527D7D7DA9
%FFFF59FD05FFAF52FD05FFF8F8F87DFD09FFA8F8F8F8A8FD0AFF52F82652
%26522626282626522052272652FD07FFA8FD042728272727285259537D27
%59597D27FD08FFA8F821F800F821F8F8F8FFFFFF27050C0C057DFD09FFA8
%F85227522E59537D527D5259525927FD06FF7DA8FD0CFF7DFD0DFF7DA8A8
%7DA8A87DFF7DA8A87DA8A87DFD09FFFD117DA8FD09FFA8FD077DFD05FF7D
%7D7DA8FD0BFFA8FD0D7DA8FDFCFFFDFCFFFDFCFFFD94FFA8FFFFFFAEFFFF
%FFA8FFFFFFAEFD0FFFA8FD17FFA8FFFFFFA8FFFFFFAEFFFFFFA8FD31FFCA
%FD09FF7DF8270027F8270027F8270027F827F827F852FD0CFF270C05FD04
%7DFD0FFFA827F827F8272127F827F827F8272127F82700FD0EFFA8525226
%597DFD04FF52277DFD08FFA82E2752A8FFFFFF7D2E052E052752FD06FF52
%F8272727282727F827F827274C2727F82752FD0BFF520C1313F826204A26
%7DFD0EFFF8FD04274C2727F827F827F84C27212127FD0AFFA8A8A1A22674
%749F505052A87DFF275227FD08FF52537D5352FFFF270C13130C3C130C27
%CAFD04FF7DF8FD0927F8272727F827F852FD0BFF2E13050C0C4A7B4A2620
%7DFD0CFFA827F8270027F827F827F827F8F8F827F827F8FD0AFF7D050C05
%4A74514A75740505052752204BFD08FF5227272752FF270C130527537E84
%1313F8FD04FF527D7D5252595252527DA9FFA97D52FFAFA852FD0BFF520C
%131326C77BCC754B26A8FD0CFF52FFA8AFA8AFA8AFA8FFAFA852FFA9FFA9
%53A8FD09FF590C2E59279F9E9F9E752E520C52270027FD08FFA8F8F8F8FF
%7D0C1327A8FFFFAFA8520C1352FFFFFF7D59270C13050C0C0C27FFAFA827
%277DFFA852FD0CFFF805269F26F874CC4A2652FD0BFFA852A85227522752
%2784A8FF52F8A8FFAFFF52FD0AFF7D057DFF7E2752525959FFA80C2E5200
%52FD0AFF27A8FF2E13057EFFAFA9264A7E52130CA8FFFF527D2E3C1A27F8
%431A52AFFF8427267DFFAF52FD0BFFA84B26C7C74B269FC7C77452FD0CFF
%52FFA8FFAFFFA8A8A8A9A8A8F8AFAFFFFF52A8FD09FF59057D7D28522E7D
%AFAFFFA80C52272727FD0AFF52FFFF051352FFFF7D26754A847D0C0C7DFF
%FF7D522E1A1A052E1A1A28FFAFA8F82659FF8452FD0BFFA8264AC1C7744A
%26C79F7427FD0BFFA852AFFFAFA8270C0C2E050C05057EFFA9FF52A8FD09
%FF7D057D522E27A8842720AF7D0C2E52F852FD0AFF27FFA10C0C7DA95320
%9F4A5059A8051352FFFF527D2E1327510C3C1A59FFFF7D00F87DFFAF52FD
%0BFFAF4B26A5C7272075C77B4A7DFD0CFF52FFAFFF27131A351A431A2EF8
%52AFFFFF53A8FD09FF7D057DFFAFA85252204584A90C52272727FD0AFF52
%FFFF0C137DA826759F754A84A82E0C7DFFFF7D532726C7C726200527FF7D
%05050CF87DA852FD0CFF522626C79F51C77B26267EFD0BFFA852AFFFA827
%1A3520351A43131305AFAFFF52A8FD08FFA852F852595227527D5244A8A8
%0C2E52F852FD09FFA8F852520513527D4B265020267E7D0C0C7DFFFF527D
%27C7C7C7744A7451AF52053C131327A852FD0DFF274A26757551264A52FD
%0DFF52FFAFFF52130C76F8050C420C52FFFFAF59A8FD07FFA827204B4427
%2E277DA94B4427A80C52272727FD09FFA827527D27130C527D7D597E7EA2
%053C27FFFFFF7D595227524B51275152A8F835050513055259FD0CFFA8FF
%524A2026202752FD0DFFA852A9FFAFAF282727512727F852A8FFA9FF52CA
%FD07FF7D4493448D27847DAFA84B20F852352752F84CFD0DFFCAF81A0552
%A8FFA87D051A057DFFFFFF527D7D7D537D527D52A8FF520B3C133527A952
%FD08FFA87D7DF82752A852527DA8AFFD0FFF52FFAFFF53272752527D5252
%A9FFAFFFAF59A8FD07FFA8208DB68D2784FFAFAF4B4427A835524B2727FD
%0DFF5220053C132E052E0C1A0576FD04FF7D597D5259527D52537DFF7D05
%050CF87DA852FD08FF27F8F827212752765252A8A87DFD0DFFA852AFFFAF
%7D2051A1CAC9CA52A8AFFFAFFF52FD09FF7DF8F8F82752277DA94C20A9A8
%0C2E52F852FD0BFF7D27F8F827270C0C130C0C057DFD05FF527D7D53527E
%A9AF52A8FFFF7DF8F87DFFAF52FD08FF522127272751FFCA7D5227767627
%FD0DFF52FFAFFFFF7D4BCFCACFCA52A8FFAFFFFF52A8FD09FF522E277E7D
%A82E2E214584A80C52272727FD0AFF7DF827F852FFFF217D597D7DFFA8A8
%A8FFFFFF52537D5253527D52527DFFAFA8F8F87DFF8452FD08FF2727F827
%0052CACF524BF876762727FD0BFFA852AFFFA8FFAF594BCFCAC927FFAFFF
%AFFF52A8FD09FF7D7D52535259A97E2720AF7E0C2E4BF852FD09FF7DF828
%27F8A8FFA852FD04FF7D27272EA8FFFF527E7D7D527D527D52A8FFFFAF52
%05FFFFAF52FD08FF52F821F827207CCAFFA152277D7D277DFD0BFF52FFAF
%FFAFFF7D2776A14B52A8A97D7DAF59A8FD09FF7D7E2EA8537D84FFA8A8FF
%A8055227F827FD08FFA8F85227F87DFFFFA8F852527D52277E7D527DFFFF
%52597DFD06527DFFAFFF7D7DFFFFA852FD08FFA8A87D2721525227A1CFCA
%A1527C4B27FD0AFFA852FFFFAFFFAF27F827F827F87DA9847DFF52A8FD09
%FF7D7D28052E2E2E052E2E2E050C2E7DF87DFD08FF52F827F87DFFFFFFA8
%52FD047D2727F8F87DFFFF7D27FD04522EFD04525952595259525252FD0F
%FF7E525176527C767627FD0BFF275352525259FD07277D527D5252FD0AFF
%522E270C052E052E052E052E0552FF52A8FD09FF27277DFD0AFFA8F8F827
%FD04FFA8A8A8FFA8A8A8FFA8A8A8CAA8A8A8CAA8FD12FFAFA8A8A8AFA8FD
%0DFFA8CAA8A8A8FFA8FFA8FFA8FFA8CAA8A8A8FD0BFFA8FFA8FFA8FFA8FF
%A8FFA8CAA8FD0DFFA8FD0DFFA8FDFCFFFDFCFFFDFCFFFD91FFFD067D527D
%FD04FF7D7D7DFD0BFFFD0C7D58FD057DA8FD11FFA8FD11FF7D7D587D7D7D
%587D7DFF7D7D52A8FD14FF7D7DA8FD0AFF7DF8F827F827F827F87DFFA827
%27F82727FD0AFF52F827F8272127F827F821F8272127F827F87DFD0FFF7D
%26277DFD0FFFA827F8272127F82721F8F8597D7D5252A8FD10FF7D7D52F8
%527DA8FD08FF7DF827F827F821002752A8F82700270027F8FD09FF272121
%27F8272727F827F827212721F8F8217DFD0DFFA85226C19E4A52FD0EFF7D
%F827F827F827002727A9A97DAF7D27277DFD0EFF7DF8F8F84CF8F8F8FD08
%FF52FD042728274C217D52272727522727277DFD08FF52275252522E5252
%522752275227525252F87DFD0AFF7D525252F87551754A20277D527DFD0A
%FF7D21053C133C131305FFFF7DF87D2052A827A8FD0DFF7D272728274C27
%27A8FD07FF52F827F827F8FD062728F8F8214CF852FD08FF27A8527D527D
%525352A8AFFFA9FFA87DAF7D52FD0AFF527D7E53A87EA984A9A8A984A827
%FD0AFF7DF80C1A3C1A430C7D27272044F845F852527DFD0CFF7DF8F827F8
%27F827F827A8FD06FFA8272127272721272152274C27272127272752FD08
%FF528452272E27527D7EAFAF2752AF527DFF537DFD0AFF27FF7E7D7EAFFD
%06FFAF52A8FD09FF7D200C431A431A2EA87D27202727205252A952FD0BFF
%2E2E052E05272727052E052E52FD06FFFD06A85227F852F8277DFF5227F8
%7DFD08FF27A8527D597D7DFFAF7D052020AF84A8AF7D52FD09FF2751A9FF
%A8A9A8A9A8A884A9A8FF2727A8FD08FF7DF82E1A3C1A3C05A97D53F84C27
%2052A9A852FD0AFFA105133C133C131A133C133C0C27FD0EFFA8A82027FF
%FFFFF827FD09FF52A9FFA8AFA9A85252277E204BAF5952FF597DFD08FFF8
%74A0AF7D7D537D527D537D527DA9524A27FD08FF7D2005431A3C1A2E7DF8
%206FF84B20F828A852FD0BFF2E27050C052E0505052EF82752FD08FFA827
%52FFFFFF7DFFA85227522752FD0AFF27A827202045212727847D4B2052A9
%FFFF7D52FD07FFA8262075A97D527D527D527D537D52FF2726F8FD08FF7D
%F80C1A3C1A3C0C527D202052F85259AF527DFD08FF7DFFFFFF7D05131313
%3513130C27FD04FFA8FD06FF277DFFFFA8F87DFFFFFFA8FD0CFF5259458D
%4B68767D7EA9AF2045F8845284597DFD08FF519FF8AFA8A87EA87EA8847D
%59A8A927747BA9FD07FF7D2006433C3C1A3C27FF527DA828A8FF8427FD09
%FFA8FD04FF520C133C132E0C05A8FFFFFFA8A8FD04FFA85227277DFFFFA8
%FFFFFF7DFFFFFFF87DFD08FF277E20B58D8D27FFAFAF84452027A9A9A87D
%52FD07FFA851C77B27AFFFFF84272784537DA82774C74AFD08FF7DF80C1A
%3C1A420C527D7EA9FFFFFF5327A8FD09FFA8FFA8A8FFFF2713132E050552
%FFFFA8A8FFA8FFFFFFA805131A3C0C52FD04FF7DF87DFFFFA8A8FD08FF52
%A87DF820F8272E5984AF204BA87E84FF527DFD08FF51C7C77B27FF7E4B9E
%9F26A9AF2774CDC751A8FD07FF7D200C431A433C2EF827F8FD04527DA87D
%7DFD08FF7DA8FFA8FFFFA8053C130C27FFFFFFA8FF7D7DFFFFFFF8131A3C
%1A3C05525252A1FF7DFD0DFF27A8FF52F82784A85227274520AF7D59AF59
%52FD07FFA851C7C7C79FF82774755075262774C79FC74AA9FD07FF7DF80C
%1A3C1A3C1A0CF852A8A87D7D7DA82051FD08FF52A8A8A8FFA8FF52050CF8
%A8FFA8FFA8FF7D52FFFF7D050C2E133C0C0C2752050C2E7D52595252A8FD
%08FF52A8FF535984FFFFFFAF59204BA97DA9FF537DFD08FF51C7C7C87526
%7451264B269F269FC7C8C775A8FD07FF7D200C431A433C430C2152FFFFFF
%27277E7551FD08FF7DA8A852FFA8FFA10C132EFFFFA8FF52FF7D7DFFFF52
%0C35F83C1327132E762E130C050C0C130552FD08FF27A8FF5953A8A9FFAF
%FFFFA884FF5952FF7D52FD07FFA851C7C77426C7752627262650C72075C7
%C74AA9FD07FF7DF82E1A431A43FB13F87D7D277D514A7E4A52FD08FF52FF
%7D7DFF7DFFA10CFB05FFA8A8FF52A87D52FFFF7D0C1327133C05352EA10C
%350C350C35133C27FD08FF52A8FF525253FF7D7D537D5384FFFFA9FF597D
%FD08FF50CC74269FCD754B4A4B269FC7C72675C775A9FD07FF7D2105350C
%350C350521527D267D51517E5151FD08FF7DFF7D52FF27FF7D2E1A2EFFFF
%52FF52FF7D7DFFFFFFF8050C0C0C12F8767D0C13FD040C43132EFD08FF27
%A9FF84F859FF5927522752275952527D7D52FD07FFA8754A269FC7C7C726
%4A74FD05C720744AAFFD07FF7DF827F820F820F82721537C4A53514A7E4A
%51FD08FF52FF7D7DFF52FFA1054305FFA852FF52A87D52FFFFFFA805131A
%3C0C52FFA8F8130C0C0C351A0C27FD08FF5284AFA8AFA8AF7D7D537D527D
%527D5284527DFD08FFF8269FC79FC79FC7749F9FC79FC7C7A52026FD08FF
%7D002727F8270027272752A1267D4B517E504BFD08FF52FF7D52FF27FFA8
%2E0527FFFF52FF52FF7D7DFD04FFA85252277DFFFFFF5227522E52275227
%A8FD08FF52522752275227FD05522E52525227527DFD08FF2E2752275127
%5227522752275127524B5127FD09FF522727522752275227A87D277D5227
%FF277DFD08FF7DFFA87DFF7DFFFFCA7D52FFA87DFF7DA8A87DFDFCFFFD04
%FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.4d2f597, 2021/09/01-20:51:22        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2022-05-11T19:36:48+07:00"
   xmp:ModifyDate="2022-05-10T18:14:34+07:00"
   xmp:CreateDate="2022-05-10T18:14:36+07:00"
   xmp:CreatorTool="Adobe Illustrator 25.4 (Windows)"
   xmpMM:InstanceID="xmp.iid:a931a97c-f591-e04b-9ad3-2f60b30d117f"
   xmpMM:DocumentID="xmp.did:0db6cf34-4638-b74f-a0ee-9fc7f96eb566"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 16.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Set of Vector Icons Related to Digital Marketing. Contains such Icons as Affiliate Marketing, Advertising, Blog, Commission, Clickbait, Content Marketing and more.</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>flowicon</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>analysis</rdf:li>
     <rdf:li>data</rdf:li>
     <rdf:li>affiliate</rdf:li>
     <rdf:li>marketing</rdf:li>
     <rdf:li>advertising</rdf:li>
     <rdf:li>advertisement</rdf:li>
     <rdf:li>seo</rdf:li>
     <rdf:li>web</rdf:li>
     <rdf:li>algorithm</rdf:li>
     <rdf:li>service</rdf:li>
     <rdf:li>brand engagement</rdf:li>
     <rdf:li>blog</rdf:li>
     <rdf:li>blogging</rdf:li>
     <rdf:li>commission</rdf:li>
     <rdf:li>referral</rdf:li>
     <rdf:li>clickbait</rdf:li>
     <rdf:li>click</rdf:li>
     <rdf:li>hook</rdf:li>
     <rdf:li>content</rdf:li>
     <rdf:li>behavior</rdf:li>
     <rdf:li>customer behavior</rdf:li>
     <rdf:li>chatbot</rdf:li>
     <rdf:li>chat</rdf:li>
     <rdf:li>conversation</rdf:li>
     <rdf:li>service</rdf:li>
     <rdf:li>megaphone</rdf:li>
     <rdf:li>communications</rdf:li>
     <rdf:li>direct</rdf:li>
     <rdf:li>feedback</rdf:li>
     <rdf:li>viral</rdf:li>
     <rdf:li>message</rdf:li>
     <rdf:li>email</rdf:li>
     <rdf:li>hashtag</rdf:li>
     <rdf:li>topic</rdf:li>
     <rdf:li>trending</rdf:li>
     <rdf:li>campaign</rdf:li>
     <rdf:li>funnel</rdf:li>
     <rdf:li>filter</rdf:li>
     <rdf:li>line</rdf:li>
     <rdf:li>outline</rdf:li>
     <rdf:li>stroke</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>color</rdf:li>
     <rdf:li>glyph</rdf:li>
     <rdf:li>icon</rdf:li>
     <rdf:li>icons</rdf:li>
     <rdf:li>set</rdf:li>
     <rdf:li>vector</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Set of Vector Icons Related to Digital Marketing. Contains such Icons as Affiliate Marketing, Advertising, Blog, Commission, Clickbait, Content Marketing and more.</rdf:li>
    </rdf:Alt>
   </dc:description>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="152"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAmAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9P6nqlhpllLe38ywWsCl&#xA;5ZXNFVR1JOEC0E0rwzRzRrJGwZGFVYbgg4kUoNr8CXYqg7bWdNub64sYLhJLu04fWYVILR+qvJOY&#xA;6jku4rkjEsRIIzIsnYq7FUs1rzJpGjoDfT8ZHFUhUcpGHjxHb3OW48Mp8nA1vaeDTD94d+7qlll+&#xA;Yvlu6nELPJbFjRWnQKpr03UtT6ctlo5gXzcDB7SaXJLhJMf6w/t+1kwIIqNwehzFd87FXYqlvmTX&#xA;7Py/oV5rV6kklrYx+rKkIVpCoIHwhmQV37nCBavPpP8AnIby1HG0kmga8kaB2d2tIgFEfDmSTPtx&#xA;9VK+HIeIw8DLhVNJ/P7QdYEraT5c8w6isJAmNpZRzhC1ePL05mpWhpXHhRwu1b8/tB0cRNq3lzzD&#xA;pyzEiE3dlHAHK05cfUmWtKitMeFeF1p+f+g3mnTalaeXPMFxp1vyM97FZRvBH6a8n5yLMUXiu5qd&#xA;hjwrws98t6/Z+YNCs9askkjtb6P1YkmCrIFJI+IKziu3Y4CKQmWBWJfmB+Z3l3yLFZPq8dzM2oNI&#xA;LeK1RHakQUuzc3jUAc1713wiNpAtkFlq9reWcF3CG9K4jSWOtK8XUMK0JHQ5LgLWcgYt5X/N3yt5&#xA;j80XflqzjuodRtDKCZ40Echgfg/psjyfP4gNsBjTZWzNJZY4o2kkYLGgqzHoAMqyZIwiZSNALGJJ&#xA;oc0tsvMemXlz9XiZg52TkKBvlQn8c1el7bwZsnBGweljm5WXRZIR4immbdxHYq7FUt8xeYtL8vaV&#xA;LqepSMlvGVRUjUySySSMFjjiRfid3Y0AGKsYf8zbuwEV35i8s6joeizsqrqs7W8scXMgKbqOGR5I&#xA;FJIFWGx64aTTOQQQCDUHcEYEOxVj3nvQNb13y/NYaLqY0m9kIBuSnqVj/aTqCvL+YZKMqRQti195&#xA;v82+SkttI1aw/Ts976FtourxOlrDPdMoV4rxpCVgbkCysK8xsByBwndIiE1TSfzculFxceYdK02U&#xA;7/UbfTpLmIexmluInPueIyOyUg1v80fNfl2+j8r6xp1lc+Z9TCpod1az8LKUyOIg9zHK3rQBS1af&#xA;Fz+yprhAWk/8reUfOWn+Z7/VtY8wJf2F4pMemJAUSJuQKcGLEgRiqj+YbnfCZsOEM1yDJ2KuxVgH&#xA;lO3j1a4u9fvVE1zLMyQh9xGqgEca/On0Zssx4AIDk8h2NiGolPU5PVMy2voPxsyS/wBJstTtJYLp&#xA;A441U03U9KqexGY8chibDvtTpMeeBjMX+j3Mf0DzVHonlS/m1V2kh0e4W25qOTFZJFijUDqfjeg9&#xA;slqoDiBHUOv9ns0ziljluccjH4M7zDehdiqA17SdP1fR7rTdQi9eyuk4TxcmTktQackKsPoOSjzR&#xA;I0Hid95T/Ku1vLi0Pll39CR4i3167APFuJNPU78c2MdLYBt5PUe1Ph5JQ4CeEkc+4+5DJpX5T2/r&#xA;en5dki9MAzBNQvB8q0k3x/KebAe1ZNfuzv5j9SyXT/yjnRGl8uyygkhA1/esQe+xckY/lfNl/opl&#xA;/qZ+Y/UjtP8AK/5XXFzDYx+W5YkupVjIF/ecayELUqJBXGWkoE2nT+1PiZIw4K4iBz7z7ntWg6Tp&#xA;+kaPa6bp8XoWVqnCCLkz8VqTTk5Zj9JzXS5vWRNhH5FLwr/nJfTJdU1Tybp0UsMEl1JexLNcOI4l&#xA;LG2FXc9BlkGQNPnS6huLe5mgPpuYXaMtG4dGKmlUdaqymmxybJ6N/wA4/wAhPnt2AKsNPvPmD6eR&#xA;lyRJ7X5D/LPyYfJPl7WLbRrddcm0y0nF6KiQzy26F5Ca9SWJOYHaOGWXDOA5kM8GThmCejINH8oX&#xA;ttqiXExRIo2Djhx3INQBQA9fHOY0HYOaGaMp0IxN8+dO01PaEJYyBzLL87F0rsVcSACT0HXFWGed&#xA;DbXPmbyTDKeUI1WaYpvTnDp11JG1KfssBTJiJYiYTrzW1nceV9XgmAkilsrhHjYEggxMCDg4SomE&#xA;L+Xd2JvIXllpHLTSaVYs5NaljbISfvxMSniF0yPIpdiqV61baLrOiahZ30Md9YFJI7q3bcEoKldt&#xA;1ZTuCNwffK8+Tw4Sn/NBPyZYxxSA7ywD9IX9otnbC6nkjgRIhLLI7uQoCrycmvLapJ655rl1+bLI&#xA;zMjfkar3PT4tNARoAI+38kaJrPlvzIskDS6prXL6xfSM0k3qIgNvwdiSgicAoo2Gdt2Frp58Nz3l&#xA;E1fe6LW4hjntyLM/LbaqfL+nfpYAaoLaJb7ieSmdUAkZT3DMCRm5Lh2mOBXYqo3t9ZWNs91e3Edt&#xA;bRisk0zqiKPdmIGKvI/JP5gaKz6k+mie48urePFDeekyhXFKUrsVZaHx9u2bOvFAI+p46M5dmZZQ&#xA;mCcEjcZDp5fj3sru/PdgYvQ0lZL29mHGKNUYDl2rUA/dkBpjzlsHJze0GKuHDeTJLkKP4+SQXmjy&#xA;tdeXPJ0hEl/qN6uu68tQRHZ2LB1R6dpJxGo9+WUajKJyscg7LsXQy0+H1/3kjxS9/d+Or0bTdTku&#xA;7u9gZAotZOCkHruw3/4HNHodfLPlywIrw5V79z+p3+fAIRib+ofqTDNm4yyf+5f5ZKPNjLk8V1vT&#xA;NSfWb90tJmRrmUqwjYgguaEGmbvHMcI36Pluv0mU58hEJVxy6HvY83ljzADJILWVnmDeonpuAN6r&#xA;Q09sFjvCjBk2HBPb+iV/+H/MFQ4sJo5mcuZFV/hBI2I4/F0w8Q7wx/LZOXBOv6p/AT7RNM1JNZsH&#xA;e0mVFuYizGNgAA4qSaY5JjhO/RloNJlGfGTCVcceh73tUH9ynyzSS5vqUeS/IsngX/OVMTSy+U4l&#xA;IDSNfKpYhRVjbDcnYDLIMoofRfyk8jPb6dY3q3Bv9Ygjuv3LLcxR/UQfrCreRD01WcuK+HQU2yxq&#xA;OQsP/LeWy8s/mTfLd8hbx2l0ka2vLUSFmjDRrztFk50VgGYCgPWmRlybbsPdPy0876DJ5R8s6Sn1&#xA;w3q6ZZwkNYXqQ847ZA3+kNCIOPw7Nzoexyut2Mtt2VaZrlxeahfWstjLbR2cqxR3EnHhNyQPyj4s&#xA;xoOVDUD9YEjBrE03ytsdiqyc0hf5frwx5sZcmG+ZrLS5NV0HUb3Vxpj6XcyTQRO8KLcNJC0JQ+qK&#xA;/ZkI+HxPehFspAczSMGDJkvgjKVc6BNfJMdf+oSaLeQ3t4tha3MLwPeF0j9MSqU5Kz/DUVqK4TIA&#xA;WWOLDOcuGETKXcBZa8pWNrpugaTYWl39etbK3ht4bsFCJEiUIGqnw9FwWCNlnGUZ1IUe4slyltdi&#xA;rx/zB5tn8g+a9W0K2hhu5PNsq3+hrPMkcUN3ccbe4F2WIZYiyCRSPtbqN+hMRIUeTId7K4vIV8Yr&#xA;Vrq8imuo41FzKiMitIB8RVKtty3G+cfm9mZcR4Jjg8+Y/X9jtsfatRojdCWHm6Dyx5uHlHXp7ZV1&#xA;M+vol7E3AtWiGC6jLMY5OX92/wBl+go22dJoNDHTYhCO/ee8uuz5jklxF6BmW0OxV2KvB/zI8p/m&#xA;P5//ADD/AEG0Ull5SsWUw3jIy2/Hgpkl3/vZasVUDp7fEcsBADIGnsvl/wAuaVoOhWmiafCqWNpE&#xA;IlUqtXoPid6AAs5+JjTc5C2EgDsUj8wedPL/AJfuf0XpNouqeZriot9E09U9Yn+adlHGCMftPJ28&#xA;cJJPMsMeCEPpiI+4Up+VtJk0O+mvtdl+u+avMDK97cxD9xCi/DFawBiCsMVdu7GrHMDU9oQxZYYi&#xA;Dc+X7d3LhgM4mQ5RTby9/wAdPWP+M3/G8marsX/GNR/X/TNydZ/d4/d+gJ7nROvWT/3L/LJR5sZc&#xA;klMj1PxS/Qg/pl7jNeo/803/ACLH9MVSbzz50tfKejLqU6JcfvEDWxmSKZoiyrI8Sv8A3jJyHwj7&#xA;xgZwjbHPIn5pX2t6wmiatp36OvVieaaS5Zbdm9WTlapDA5LvygILGvXFlKFCw9Xg/uU+WUy5tkeS&#xA;/Isnz9/zli3FfK560+v9P+jbLIMovPdN/PHzdY6T9RglhSOIWqWYRI0jijtuXNDGF+L16jnuOm2W&#xA;IOMJ5+UOm3dl+Ywe6e2eS/0m5vlFo8bxqtxEXCkR/ChH8vb5UyE+Sb2fQn5cqG/LryuD0OkWFf8A&#xA;pGjys82JCUeSPym0vynr+oazb6ne3s+oKVkjumQr8Thy78FXm/IbNtQE7ZIztTuzrIK7FVK7NIT7&#xA;kZKHNhk5PA/zy0DVhq8Wt8Wl0x4kg5ipELqT8LDsGrUHxzA12OXFxdHv/Y7W4vCOHlksn3j9jGNI&#xA;fUfMkNtZa1qpt/L+jRl2dyCwSoAjhTrLKahUG9B7ZjRJmACfSHeZ4Y9LKU8WO82U/gk9I9T3vaPy&#xA;00K60bQ5kkSW3gubl7mys52DSwwMFCLIQAA548mA6fOubXS4zGO7537Q62GozgxIJjERlIcpS615&#xA;dA9AwurYr+ZfmhPLXla51J5prcmkUM9vCtw6Svsrem7RoQOvxMBk4AMSCSs8v6F5R17SrnWm05Ll&#xA;fM0UUl813GWeVERVRGWQtwCcdlXYHceOM+axvqh0/KjSLdRDp2s65plkPs2NrqU6wqPBA5d0H+qw&#xA;yNs7R9p+W3ku00i+0yPS45YdSTjqEtwzzT3FOhknkLSkg7r8Xwn7NMbQSknkzz1p+pec9X8t2txd&#xA;yHTFRI4J4QscawUil4zl3kkLMQayAHwqMskBTWAdi9BypsdirGvNmm+YJaXlh5ln0W1hUCWGC1tb&#xA;jmzNQMTcJIR1pQZTqdTDDjM5/SP7GeLGZy4RzLHZfKD3V5aW+seZ9c1SK9RXMSXMdjCyv2aO0jhe&#xA;h/18wZ9rRGXHARsZQCD73IGmPDKV/SjtH0/StE0jVrbRNPt9LS3kjHqWylZZCZCvKWQlnkag6sc1&#xA;OftXNkw5/wCE4zEAi7+qu/ycqGmjGcOvEDz9yPmkeS90OSRizsqFmO5JLDKMkzLLpZSNkgfeyiAI&#xA;ZQEb5e/46esf8Zv+N5Mz+xf8Y1H9f9M2jWf3eP3foCe50Tr1k/8Acv8ALJR5sZckkZW5H4ZuvZ9v&#xA;15e4zXF/5Zv+D/txVJvPXkq283aMmmzSrbUkRnuDDHLMIgwaRInevps/EfEPDuMDOEqSDyN+VUug&#xA;6sutalqB1LUGjeKYXAW5I4SUtXinkVJEKQAKwpufYDFlLJez1SD+5T5ZTLm2R5L8iyeAf85XI5Ty&#xA;u4U8FN8rNTYE/VyAT70OWQZRfPBB5E+iD71GTZPUv+ceLSe58/MkaGn1C5V3oSqc1CgsR0FTTIz5&#xA;Ik9rtb38xPJ3lTS7G8sNJltNOt7ew+swXd1JIfSiEayek1rEu/DoZB88lhxCcqdX2rrvyuA5ALPI&#xA;e/z8lPy95280X+v2kDus0ErhJoVjUAJX4nqByHEb9czc2mxxgS8p2d25q82pjEm4k7iunU9+z03N&#xA;W947FVC73VVrSp6n5ZODXkS+8srW6tpbW5VJ7eZSksTCqsp2IIIywixRDHHkljkJRNSHIhhnlv8A&#xA;KzStG1aS8aeS7tYpTNpdlKSY7d3ADPQmjP8ACAGp0A6npjYtJGMr59z0HaHtJl1GIQoRkRU5DnLy&#xA;8h5foZvmU82mMZrGp9hlB5uSOS7Al2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvKPzt8+eefK91pMflmH1Y7pJmuv9HM9CjIF3HT7Ryc&#xA;RaQ8zH54fnX3tKf9GLf0yXAE0Fh/PL87gTSyqOx+pH+mPCFoLx+d/wCdRAra0PcfUW/pjwBaCceS&#xA;vzf/ADc1PzZpOn6na+nYXV1FFct9TKfu3YBvip8O3fExFIoPovKkOxVRvbpLSznunBZII3lYDqQi&#xA;ljT7slGNkBqz5RjhKZ5RBPyeX2v5taq2rtHJbxvACS0CihC7Uo9Tvv3H0Zn5dLGMCR9QDxmm9pM5&#xA;yxMxHw5SqhzA/TX2slTz9cq4NxppWH9po5AzAfKgr+GcHj9pwT6obeR/Y+pHskVtPf3Mp0/ULTUL&#xA;VLq1fnE/foQR1BHYjOk0+ohmgJwNgupy4pY5cMuaIy9rdiqQefdV1TSfJ+q6lpS8tRtYC9svD1Kv&#xA;UD7HfDEbq+ev+V4fnX/yyf8ATi39Ms4AyoOf88PzsFONny8f9BI/hjwBaCjcfnt+dUcJeSAQDkih&#xA;zZbVZwoG4p8RNMeELQVj+eH52BgBZ1Hc/UT/AEx4AtB9C+QtV1TVvJ+lalqq8dRuoA9yvD06PUj7&#xA;HbK5Ddin+BVskiRxtI5oiAsx60AFT0wgWxlIRBJ5BID5+8sMCsF36sx2ji9OVeTdhUpQYNXCeHFL&#xA;IRtEE8w67S9s6TNljjjP1SND0y/UlzefXEw/cKEAIZKOST48qfwzjD7TZeIEQHD3X+n9j1w7JFc9&#xA;0fH598vIgW9uPq1x+3Fwlenh8SoRuM6zsyc9VgGURq769xp5jtHtLTaTMcWSdSHlLr7gUZNr8X1u&#xA;xjgIeC8SORHoRVZTRTvSnjvkc+uw4sgxTNZJchR7693NzMMJZYDJDfHV35Vf3JvmSrsVY9q/muGw&#xA;8w6bpLS2qNfepVZrhY5/hH7v0oSOUnNvh2Ip75YICmsyKZ6trNjpVg17ePxjGyqN2Zj0VR3OOPGZ&#xA;mg0azW49Pj8SZ2+0+QYYPOPnLVWMmkaekdrX4XcVJ/2blEP0DM38tjj9R3eYHbGu1G+DGBD8dTQX&#xA;wee9e024SLzBYcYXNPXjBUj36sjfIUwS0kJD0FlDt7U4JAanH6T1H4os5tLq3u7aO5t3EkEqho3H&#xA;Qg5gSiQaL1mHLHJETibiUv8AMk0sGl3U0TcZYreV428GVCQd/fLsAuQHm4vaMzDDOUeYhIj5PLIf&#xA;NnmF+fPUjHxUstVU1I7bLmbqR4fDw4zPikAaPId+7wul7T1GTi483BwxJFj6j/N2HVPvJGvavqGr&#xA;Sw3lyZolgZwpCj4g6CuwHY4dTijGNgdXYdgdo582YxyS4hwk9O8Mg8w+YLDR0ga7uYrYTFuBldE5&#xA;caVA5keOaXWa4acAmM53/NF/N7XBpzluiBXenUP96nzGZkuTVHmmGUOQ7FWnRJEZHAZGBVlO4IOx&#xA;BxBRKIIo8nj1to9gbqW4WMrwlf04+ygHYb7mnzzjdd7U6rJGWL0xBsWAeKvnX2M9P7GaLDljlHGa&#xA;3ESfTfyvbzKItJJfXZZGNXBYCm3WnwkdqZzEhs9dMCtmSeRpni1e9tFr6MkQm49gysF/HlnUezGY&#xA;8codKv5H9rrO1Ig44y63TNs7F0TsVWT/ANy/yyUebGXJKmjmLErLxHYcQcvcdLG8xaPFKUk1OIlD&#xA;RlFD9FRXLBhkejr5dq6aJo5Ise/MLzT5dXydfTNcJdNaejdpAjcWeS1mSeMV7fvI1r7ZRqcObg9F&#xA;A2Oe+3Vv0naelnkEeMEnuZzknJTCD+5T5ZTLm5EeS/IskPqP/HPuv+MMn/ETkofUGnU/3Uv6p+5h&#xA;nlaG0PlezaSGN2k9UFmoG/vXH2qE5la3GMnFCX0yFH5Oi9n4iOmxzAHEL3/ziizpulpDJcTD07aF&#xA;WeWX1KhVUVJO2c4fZrSDpL5vVw7SzzkIirOyG1E6Nd+T5r3TuE1tLAXguANyCfFgGB9j0zd9mYYY&#xA;oxhj+h0XtJhkMeXxY1lA35PJ/Pn/AJN78tv+YTRP+o18syfVL3lyuzP8Vx/1I/7kPpHMdy3YqwHX&#xA;fLehan+bWjTX9lHPLDpN1dRu1aia1u7UQtsRXh670B23+WSBNKp+bK6v51stIkJ+qwKGdPElTI/3&#xA;qoGbDT+jEZdXjO1h+Z18MB+iI/48fsoMlubq2sLdSUpEtEVIwNhTagqNts1Gv7Qhpocc7O9bc/vD&#xA;1+l0pyHhjQofBI9IuJNfi1K01CksClVjHEAryL7inccRmv7C7Sy555DI7RIr425PbfZmHwowI+sG&#xA;/sb/ACzuZ0XUtKlPJbOUGM9gWLK4+9K50mtiNpd7x/sxlkPEwn+CX6wfuZL5ghM+nXEAqTLBKgC7&#xA;n4lI2zAllljhKcRxSiLA7yOj0mfBHKPDkajP0k9wOzAh5dItzALKTiRuTGxavjWnXOGnq+1JZvGr&#xA;Lxf1ZV7qqqdnj7I7Njg8HhgYeZFnz4ud/gK/kvR7yx1qeSWCSKP0GQM6MFJ5odiR7Z1XZfaeqzDw&#xA;9RAit+Ix4fhyq9+jqMvYGk0uXxtPLaQ4eC+KuRsG76db582I/nQdN1e6tbS8nRbe2MkFsypIWFxc&#xA;AR/F0rwZKim2dDjwjhs9Xn9V2vmjmOPEBIR9R6Go/UDff5PU/K+rnVLSKdynrcv3iRhgFqaqPi6m&#xA;nWmU58fCadl2VrfzGMSNcXWr2+bJMw3cuxV2KvP/ADDot3pl/PdQxNLp1wxkLIKmNm3YEDtnC9s9&#xA;lTx5DkiLgd/c9Fo9VHJARJqY+1IoHtRL/o6vNK+0cSqxIr2H05o445SNAWXPldb7BnflDQriximv&#xA;Lwcby6p+7/kQdB8z3zuexOzTp4GU/rl9gdB2hqhkIjH6Y/ayLN6612KrJ/7l/lko82MuST6hBLPY&#xA;XMETcZZYnSNulGZSAfvzIiaILg6nGZ45RjsTEgfJ5zZeWZ/ql3Fe27QXZkijtpJAwUEt8RBGzDLd&#xA;XrfDnEg+ne3mux/ZuWow5ozjw5Rw8JN0O/37Mf1XyFc6u0EEsEk6qQaQOwVlcVKSUp8DcRWuWQ1e&#xA;HMObjy7G7Q0EtoCXFtxD1AHv/okd5ezafBLBYW0ErcpYokSRutWVQCfvzGkbJL1umxmGOMZbkRAP&#xA;yTiD+5T5Zjy5udHkvyLJiX5g+dIvL1vaWYgWe81f1Yrf1pktoUCKObyTSfCtOYp45XkzcBDs+z+y&#xA;DrYz34YRG9RMjvfKI5sU8h+bbw3sfluaGz4w2z3K3dtdx3a7zAcWMPIKf3njXLYas5Zmx06G2nP7&#xA;N4+z9HEwnOVT4fXAw58Ur3ZF5rmRtB1FRKZT9VmqQOKD923QHc5bk+g+4uFoK/MY/wCvH7wwzyF5&#xA;m0/U/wAub/SIA63mixCO7DgBSJ2aSNkIJqDQj5jHs8bRR7cG56g/jagxfz5/5N78tv8AmE0T/qNf&#xA;JZPql7y4vZn+K4/6kf8Ach9I5juW7FWPa/omsPqseu6K9v8Apa3s5bG3jvef1fhPNDLIz+kOdf3A&#xA;40P9hCsM1VPNeka7Z695hjsmkd/TJ071THxC8SGEw5cypNN6ZsdMROBg8d23E6bWQ1IHpOx+7/c8&#xA;mVy2ttq0Iuba5VoZaMrKOXQUp1G+cz2n2EdRMkz4brpfL4h7PQdqw8MGA4o99/sQMcVp5Wtry7uL&#xA;kTG4oYouPBiy8qKN2r9r6Myex+xzpzKpcXFXSqq/M97j9t9twGMSkOHhuhfM7Kn5aafcLaXmq3AI&#xA;e/kBjr3VSSW+lmP3ZudbMWIjo877MaeQhPNLnkP3Xv8AM/YybU68BTbbsePcdzmNjeiypXyb+Zv+&#xA;Rq5Y0qtsSXNSTt3cN+AxSHmv5y2nmCKWyvNEtLm/muEmilSJPUWIqq+i4HFqfExNO+XY8xiKDrNV&#xA;2Ni1E+OZN3HrtwjmB73pmj2EVhBDaRO7xxmiGQ8iATUCvgOgynLLisudo9OMMBCJJA706zGdg7FX&#xA;yL5+/OH8yT5s8xeXxrUkelQaheW0MMUUETrFBO4jUTJGswoEG/Op75YAGYD1z8kNe1m58hxS3N5L&#xA;cy/WJh6k7GV6Aig5PyOYmfIRKg5mHDGUbIZra+aRDOVuY0CvsG2R0YDcOO9exGUQ1FHcN+TQWPSf&#xA;x5J3p2sWV+WWGRTIu5jDAmnj+OZOPKJODm00sfPkjstcd2KrJ/7l/lko82MuSXZc46XXkDEosvxq&#xA;jckY+INRmszxkNju7vS5IkEx2PUNabbxRTfu14jiAep2UUHXDpR60a+ZOPfvTPNk6VMIP7lPllMu&#xA;bkR5L8iyYt+YfkrTPNOiPHc1ju7RJJLG5FT6bld6rUclbiKjITwidAufoe1suiJnjrluDyNMH/Lj&#xA;8tZvL09zqOo3q3FzKv1eJLdeEaoxV2ZvUJJNVFKdPftZh0scZsWz7V9oc2txjHOMQBK9r7iOpPey&#xA;nzNZlPL2pyI4eNbScsR2AjbLcp9B9zrez4/4Rj/rx+8MY8l6Npll+Vst7bW6xXeowmS9mFS0jI7I&#xA;lSSdlUbAbffj2fyij25FZNQPxyDDfPn/AJN78tv+YTRP+o18lk+qXvLi9mf4rj/qR/3IfSOY7lux&#xA;Vhf5m/mfpHkbSxJMBc6tcA/UdPDULdvUc/sxr49+g9pRjaQLeSeSLPzd+b/nNfMuu3n1PQdDZVis&#xA;7QsimRhUxICW+2BWVySaUUf5MxIwNjm16jBDLAwmLiWc6X5YvbnzP5j0zSr57KPRp7eJHLNykW4t&#xA;Y7jcpx+yZCuZY1gI9Qt5WfszOErwZTAH3/eP1MgsPy3gScXWs3z3zLQ+nuFNOzMxZiPuyMtYSKiK&#xA;Z6f2aiJceeZyeX6zz+5mNo9q9vGbUobcKBF6dOPGm3Gm1KZhG+r1EAAKHIKd7byTKAlB7nf8DkoS&#xA;pjOJKC/RVx/Mn/ALk/EDX4ZXxadOjVJU7U2UL+rHjC+GV8lg8gAYA8SGG/cY8YT4ZVY7aVZFYgUB&#xA;qd8BmKSIG0XlTc7FXnuu/kL+WesXN9ey6dLb6nqEsk89/Bcz+oJZXLyOqSPJCORJ29Om+2SEim07&#xA;8qfl7onlfQxo+nSTyQq7yLNcMrycnNSDwWNaf7HKskBLfq2wzyj7la48vTS/aVSw3WRTRgR3B65i&#xA;nTlzY62IVLHRdQt7qOUzsVU/EGKEEd+i1yUMMgbY5dTCUSKT3Mt1zsVWyqWjZR1I2wg7okLCE+qT&#xA;eA+/LeMNPhl5v+ZPl78373WoH8oXkdvpa2yCaNniUm4EknJvjVj9grkZcMubfhJhv1QHkbyz+eFp&#xA;5ns5vMd9HNog9T65ErwkmsTiPZEVtpCp2OCAjHkyzTMxu9TGny8g3I7duRp92T4w43hlHxKVjVT1&#xA;A3yonduiKC7AlSu42ktZo03Z0ZV+ZBAwxO7DILiQO5i9xZebYiEsLW2eE7v9YNTy9uLUpTMuMsfU&#xA;l0+qGsEh4MYcP9Lv+BUhD+YAUqLPT+J6irUP/D5Liw95cYHtMfw4vt/4pDXel+ebnTn082dhFbOn&#xA;phYiy8VHQKORAp8sMJ4YkEXs1avH2nnhKM44/VzNm/vTiHyZpEz6LeahYW0+paZbwRC5kiSSRGgA&#xA;ZPTkILDjJUimYs52T5l32kwyx4oRPOMQD8AyPKnLdirwrzt+Q/mbzR+Y9xqs+oRDQ7x0Z5uTGeKJ&#xA;FCmJIyvGu3wmtO58MmJUGQL2XQNA0nQNJt9K0q3W2srZeKIvUnuzHqzMdyTkCWKW675H07V7v639&#xA;d1DTZ2/vn0y6ksjKQAqmYwlTIVVaLyrQdMNqEvbyLe6VY38+h6rf3+qS2zw2sOtX9xd2gdiCGaNy&#xA;4qOPWniOhwxlSJC0X+XOl+Y9M8sW9n5gitIL2GsaRWA4xLEPsVUBVDePHbDKVqBRZPkEuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV88&#xA;f85XTzC48vQiRhF6dy/AVK8uUY5cfGmWQZRfP3Nv9+H/AIA/0ybJ7N/zjprkmj3nme8ld3tLLSJb&#xA;6aBTQObZg1adOXHkB88jMIklfl3WdJ8/eb7y6/MXWXt7X0nks4TL6NurcgBGhaqoFXoOrdyT1kBT&#xA;GdgbJ1+Tf5g3Wi+fx5Ygvpb7ytfXMtrYCYklByIt5UBpx50AZRQb9K5GQSRs+nMqYuxV80+b/wAg&#xA;PN+peatY1SHUNNigv765uYUllmVwkszOoYCBhWjb0OXxGyPGASn/AKFx858afpTSfn689f8Akxhp&#xA;fHi5P+cafPLUZdT0xh7TTkfhb40vjB1x/wA44edIYi82qaVDGCAZGnnUVJoBVoKbk0wE0yhPiNRB&#xA;JesfkZ+Wmu+SBrQ1W4tp/r/1X0TbPI9PR9blz5xxf78FKZCaOMSeqZWrsVU5Z0jNGr45IRtiZAMb&#xA;19/Mt63padIlrbA/bEhWVj7lR8I9hmn7Q0+synhxkQj79z9mzn6TPpobzBlL3bO0BvM1k3o6g6Xd&#xA;sf2y5aVfkWHxD2OPZ+n1mI8OQicffuPs3XV59NPeAMZe7ZkkdxHI3Fa1675uDEhwBMFUyLJ2KvDP&#xA;+clrNtQ1Dydp/qmOO5kvQ5G42+r707kAmmXYI8UqcfWanwMMslXwi3m5/K2wNP8ATptv8lc2P5Md&#xA;7x/+i/L/ADI/MvQ/y4/Ljyx5TeHzZrGohJCSmmmdxCqEgqz7EcmZagDpTf5YWo4cZol6vsfLqddj&#xA;4ow3PSNnbv8AmySb829MX/EDpLbMmnBF0kepV7qQqeRpXdQ9Ps9swTqx6uW3Lzeth7MZT4IIleS+&#xA;Pb6Be3xrvZt5R8yQa3pFtcrPDNM8afWRA4dY5ygZ4+pOxPfLIyEo2HT63Sy0+aWOQkBZ4b6i9in2&#xA;LjuxV2KvNfzh/MO78r2dvcaLq2nC/sp0bUdEnZHuZ4ZAAqqgPNBvyJoNt67UaURaQHlbfmT+Zvl6&#xA;TVtdm0xrCLzc8J0+6uizw2hXkVMatyXdHJoyitK0IFMnwpFF9E+V9Wg1PRoJk1Oz1a4jVYr27051&#xA;e3NwFBcLxZ6faBoT3yssSmuBUm8y+TfLHmaKGPXdPjvltiWgL8lZC1A3FkKtQ0FRXCDS2x8/kl+V&#xA;RJT9AxVpuBLODT/kZh4iniSew/JPypoOs3B03VJbO21yyutNuNKnZZDLHNGSwgYlHrHxDb8tgceJ&#xA;NpR5C/JTy7oNjKPNNrb3+rSTSKpn+KEQo1IzGrfCea0cnqK02ploNtWSZvZW0r8k9LtvzNsfMOkq&#xA;Lfy/aJ9aaAMWU3YLKixE1+AbOd9iKDrtGZZQkSN3sWVJdirG/MWsaRpYWbUrk26ySGOFVVpHdzvR&#xA;URXdvoGWnJGAsp0+iy6iZjjFkbnkK95OyX6T5o8ualfPZ2NxLPdxp6jW8lvNE3AmlaSRx9zghnjI&#xA;0C2arsrPp4CeSNRJraUTv/mkqfnq7u7byrqpiP1ZxayFCrUkHwnccfs4Mx9BruZdkQB1eISGxnH7&#xA;2P8Al8wat5T8sXZil1u5sWETWqTL6KTbfvbrlXeFF+Gvj03GUQjcIkgn8c3b6rKMeq1EIyjijK96&#xA;3/qxr+cefuenWX7f0fxzIyPOYkVlbah9RvFsrKW6KGT0hUIKAkk0Aqfc5j6vUDDiOQixFtw4+OQj&#xA;3sc0TWLvVYLu4u1UcZeCRdFVQoNKn59TmL2JrZ6iEpy/nbeQps7U08cUoiP81GrMi/ZWFfk4H8M3&#xA;bq7XfWj/AMV/8jB/TGltCaxrF1p1nFeWyq7+qqNHXkrKQaio+WantnVy0+ITj/OHy3dh2bgjlyGM&#xA;v5qf6deLe2UV0EMfqipQ0JBBoRUe4y3SagZsQyAUJLmx8EjHuRGZDU8W/wCcgP8AlJfI3/GW+/Vb&#xA;5k6X6w63tn/FMn9VJM3L5UzrVNQWLyRY3KaFDrtpbw87uKeSFEhECEPJSVX5GoOyiuaPW2CfTxPs&#xA;nsiI5ceMRzHDIxEQYiRJPKvTVb97zCHTtRfR9F0w+WYXu9XujewXgkt1luYE+NoUHHlAnEr9pqe2&#xA;agRPCBw7k37/ANT6dPPjGbLk8eXBihwGNSqMjsJHf1G75D4vcfJ8MyWKiTRIdAkMpJsYGidaCnx8&#xA;oQq1bNnDaP08L532hISyisss4r6iJD4erdlGRaHYqlurwHVdFurexmjLzK0SShqoHVuLAsvL7LKQ&#xA;ffLMcuGQJcLW4jnwShAi5Cr/ALHg/maE6NrE1hqlrzukAPq0DK6EfCys1CRm3hkhIWA+e59LqdPL&#xA;gMyK7iaQn6aS9pALeW5oC4ip6myKWLcd/sqCflhuA6MB+ZlsJyPxkzD8uND1HVZodTskW10+0uo2&#xA;fmSgkKMGcIqAgkAU3plGfPCIMa3Idn2X2Zqc2SOUy9MJDmTvRvZ7F68PrCD1F9cqXEVRzKAgFuPW&#xA;lT1zVU99xC66pd5h8wWeh2H1q4BdmPCGFdi7daV7DxOW4cJmaDgdo9ow0mPjlv3DvLBI/wA0dTF4&#xA;Zns4WhIC+mC4agJP2iSK7/y5nnQxqreTj7WZeKzCPD8b+f7GSSad5M8z3Oi+Z7qNPrmnSn6lJIwR&#xA;lloT6bCvxFT8ajxFcwJ45RJi9fpe0cWbEMgNCW2/f3e9PLy81SLVLC3t7D6xY3Hq/Xb31VT6vwWs&#xA;f7s/FJ6jbbdMqc1A69pvmi61jRrjSdUistOtJ2fVbV4jI08ZQgKGDDuaU2pXlvxCkhKe4EOxV51+&#xA;aXlXVtZtYL/Rrh4NW0lppbZY3MbOHA5Kjgrxf4BxNcjnwGYFGiHbdidrY9JOccsePHk58jyvodjz&#xA;Yn+VWledrrU73WNdW7UrCLWF9Rkczn4hJRA5ZuA+jc7d8GmwThImRvZye3e1tLqMMcenhwVLi5RA&#xA;5V0PNlPneORPKuriRSD9Vl6/6pzI1H93L3Om7F/xzF/Xj97HPIPlqz0fyWl5LNqMo1+eKaaTTi8b&#xA;WwUFEr6bc+H8zAeG22Y8D+6jz+DttXGQ1+WvDuJkanVHrQva+7k9b0S0W0tFtlkklWIBRJO7SyN1&#xA;3Z2qWOXSFAB0Ry+JIyIAvuFD4BMMglLfMf8Axxbn5L/xMZq+2v8AFJ+79IcrRf3sfx0YlpOpiykY&#xA;OP3EhrJ4gjblnJ9i9rnSy4Zb45c/LzdnrtH4wsfUE11HX7G2hR4mSUyAMDUcQD4n+GdR2l2/jwge&#xA;HU5HfyA8/wBTqtL2bPITxekBbY65aXcTO8q25jBLEcSpA9yO3hh7N7fx5gRkqEhv5EeX6l1XZk8Z&#xA;HDcgUt1XVPrjBI9rdDVPFj/NnL9s9sHVS4Y7Yh9vmf0O00Oi8EWfrLLPLn/HFtvk3/EznV9i/wCK&#xA;Q936S63W/wB7L8dEyzaOK8W/5yA/5SXyN/xlvv1W+ZOl+sOt7Z/xTJ/VSTNy+VMl0/zrounDQ/Kz&#xA;WTXr65ObW5d6LEvrEBqghi9AwFKD55rdXE3Z5F9B9mNRHwxHGSJw9RPmT09z0kaHaiW2kFrCHs1M&#xA;do4Vf3SMApWPb4QVAG3bMO4/J6XxMtSHEanvLfn7+9EPPbWMkCTEmS5b046CoqSB/HMPVa6GKUYy&#xA;/jND3s8OnJBI6I7Mhi7FUj0zVJLjSYrlAY+d9NAwYrIeK3jxHdzF149qkdgcslGj8P0OHizGUAR/&#xA;OI/2RHl+O9IfzP8AKsXmLS5ZbJC2saUOagKw9SNhyaMMRRjQVFK77d8swZOE78i4Xa+jGeBMfrh9&#xA;o7nlHlKzj1RJNCtLXnq2pyojXsiqyW9rH8cjJ3DEjf22HXM3Ia9R5B5rRQGQeFEeuZ590er3m3t7&#xA;TR9AmsdLBjXTYjGnwgnmED8v3hiRyeXI/EBXvmtJMpWer2kYxxYjGH8A/R50PtXyagB5rg07i9Ws&#xA;Jbjlz+D4Zo0pwp1+LrXGvTfmk5f34h/QJ+0MM/OC3hP6KuLmIy2yGVCQrNRm4GmwahYL+GZuhI3H&#xA;V5n2phO8ch9O9713MAV/Kf6U5tZy/o3mT6IRvV402HLjTr/t98zKPD/SeaE4eNZ4vBvlxDir3/j3&#xA;9WV6NZwD8uNXuIojHbtdRtbhlKmquiMwqFrs3GuUykPGiB3OzxYpfybllLlxx4fmB+mmL2/m7zFa&#xA;x+jb6okUS/ZQXDgD6O2XSxxJ3AdZi1meEajPIAyPyh5q8yz65Ypc37TQzTIhUSNIjKxoftZVmww4&#xA;CaDn9ndp6g6mETOZBkAQXsOah9FdiqW3AJaUDqS1MvjycaXNBWSvDbuzrTetDQe3fJFiFLUEstRs&#xA;p7K7iEltcI0cqc0FVYUO4aowSjYotuHPLFMTjtKJsJbJ5fgitdKTR706c+k/BChb1I5IW4iSOZOX&#xA;x8gtQa1B3GVHDQHDtTnw7S4pZDmiJ+Lz6EHoYnpXd1DLLBgwcqag0oR9OHI4OJFZW2pb5kIGiXRJ&#xA;oAFqf9mM1fbX+Kz936Q5Wi/vYvNyXvHotVtlO56Fz/TPOuXvem+n3rb1ODoF+FAtE7AGu+52BpjF&#xA;MDa60gcljIAUYcSKhuW+1aeGMiicu5wL2b0arWzHY9Sh/pjz96/V73pHlsg6JakGoIah/wBmc9F7&#xA;F/xWHu/SXmdb/eyTLNo4rw//AJyOvYLLWvJV1cEiGKS+aQgVIH+jitMv08gJWXD7RwSzaecI/VIb&#xA;ML/x75T/AOW//klN/wA0ZtfzMO98/wD9Dmt/1P8A2Uf+KU9M8xaTq35heT00+YzelqMbSNxZQOTo&#xA;APjC+GYmqyxkNnpvZzszPpjM5Rw8VVuD391vo+W/muItat3ChLaNljKg1PJGrWpPhnI5NZPLHUwI&#xA;FY4mvjGXN7SOEROOQ/iP6Ql7/wC83l//AIyr/wATXNXL+70n9YfeHJH1Zfd+tlOdi6h2KsAb/lGN&#xA;I/8AAiH/AHVZMyf4j/V/Q6T/ACMP+Hf9PCyfS75pvMWt2pQKLX6rR+Tkt6kRb7JJVaf5IHvlMh6Q&#xA;XYYcl5Zx7uH7mC/lz/ylk/8Axhl/4mubLWf3YeJ9m/8AHJf1ZfeGQ+ZLtptD86QFAotl4KwLEtys&#xA;onqQxIH2qfCB9++YMBvH8dXrNVO8ecd3/EhHy/8Akw7b/tkT/wDUTDkf4Pi3H/Gh/wALP+6inl5Z&#xA;Wt7bPbXUSzQSCjo3Q5CMjE2HKzYIZYGExcSxpPy08tLP6hE7pX+5aT4PwAb/AIbMk62ddHRR9mNK&#xA;JX6iO69v1/an93pGn3OlvpjxBbNkCCNPh4hSCvGngRXMeOQiXF1dxm0ePJhOEj0VVBi//KpvLP8A&#xA;vy5/4KL/AKp5k/np9wdJ/oW0/wDOyfMf8SjNK/LrQdNvYbuF55HgPKNJGTgGHQ0VFO3zyM9XOQrZ&#xA;u0vs5p8OQZAZkx7yP0AMozFd+7FVFrSNmLEmpNe39MmJlgcYaNlERQkkfR/THjKPDC39H23h+r+m&#xA;PiFfCDv0fbeH6v6Y+IV8IKsMCRAha0Pj7YDK2UY0qZFkhtRsINQspLOcsIpaBihAOxDdwfDMfVae&#xA;ObGccro9zbhynHISHMJUvk3S1AAkmAHQBk/5pzS/6GdP/On8x/xLmfynk7h9v62z5N0sihkmI8OS&#xA;f804/wChnT/zp/Mf8Sv8pZO4fb+tw8m6WOkk3/BJ/wA04/6GdP8Azp/Mf8Sj+UsncPt/W03k3S2B&#xA;BkmIPUFk/wCacf8AQzp/50/mP+JT/KeTuH2/rTXTrCDT7KOzgLGKKoUuQTuS3YDxzdaXTxw4xjjd&#xA;DvcPNlOSRkeZROZDUxL8wPyx8u+eorJNXkuYW09pDby2rojUlCh1bmkikHgvau2ESpINMKP/ADiz&#xA;+XhNTe6pX/jLbf8AZPkuMp4k08s/849eRvL+t2esW1xf3FxYuJYIriWIxc1+yxEcUbfCd/tYDMo4&#xA;noQ0q3BvSGet8OM2422I+Hb/ACu+a4dnYwchs/vuf2jbbz8246iXp/oclh0W1KWac3pZMGi3G5BB&#xA;+Lb27ZA9l4yMYuX7o2OX27fqZfmpXI7evmj82TjOxVJj5XtDp9tZetJ6drffpFG+Gpf6y1zxO32e&#xA;T0yzxDd+VOJ+TjwiN8pcX+y4kXaaTDbanf6gjs0uoej6qGnFfRQovHau4O+RMrAHc2wwiM5T6yr7&#xA;FG08s6PZ6odStIfQuGVkdUNEIYgk8eg6dsnLNIx4TycXD2Xgx5fFgOGVVty+X6ll55atbq21qB5X&#xA;Ua1/fEU+CkCQDjt4R13yImRXk3T0okJi/wC8/UB+hEtpMLa3Hq/NvXjtntBHtwKSSJJXpWtUwcW1&#xA;NhwjxPE68NfaD+h//9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:4ff125a4-a519-9641-994d-51b87833d4e6"
    stRef:documentID="xmp.did:4ff125a4-a519-9641-994d-51b87833d4e6"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:80b66b51-550f-3049-9085-311a8efe3a82"
      stEvt:when="2020-11-25T18:53:26+07:00"
      stEvt:softwareAgent="Adobe Illustrator 25.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:4ff125a4-a519-9641-994d-51b87833d4e6"
      stEvt:when="2022-05-10T18:14:28+07:00"
      stEvt:softwareAgent="Adobe Illustrator 25.4 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0db6cf34-4638-b74f-a0ee-9fc7f96eb566"
      stEvt:when="2022-05-10T18:14:34+07:00"
      stEvt:softwareAgent="Adobe Illustrator 25.4 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:a931a97c-f591-e04b-9ad3-2f60b30d117f"
      stEvt:when="2022-05-11T19:36:48+07:00"
      stEvt:softwareAgent="Adobe Bridge 2022 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="6400.000000"
    stDim:h="3800.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
        <rdf:li
         xmpG:swatchName="Botticelli"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="200"
         xmpG:green="223"
         xmpG:blue="235"/>
        <rdf:li
         xmpG:swatchName="Botticelli Light Shade 01"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="228"
         xmpG:green="244"
         xmpG:blue="253"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=5"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="242"
         xmpG:blue="242"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                  
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -3800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 3800 li
6400 3800 li
6400 0 li
cp
clp
6400 3800 mo
0 3800 li
0 0 li
6400 0 li
6400 3800 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
2300 3670 mo
1430 3670 li
1430 2800 li
2300 2800 li
2300 3670 li
cp
.894118 .956863 .992157 rgb
f
1718.11 3150.99 mo
1589.7 3150.99 li
1542.46 3150.99 1504.16 3189.29 1504.16 3236.54 cv
1504.16 3236.57 li
1504.16 3283.82 1542.46 3322.12 1589.7 3322.12 cv
1718.11 3322.12 li
1806.7 3339.01 1892.53 3375.28 1974.86 3436.23 cv
1974.86 3036.88 li
1897.49 3096.54 1811.9 3134.57 1718.11 3150.99 cv
cp
.788235 .87451 .921569 rgb
f
2143.25 2260 mo
2012.07 2260 li
1994.86 2260 1978.47 2252.61 1967.08 2239.69 cv
1950.41 2220.78 1928.14 2195.48 1928.23 2195.38 cv
1939.95 2181.81 1939.87 2161.74 1928 2148.26 cv
1846.38 2066.66 li
1839.62 2059.84 1830.42 2056 1820.81 2056 cv
1820.81 2056 1586 2055.42 1586 2056 cv
1586 2245 li
1720.6 2245 li
1726.67 2245 1732.56 2247.13 1737.22 2251.02 cv
1815.76 2316.47 li
1830.13 2328.44 1848.24 2335 1866.95 2335 cv
2143.25 2335 li
2163.96 2335 2180.75 2318.21 2180.75 2297.5 cv
2180.75 2276.79 2163.96 2260 2143.25 2260 cv
cp
1 .835294 .772549 rgb
f
965 910 mo
965 860.294 924.706 820 875 820 cv
825.294 820 785 860.294 785 910 cv
785 959.706 825.294 1000 875 1000 cv
924.706 1000 965 959.706 965 910 cv
cp
.894118 .956863 .992157 rgb
f
785 220 mo
785 170.294 825.294 130 875 130 cv
924.706 130 965 170.294 965 220 cv
965 269.706 924.706 310 875 310 cv
825.294 310 785 269.706 785 220 cv
cp
f
95 910 mo
95 860.294 135.294 820 185 820 cv
234.706 820 275 860.294 275 910 cv
275 959.706 234.706 1000 185 1000 cv
135.294 1000 95 959.706 95 910 cv
cp
f
275 220 mo
275 170.294 234.706 130 185 130 cv
135.294 130 95 170.294 95 220 cv
95 269.706 135.294 310 185 310 cv
234.706 310 275 269.706 275 220 cv
cp
f
815 595 mo
798.459 595 785 581.541 785 565 cv
785 548.459 798.459 535 815 535 cv
831.541 535 845 548.459 845 565 cv
845 581.541 831.541 595 815 595 cv
cp
f
245 535 mo
228.459 535 215 548.459 215 565 cv
215 581.541 228.459 595 245 595 cv
261.541 595 275 581.541 275 565 cv
275 548.459 261.541 535 245 535 cv
cp
f
3635 2335 mo
2765 2335 li
2765 1465 li
3635 1465 li
3635 2335 li
cp
f
3635 1585 mo
2765 1585 li
2765 1465 li
3635 1465 li
3635 1585 li
cp
.266667 .223529 .290196 rgb
f
4820 2335 mo
4190 2335 li
4190 1555 li
4820 1555 li
4820 2335 li
cp
.113725 .823529 .819608 rgb
f
4250 2275 mo
4250 1615 li
4760 1615 li
4760 2275 li
4250 2275 li
cp
.894118 .956863 .992157 rgb
f
5815.93 2019.24 mo
5758.26 1961.57 li
5597.09 2122.74 li
5654.76 2180.41 li
5815.93 2019.24 li
cp
.2 .168627 .219608 rgb
f
965 2335 mo
95 2335 li
95 1465 li
965 1465 li
965 2335 li
cp
.894118 .956863 .992157 rgb
f
965 1585 mo
95 1585 li
95 1465 li
965 1465 li
965 1585 li
cp
.266667 .223529 .290196 rgb
f
2300 2920 mo
1430 2920 li
1430 2800 li
2300 2800 li
2300 2920 li
cp
f
3635 1000 mo
2765 1000 li
2765 130 li
3635 130 li
3635 1000 li
cp
.894118 .956863 .992157 rgb
f
2112.5 2185 mo
1863.24 2185 li
1936.99 2260 li
2112.5 2260 li
2133.21 2260 2150 2243.21 2150 2222.5 cv
2150 2201.79 2133.21 2185 2112.5 2185 cv
cp
1 .835294 .772549 rgb
f
2052.5 2110 mo
1791.26 2110 li
1863.24 2185 li
2052.5 2185 li
2073.21 2185 2090 2168.21 2090 2147.5 cv
2090 2126.79 2073.21 2110 2052.5 2110 cv
cp
f
3321.73 1971.54 mo
3078.27 1971.54 li
3021.24 1971.54 2975 1925.3 2975 1868.27 cv
2975 1868.27 li
2975 1811.24 3021.24 1765 3078.27 1765 cv
3321.73 1765 li
3378.76 1765 3425 1811.24 3425 1868.27 cv
3425 1868.27 li
3425 1925.3 3378.76 1971.54 3321.73 1971.54 cv
cp
.113725 .823529 .819608 rgb
f
485 3475 mo
485 3367.3 397.695 3280 290 3280 cv
182.304 3280 95 3367.3 95 3475 cv
95 3582.7 182.304 3670 290 3670 cv
397.695 3670 485 3582.7 485 3475 cv
cp
f
4535 3670 mo
4130 3670 li
4113.43 3670 4100 3656.57 4100 3640 cv
4100 2830 li
4100 2813.43 4113.43 2800 4130 2800 cv
4535 2800 li
4551.57 2800 4565 2813.43 4565 2830 cv
4565 3640 li
4565 3656.57 4551.57 3670 4535 3670 cv
cp
.266667 .223529 .290196 rgb
f
4164.14 3520 mo
4164.14 2920 li
4164.14 2903.43 4177.57 2890 4194.14 2890 cv
4470.86 2890 li
4487.43 2890 4500.86 2903.43 4500.86 2920 cv
4500.86 3520 li
4500.86 3536.57 4487.43 3550 4470.86 3550 cv
4194.14 3550 li
4177.57 3550 4164.14 3536.57 4164.14 3520 cv
cp
.113725 .823529 .819608 rgb
f
5925.01 3670 mo
5808.06 3616.93 li
5808.06 3372.76 li
5925.01 3372.76 li
5925.01 3670 li
cp
f
3635 250 mo
2765 250 li
2765 130 li
3635 130 li
3635 250 li
cp
.266667 .223529 .290196 rgb
f
6230 1000 mo
5510 1000 li
5585 355 li
6155 355 li
6230 1000 li
cp
.894118 .956863 .992157 rgb
f
4505 1000 mo
4130 1000 li
4113.43 1000 4100 986.568 4100 970 cv
4100 160 li
4100 143.431 4113.43 130 4130 130 cv
4505 130 li
4521.57 130 4535 143.431 4535 160 cv
4535 970 li
4535 986.568 4521.57 1000 4505 1000 cv
cp
.266667 .223529 .290196 rgb
f
4402.88 198.077 mo
4232.12 198.077 li
4223.83 198.077 4217.12 191.361 4217.12 183.077 cv
4217.12 131.154 li
4417.88 131.154 li
4417.88 183.077 li
4417.88 191.361 4411.17 198.077 4402.88 198.077 cv
cp
.894118 .956863 .992157 rgb
f
680 565 mo
680 482.157 612.843 415 530 415 cv
447.157 415 380 482.157 380 565 cv
380 647.843 447.157 715 530 715 cv
612.843 715 680 647.843 680 565 cv
cp
.980392 .772549 .211765 rgb
f
2180 340 mo
2163.46 340 2150 326.541 2150 310 cv
2150 293.459 2163.46 280 2180 280 cv
2196.54 280 2210 293.459 2210 310 cv
2210 326.541 2196.54 340 2180 340 cv
cp
.894118 .956863 .992157 rgb
f
3365 1720 mo
3348.46 1720 3335 1706.54 3335 1690 cv
3335 1673.46 3348.46 1660 3365 1660 cv
3381.54 1660 3395 1673.46 3395 1690 cv
3395 1706.54 3381.54 1720 3365 1720 cv
cp
f
4190 385 mo
4173.46 385 4160 371.541 4160 355 cv
4160 338.459 4173.46 325 4190 325 cv
4206.54 325 4220 338.459 4220 355 cv
4220 371.541 4206.54 385 4190 385 cv
cp
f
4445 790 mo
4428.46 790 4415 776.541 4415 760 cv
4415 743.459 4428.46 730 4445 730 cv
4461.54 730 4475 743.459 4475 760 cv
4475 776.541 4461.54 790 4445 790 cv
cp
f
5735 490 mo
5718.46 490 5705 476.541 5705 460 cv
5705 443.459 5718.46 430 5735 430 cv
5751.54 430 5765 443.459 5765 460 cv
5765 476.541 5751.54 490 5735 490 cv
cp
f
6005 490 mo
5988.46 490 5975 476.541 5975 460 cv
5975 443.459 5988.46 430 6005 430 cv
6021.54 430 6035 443.459 6035 460 cv
6035 476.541 6021.54 490 6005 490 cv
cp
f
1460 895 mo
1443.46 895 1430 881.541 1430 865 cv
1430 848.459 1443.46 835 1460 835 cv
1476.54 835 1490 848.459 1490 865 cv
1490 881.541 1476.54 895 1460 895 cv
cp
f
1714.35 544.159 mo
1671.26 501.068 li
1550.83 621.495 li
1593.92 664.585 li
1714.35 544.159 li
cp
.2 .168627 .219608 rgb
f
1448.68 763.681 mo
1447.22 762.218 li
1428.64 743.641 1428.64 713.522 1447.22 694.945 cv
1553.54 588.628 li
1556.76 585.404 1561.99 585.404 1565.21 588.628 cv
1622.27 645.69 li
1625.49 648.914 1625.49 654.14 1622.27 657.363 cv
1515.95 763.681 li
1497.38 782.258 1467.26 782.258 1448.68 763.681 cv
cp
.266667 .223529 .290196 rgb
f
2013.89 543.385 mo
2108.29 448.984 2108.29 295.931 2013.89 201.531 cv
1919.49 107.131 1766.43 107.131 1672.03 201.531 cv
1577.63 295.931 1577.63 448.984 1672.03 543.385 cv
1766.43 637.785 1919.49 637.785 2013.89 543.385 cv
cp
.113725 .823529 .819608 rgb
f
1720.87 494.549 mo
1653.55 427.226 1653.55 317.69 1720.87 250.367 cv
1788.19 183.045 1897.73 183.045 1965.05 250.367 cv
2032.37 317.69 2032.37 427.226 1965.05 494.549 cv
1897.73 561.871 1788.19 561.871 1720.87 494.549 cv
cp
.894118 .956863 .992157 rgb
f
2030 1000 mo
1955 1000 li
1955 835 li
2030 835 li
2030 1000 li
cp
.980392 .772549 .211765 rgb
f
1895 1000 mo
1820 1000 li
1820 880 li
1895 880 li
1895 1000 li
cp
f
1760 1000 mo
1685 1000 li
1685 910 li
1760 910 li
1760 1000 li
cp
f
1625 1000 mo
1550 1000 li
1550 940 li
1625 940 li
1625 1000 li
cp
f
2165 1000 mo
2090 1000 li
2090 730 li
2165 730 li
2165 1000 li
cp
f
2300 1000 mo
2225 1000 li
2225 490 li
2300 490 li
2300 1000 li
cp
f
4777.03 292.305 mo
4766.28 275.824 4760 256.15 4760 235 cv
4760 177.01 4807.01 130 4865 130 cv
4922.99 130 4970 177.01 4970 235 cv
4970 292.99 4922.99 340 4865 340 cv
4843.85 340 4824.18 333.724 4807.69 322.966 cv
4760 340 li
4777.03 292.305 li
cp
f
4772.87 904.282 mo
4778.87 880.492 4800.35 862.857 4826 862.857 cv
4833.13 862.857 4839.93 864.261 4846.18 866.739 cv
4859.28 855.767 4876.15 849.143 4894.57 849.143 cv
4936.23 849.143 4970 882.913 4970 924.571 cv
4970 966.229 4936.23 1000 4894.57 1000 cv
4778 1000 li
4751.49 1000 4730 978.509 4730 952 cv
4730 927.225 4748.77 906.844 4772.87 904.282 cv
cp
.113725 .823529 .819608 rgb
f
4970 580 mo
4970 522.01 4922.99 475 4865 475 cv
4807.01 475 4760 522.01 4760 580 cv
4760 637.99 4807.01 685 4865 685 cv
4922.99 685 4970 637.99 4970 580 cv
cp
.894118 .956863 .992157 rgb
f
522.5 1975 mo
176 1975 li
176 1645 li
522.5 1645 li
522.5 1975 li
cp
.113725 .823529 .819608 rgb
f
365.986 1869.5 mo
367.047 1868.75 li
391.581 1851.27 421.017 1850.49 446.061 1866.67 cv
522.5 1916.03 li
522.5 1975 li
365.986 1975 li
365.986 1869.5 li
cp
.941176 .631373 .156863 rgb
f
382.25 1735.13 mo
382.25 1717.47 367.475 1703.15 349.25 1703.15 cv
331.025 1703.15 316.25 1717.47 316.25 1735.13 cv
316.25 1752.79 331.025 1767.11 349.25 1767.11 cv
367.475 1767.11 382.25 1752.79 382.25 1735.13 cv
cp
.980392 .772549 .211765 rgb
f
710 1780 mo
800 1780 li
800 2170 li
710 2170 li
710 1780 li
cp
.266667 .223529 .290196 rgb
f
800 1780 mo
710 1780 li
710 1720 li
800 1720 li
800 1780 li
cp
.980392 .772549 .211765 rgb
f
2120 1750 mo
2120 1609.17 2005.83 1495 1865 1495 cv
1724.17 1495 1610 1609.17 1610 1750 cv
1610 1890.83 1724.17 2005 1865 2005 cv
2005.83 2005 2120 1890.83 2120 1750 cv
cp
.941176 .631373 .156863 rgb
f
2060 1750 mo
2060 1642.3 1972.7 1555 1865 1555 cv
1757.3 1555 1670 1642.3 1670 1750 cv
1670 1857.7 1757.3 1945 1865 1945 cv
1972.7 1945 2060 1857.7 2060 1750 cv
cp
.980392 .772549 .211765 rgb
f
1790 1570 mo
1790 1512.01 1742.99 1465 1685 1465 cv
1627.01 1465 1580 1512.01 1580 1570 cv
1580 1627.99 1627.01 1675 1685 1675 cv
1742.99 1675 1790 1627.99 1790 1570 cv
cp
.113725 .823529 .819608 rgb
f
3575 580 mo
2825 580 li
2825 310 li
3575 310 li
3575 580 li
cp
f
6169.32 3119.86 mo
5563.75 3119.86 li
5563.75 3010 li
6169.32 3010 li
6169.32 3119.86 li
cp
f
5925.01 3396.32 mo
5808.06 3396.32 li
5629.57 3119.86 li
6103.5 3119.86 li
5925.01 3396.32 li
cp
.0862745 .623529 .619608 rgb
f
4473.8 3217.36 mo
4446.14 3174.98 4430 3124.39 4430 3070 cv
4430 2920.88 4550.88 2800 4700 2800 cv
4849.12 2800 4970 2920.88 4970 3070 cv
4970 3219.12 4849.12 3340 4700 3340 cv
4645.61 3340 4595.02 3323.86 4552.64 3296.2 cv
4430 3340 li
4473.8 3217.36 li
cp
.894118 .956863 .992157 rgb
f
4723.63 3102.09 mo
4647.51 3102.09 li
4669.65 3019.46 li
4745.78 3019.46 li
4723.63 3102.09 li
cp
4858.12 3019.46 mo
4871.07 3019.46 4881.57 3008.96 4881.57 2996.01 cv
4881.57 2983.05 4871.07 2972.55 4858.12 2972.55 cv
4806.91 2972.55 li
4824.47 2907.02 li
4827.82 2894.51 4820.4 2881.65 4807.88 2878.29 cv
4795.37 2874.94 4782.51 2882.37 4779.16 2894.88 cv
4758.35 2972.55 li
4682.22 2972.55 li
4699.34 2908.68 li
4702.69 2896.17 4695.26 2883.3 4682.75 2879.95 cv
4670.24 2876.6 4657.37 2884.02 4654.02 2896.54 cv
4633.65 2972.55 li
4541.45 2972.55 li
4528.5 2972.55 4517.99 2983.05 4517.99 2996.01 cv
4517.99 3008.96 4528.5 3019.46 4541.45 3019.46 cv
4621.08 3019.46 li
4598.94 3102.09 li
4529.72 3102.09 li
4516.77 3102.09 4506.27 3112.6 4506.27 3125.55 cv
4506.27 3138.5 4516.77 3149.01 4529.72 3149.01 cv
4586.37 3149.01 li
4572.06 3202.41 li
4568.71 3214.93 4576.13 3227.79 4588.65 3231.14 cv
4601.16 3234.49 4614.02 3227.07 4617.38 3214.55 cv
4634.94 3149.01 li
4711.06 3149.01 li
4697.2 3200.76 li
4693.84 3213.27 4701.27 3226.13 4713.78 3229.49 cv
4726.3 3232.84 4739.16 3225.41 4742.51 3212.9 cv
4759.63 3149.01 li
4846.39 3149.01 li
4859.34 3149.01 4869.85 3138.5 4869.85 3125.55 cv
4869.85 3112.6 4859.34 3102.09 4846.39 3102.09 cv
4772.2 3102.09 li
4794.34 3019.46 li
4858.12 3019.46 li
cp
.921569 .137255 .207843 rgb
f
4700 3670 mo
4640 3670 li
4640 3475 li
4700 3475 li
4700 3670 li
cp
.980392 .772549 .211765 rgb
f
4835 3670 mo
4775 3670 li
4775 3400 li
4835 3400 li
4835 3670 li
cp
f
4970 3670 mo
4910 3670 li
4910 3340 li
4970 3340 li
4970 3670 li
cp
f
965 2995 mo
965 2887.3 877.695 2800 770 2800 cv
662.305 2800 575 2887.3 575 2995 cv
575 3102.7 662.305 3190 770 3190 cv
877.695 3190 965 3102.7 965 2995 cv
cp
.266667 .223529 .290196 rgb
f
822 2917 mo
822 2888.28 798.719 2865 770 2865 cv
741.281 2865 718 2888.28 718 2917 cv
718 2945.72 741.281 2969 770 2969 cv
798.719 2969 822 2945.72 822 2917 cv
cp
.894118 .956863 .992157 rgb
f
515 3010 mo
515 2860 li
515 2826.86 488.137 2800 455 2800 cv
155 2800 li
121.863 2800 95 2826.86 95 2860 cv
95 2980 li
95 3013.14 121.863 3040 155 3040 cv
380 3040 li
545 3100 li
515 3010 li
cp
.266667 .223529 .290196 rgb
f
688.5 3434 mo
526.25 3375 li
555.75 3463.5 li
555.75 3611 li
555.75 3643.58 582.165 3670 614.75 3670 cv
909.75 3670 li
942.335 3670 968.75 3643.58 968.75 3611 cv
968.75 3493 li
968.75 3460.42 942.335 3434 909.75 3434 cv
688.5 3434 li
cp
.113725 .823529 .819608 rgb
f
245 3490 mo
245 3473.43 231.568 3460 215 3460 cv
198.432 3460 185 3473.43 185 3490 cv
185 3506.57 198.432 3520 215 3520 cv
231.568 3520 245 3506.57 245 3490 cv
cp
.945098 .94902 .94902 rgb
f
410 3490 mo
410 3473.43 396.569 3460 380 3460 cv
363.431 3460 350 3473.43 350 3490 cv
350 3506.57 363.431 3520 380 3520 cv
396.569 3520 410 3506.57 410 3490 cv
cp
f
320 3190 mo
320 3173.43 306.568 3160 290 3160 cv
273.431 3160 260 3173.43 260 3190 cv
260 3206.57 273.431 3220 290 3220 cv
306.568 3220 320 3206.57 320 3190 cv
cp
.894118 .956863 .992157 rgb
f
755 3325 mo
755 3308.43 741.568 3295 725 3295 cv
708.432 3295 695 3308.43 695 3325 cv
695 3341.57 708.432 3355 725 3355 cv
741.568 3355 755 3341.57 755 3325 cv
cp
.266667 .223529 .290196 rgb
f
2003.39 3464.79 mo
2003.39 3464.79 li
1987.63 3464.79 1974.86 3452.02 1974.86 3436.26 cv
1974.86 3036.88 li
1974.86 3021.13 1987.63 3008.35 2003.39 3008.35 cv
2003.39 3008.35 li
2019.14 3008.35 2031.92 3021.13 2031.92 3036.88 cv
2031.92 3436.26 li
2031.92 3452.02 2019.14 3464.79 2003.39 3464.79 cv
cp
.921569 .137255 .207843 rgb
f
2045.32 3176.7 mo
2031.92 3172.39 li
2031.92 3300.76 li
2045.32 3296.45 li
2071.33 3288.09 2088.97 3263.89 2088.97 3236.57 cv
2088.97 3209.25 2071.33 3185.06 2045.32 3176.7 cv
cp
.266667 .223529 .290196 rgb
f
3163.74 2827.51 mo
2765 3130 li
2765 3670 li
3635 3670 li
3635 3130 li
3236.26 2827.51 li
3214.82 2811.25 3185.18 2811.25 3163.74 2827.51 cv
cp
.941176 .631373 .156863 rgb
f
3530 3670 mo
2885 3670 li
2885 2935 li
3530 2935 li
3530 3670 li
cp
.894118 .956863 .992157 rgb
f
3320 3670 mo
2765 3670 li
2765 3130 li
3320 3670 li
cp
.980392 .772549 .211765 rgb
f
3635 3670 mo
3080 3670 li
3635 3130 li
3635 3670 li
cp
f
3635 3670 mo
2765 3670 li
3158.32 3290.24 li
3181.57 3267.79 3218.43 3267.79 3241.68 3290.24 cv
3635 3670 li
cp
f
4625 1495 mo
4549.24 1495 li
4545.77 1477.88 4530.64 1465 4512.5 1465 cv
4494.36 1465 4479.23 1477.88 4475.76 1495 cv
4400 1495 li
4383.43 1495 4370 1508.43 4370 1525 cv
4370 1630 li
4370 1646.57 4383.43 1660 4400 1660 cv
4625 1660 li
4641.57 1660 4655 1646.57 4655 1630 cv
4655 1525 li
4655 1508.43 4641.57 1495 4625 1495 cv
cp
f
4880 1540 mo
4970 1540 li
4970 2230 li
4880 2230 li
4880 1540 li
cp
.266667 .223529 .290196 rgb
f
4970 1600 mo
4880 1600 li
4880 1540 li
4970 1540 li
4970 1600 li
cp
.980392 .772549 .211765 rgb
f
4611.51 1750 mo
4608.49 1750 li
4592.75 1750 4580 1762.75 4580 1778.49 cv
4580 2186.51 li
4580 2202.25 4592.75 2215 4608.49 2215 cv
4611.51 2215 li
4627.25 2215 4640 2202.25 4640 2186.51 cv
4640 1778.49 li
4640 1762.75 4627.25 1750 4611.51 1750 cv
cp
.921569 .137255 .207843 rgb
f
4653.6 1922.92 mo
4640 1918.54 li
4640 2049.56 li
4653.6 2045.18 li
4680.15 2036.63 4698.15 2011.93 4698.15 1984.05 cv
4698.15 1956.16 4680.15 1931.46 4653.6 1922.92 cv
cp
.266667 .223529 .290196 rgb
f
5459.4 2312.05 mo
5459.4 2312.05 li
5434 2286.65 5434 2245.46 5459.4 2220.06 cv
5590.33 2089.14 li
5600.37 2079.09 5616.67 2079.09 5626.71 2089.14 cv
5682.31 2144.74 li
5692.36 2154.79 5692.36 2171.08 5682.31 2181.13 cv
5551.39 2312.05 li
5525.99 2337.45 5484.81 2337.45 5459.4 2312.05 cv
cp
f
5520.61 2323.36 mo
5513.43 2327.06 5505.76 2329.47 5497.9 2330.38 cv
5502.61 2330.93 5507.37 2330.96 5512.08 2330.5 cv
5512.26 2330.48 5512.43 2330.45 5512.61 2330.42 cv
5516.65 2330 5520.64 2329.07 5524.56 2327.89 cv
5525.41 2327.63 5526.27 2327.45 5527.11 2327.15 cv
5527.34 2327.07 5527.53 2326.93 5527.76 2326.85 cv
5525.29 2325.94 5522.98 2324.57 5520.61 2323.36 cv
cp
f
5620.17 2084.52 mo
5618.48 2083.67 5616.75 2082.97 5614.95 2082.52 cv
5614.76 2082.47 5614.58 2082.4 5614.39 2082.36 cv
5609.99 2081.36 5605.37 2081.51 5601.02 2082.84 cv
5601.02 2082.84 li
5604.92 2084.03 5608.63 2086.05 5611.71 2089.14 cv
5623.52 2100.94 li
5631.02 2093.44 li
5626.71 2089.14 li
5625.13 2087.56 5623.37 2086.31 5621.53 2085.24 cv
5621.08 2084.97 5620.62 2084.75 5620.17 2084.52 cv
cp
f
6210.54 2015.54 mo
6336.49 1889.6 6336.49 1685.4 6210.54 1559.46 cv
6084.6 1433.51 5880.4 1433.51 5754.46 1559.46 cv
5628.51 1685.4 5628.51 1889.6 5754.46 2015.54 cv
5880.4 2141.49 6084.6 2141.49 6210.54 2015.54 cv
cp
.113725 .823529 .819608 rgb
f
5818.02 1951.98 mo
5727.33 1861.28 5727.33 1713.72 5818.02 1623.02 cv
5908.72 1532.33 6056.28 1532.33 6146.98 1623.02 cv
6237.67 1713.72 6237.67 1861.28 6146.98 1951.98 cv
6056.28 2042.67 5908.72 2042.67 5818.02 1951.98 cv
cp
.894118 .956863 .992157 rgb
f
5935 1900 mo
5855 1900 li
5855 1794.4 li
5935 1794.4 li
5935 1900 li
cp
.984314 .854902 .505882 rgb
f
6015 1900 mo
5935 1900 li
5935 1727.2 li
6015 1727.2 li
6015 1900 li
cp
.980392 .772549 .211765 rgb
f
6095 1900 mo
6015 1900 li
6015 1660 li
6095 1660 li
6095 1900 li
cp
.941176 .631373 .156863 rgb
f
6305 2245 mo
6305 2195.29 6264.71 2155 6215 2155 cv
6165.29 2155 6125 2195.29 6125 2245 cv
6125 2294.71 6165.29 2335 6215 2335 cv
6264.71 2335 6305 2294.71 6305 2245 cv
cp
.894118 .956863 .992157 rgb
f
5615 1555 mo
5615 1505.29 5574.71 1465 5525 1465 cv
5475.29 1465 5435 1505.29 5435 1555 cv
5435 1604.71 5475.29 1645 5525 1645 cv
5574.71 1645 5615 1604.71 5615 1555 cv
cp
f
5900 2245 mo
5900 2228.43 5886.57 2215 5870 2215 cv
5853.43 2215 5840 2228.43 5840 2245 cv
5840 2261.57 5853.43 2275 5870 2275 cv
5886.57 2275 5900 2261.57 5900 2245 cv
cp
f
5555 1900 mo
5555 1883.43 5541.57 1870 5525 1870 cv
5508.43 1870 5495 1883.43 5495 1900 cv
5495 1916.57 5508.43 1930 5525 1930 cv
5541.57 1930 5555 1916.57 5555 1900 cv
cp
f
1926.56 2146.49 mo
1860.73 2080.67 li
1809.82 2131.58 li
1875.64 2197.41 li
1889.7 2211.46 1912.5 2211.46 1926.56 2197.41 cv
1940.62 2183.35 1940.62 2160.55 1926.56 2146.49 cv
cp
1 .835294 .772549 rgb
f
176 1897.97 mo
271.448 1828.34 li
308.426 1801.36 352.614 1816.53 378.603 1865.11 cv
437.39 1975 li
176 1975 li
176 1897.97 li
cp
.980392 .772549 .211765 rgb
f
3305 1960 mo
3288.43 1960 3275 1973.43 3275 1990 cv
3275 1960 li
3275 1943.43 3261.57 1930 3245 1930 cv
3228.43 1930 3215 1943.43 3215 1960 cv
3215 1945 li
3215 1928.43 3201.57 1915 3185 1915 cv
3168.43 1915 3155 1928.43 3155 1945 cv
3155 1870 li
3155 1853.43 3141.57 1840 3125 1840 cv
3108.43 1840 3095 1853.43 3095 1870 cv
3095 2082.57 li
3039.39 2026.97 li
3027.68 2015.25 3008.68 2015.25 2996.97 2026.97 cv
2985.25 2038.68 2985.25 2057.68 2996.97 2069.39 cv
3125 2197.43 li
3125 2290 li
3305 2290 li
3305 2200 li
3335 2155 li
3335 1990 li
3335 1973.43 3321.57 1960 3305 1960 cv
cp
1 .835294 .772549 rgb
f
3350 2335 mo
3080 2335 li
3080 2246.89 li
3350 2246.89 li
3350 2335 li
cp
.266667 .223529 .290196 rgb
f
3356.43 3401.04 mo
3635 3670 li
3635 3607.47 li
3391.33 3367.08 li
3356.43 3401.04 li
cp
.941176 .631373 .156863 rgb
f
3043.57 3401.04 mo
2765 3670 li
2765 3607.47 li
3008.67 3367.08 li
3043.57 3401.04 li
cp
f
1565 2245 mo
1430 2245 li
1430 2050 li
1565 2050 li
1565 2245 li
cp
.2 .168627 .219608 rgb
f
1557.5 2275 mo
1557.5 2020 li
1662.5 2020 li
1662.5 2275 li
1557.5 2275 li
cp
.266667 .223529 .290196 rgb
f
770 3033.19 mo
705.383 3033.19 653 3085.57 653 3150.19 cv
653 3150.73 li
685.615 3175.28 726.039 3190 770 3190 cv
813.961 3190 854.385 3175.28 887 3150.73 cv
887 3150.19 li
887 3085.57 834.617 3033.19 770 3033.19 cv
cp
.894118 .956863 .992157 rgb
f
6073.4 2976.45 mo
6073.4 3010 li
5662.4 3010 li
5662.4 2976.45 li
5739.2 2976.45 li
5742.5 2962.97 5748.35 2950.32 5756.15 2939.04 cv
5701.85 2889.26 li
5743.4 2851.17 li
5797.7 2900.95 li
5810 2893.8 5823.8 2888.43 5838.5 2885.41 cv
5838.5 2815 li
5897.3 2815 li
5897.3 2885.41 li
5912 2888.43 5925.65 2893.8 5938.1 2900.95 cv
5992.4 2851.17 li
6033.95 2889.26 li
5979.65 2939.04 li
5987.45 2950.32 5993.3 2962.97 5996.6 2976.45 cv
6073.4 2976.45 li
cp
.266667 .223529 .290196 rgb
f
5810.31 3010 mo
5925.49 3010 li
5920.53 2982.6 5896.71 2961.7 5867.9 2961.7 cv
5839.1 2961.7 5815.27 2982.6 5810.31 3010 cv
cp
.894118 .956863 .992157 rgb
f
3560 813.437 mo
3560 781.563 li
3511.37 781.563 li
3509.25 772.237 3505.57 763.526 3500.62 755.673 cv
3535.03 721.27 li
3508.73 694.974 li
3474.33 729.378 li
3466.47 724.431 3457.76 720.749 3448.44 718.629 cv
3448.44 670 li
3416.56 670 li
3416.56 718.629 li
3407.24 720.749 3398.53 724.431 3390.67 729.378 cv
3356.27 694.974 li
3329.97 721.27 li
3364.38 755.673 li
3359.43 763.526 3355.75 772.237 3353.63 781.563 cv
3305 781.563 li
3305 813.437 li
3353.63 813.437 li
3355.75 822.763 3359.43 831.473 3364.38 839.327 cv
3329.97 873.73 li
3356.27 900.026 li
3390.67 865.622 li
3398.53 870.569 3407.24 874.251 3416.56 876.371 cv
3416.56 925 li
3448.44 925 li
3448.44 876.371 li
3457.76 874.251 3466.47 870.569 3474.33 865.622 cv
3508.73 900.026 li
3535.03 873.73 li
3500.62 839.327 li
3505.57 831.473 3509.25 822.763 3511.37 813.437 cv
3560 813.437 li
cp
.266667 .223529 .290196 rgb
f
3462.5 797.5 mo
3462.5 780.931 3449.07 767.5 3432.5 767.5 cv
3415.93 767.5 3402.5 780.931 3402.5 797.5 cv
3402.5 814.068 3415.93 827.5 3432.5 827.5 cv
3449.07 827.5 3462.5 814.068 3462.5 797.5 cv
cp
.894118 .956863 .992157 rgb
f
4445 580.938 mo
4445 549.063 li
4396.37 549.063 li
4394.25 539.737 4390.57 531.026 4385.62 523.173 cv
4420.03 488.77 li
4393.73 462.474 li
4359.33 496.878 li
4351.47 491.931 4342.76 488.249 4333.44 486.129 cv
4333.44 437.5 li
4301.56 437.5 li
4301.56 486.129 li
4292.24 488.249 4283.53 491.931 4275.67 496.878 cv
4241.27 462.474 li
4214.97 488.77 li
4249.38 523.173 li
4244.43 531.026 4240.75 539.737 4238.63 549.063 cv
4190 549.063 li
4190 580.938 li
4238.63 580.938 li
4240.75 590.263 4244.43 598.974 4249.38 606.827 cv
4214.97 641.23 li
4241.27 667.526 li
4275.67 633.122 li
4283.53 638.069 4292.24 641.751 4301.56 643.871 cv
4301.56 692.5 li
4333.44 692.5 li
4333.44 643.871 li
4342.76 641.751 4351.47 638.069 4359.33 633.122 cv
4393.73 667.526 li
4420.03 641.23 li
4385.62 606.827 li
4390.57 598.974 4394.25 590.263 4396.37 580.938 cv
4445 580.938 li
cp
f
4347.5 565 mo
4347.5 548.431 4334.07 535 4317.5 535 cv
4300.93 535 4287.5 548.431 4287.5 565 cv
4287.5 581.568 4300.93 595 4317.5 595 cv
4334.07 595 4347.5 581.568 4347.5 565 cv
cp
.266667 .223529 .290196 rgb
f
5927.61 604.929 mo
5870 670 li
5812.39 604.929 li
5728.15 525.705 5609.4 644.368 5688.64 728.61 cv
5757.47 797.413 5857.07 896.993 5870 910 cv
5882.93 896.993 5982.53 797.413 6051.36 728.61 cv
6130.6 644.368 6011.85 525.705 5927.61 604.929 cv
cp
.921569 .137255 .207843 rgb
f
5735 430 mo
5718.46 430 5705 443.459 5705 460 cv
5705 476.541 5718.46 490 5735 490 cv
5751.54 490 5765 476.541 5765 460 cv
5765 443.459 5751.54 430 5735 430 cv
cp
.266667 .223529 .290196 rgb
f
6005 430 mo
5988.46 430 5975 443.459 5975 460 cv
5975 476.541 5988.46 490 6005 490 cv
6021.54 490 6035 476.541 6035 460 cv
6035 443.459 6021.54 430 6005 430 cv
cp
f
882.5 1990.94 mo
882.5 1959.06 li
833.871 1959.06 li
831.751 1949.74 828.069 1941.03 823.122 1933.17 cv
857.526 1898.77 li
831.23 1872.47 li
796.827 1906.88 li
788.974 1901.93 780.263 1898.25 770.937 1896.13 cv
770.937 1847.5 li
739.062 1847.5 li
739.062 1896.13 li
729.737 1898.25 721.026 1901.93 713.173 1906.88 cv
678.77 1872.47 li
652.474 1898.77 li
686.878 1933.17 li
681.931 1941.03 678.249 1949.74 676.129 1959.06 cv
627.5 1959.06 li
627.5 1990.94 li
676.129 1990.94 li
678.249 2000.26 681.931 2008.97 686.878 2016.83 cv
652.474 2051.23 li
678.77 2077.53 li
713.173 2043.12 li
721.026 2048.07 729.737 2051.75 739.062 2053.87 cv
739.062 2102.5 li
770.937 2102.5 li
770.937 2053.87 li
780.263 2051.75 788.974 2048.07 796.827 2043.12 cv
831.23 2077.53 li
857.526 2051.23 li
823.122 2016.83 li
828.069 2008.97 831.751 2000.26 833.871 1990.94 cv
882.5 1990.94 li
cp
.113725 .823529 .819608 rgb
f
785 1975 mo
785 1958.43 771.568 1945 755 1945 cv
738.432 1945 725 1958.43 725 1975 cv
725 1991.57 738.432 2005 755 2005 cv
771.568 2005 785 1991.57 785 1975 cv
cp
.266667 .223529 .290196 rgb
f
755 2275 mo
800 2170 li
710 2170 li
755 2275 li
cp
.788235 .87451 .921569 rgb
f
751.705 1645 mo
758.295 1645 li
781.328 1645 800 1663.67 800 1686.7 cv
800 1720 li
710 1720 li
710 1686.7 li
710 1663.67 728.672 1645 751.705 1645 cv
cp
f
1632.53 3578.9 mo
1632.53 3578.9 li
1608.9 3578.9 1589.74 3559.74 1589.74 3536.11 cv
1589.74 3322.16 li
1675.32 3322.16 li
1675.32 3536.11 li
1675.32 3559.74 1656.16 3578.9 1632.53 3578.9 cv
cp
f
1661.06 3364.95 mo
1604 3364.95 li
1580.37 3364.95 1561.21 3345.79 1561.21 3322.16 cv
1561.21 3307.16 li
1703.85 3307.16 li
1703.85 3322.16 li
1703.85 3345.79 1684.69 3364.95 1661.06 3364.95 cv
cp
.266667 .223529 .290196 rgb
f
1589.7 3150.99 mo
1542.46 3150.99 1504.16 3189.29 1504.16 3236.54 cv
1504.16 3236.54 li
1504.16 3236.57 li
1504.16 3236.57 li
1504.16 3283.82 1542.46 3322.12 1589.7 3322.12 cv
1718.11 3322.12 li
1718.11 3150.99 li
1589.7 3150.99 li
cp
.921569 .137255 .207843 rgb
f
4280 2335 mo
4190 2335 li
4190 2080 li
4280 2080 li
4280 2335 li
cp
.788235 .87451 .921569 rgb
f
4267.21 2110 mo
4202.79 2110 li
4179.16 2110 4160 2090.84 4160 2067.21 cv
4160 2035 li
4310 2035 li
4310 2067.21 li
4310 2090.84 4290.84 2110 4267.21 2110 cv
cp
.266667 .223529 .290196 rgb
f
4325 1898.93 mo
4187.31 1900 li
4139.09 1900 4100 1936.73 4100 1982.04 cv
4100 1987.1 li
4100 2032.41 4139.09 2069.13 4187.31 2069.13 cv
4325 2069.13 li
4412.98 2086.24 4498.23 2108.3 4580 2170 cv
4580 1780 li
4503.15 1840.4 4418.15 1882.31 4325 1898.93 cv
cp
.788235 .87451 .921569 rgb
f
4925 2335 mo
4970 2230 li
4880 2230 li
4925 2335 li
cp
f
4921.71 1465 mo
4928.29 1465 li
4951.33 1465 4970 1483.67 4970 1506.7 cv
4970 1540 li
4880 1540 li
4880 1506.7 li
4880 1483.67 4898.67 1465 4921.71 1465 cv
cp
f
4187.31 1900 mo
4139.09 1900 4100 1936.73 4100 1982.04 cv
4100 1984.55 li
4100 1984.59 li
4100 1987.1 li
4100 2032.41 4139.09 2069.13 4187.31 2069.13 cv
4325 2069.13 li
4325 1984.59 li
4325 1984.55 li
4325 1898.93 li
4187.31 1900 li
cp
.921569 .137255 .207843 rgb
f
3395 1690 mo
3395 1673.43 3381.57 1660 3365 1660 cv
3348.43 1660 3335 1673.43 3335 1690 cv
3335 1706.57 3348.43 1720 3365 1720 cv
3381.57 1720 3395 1706.57 3395 1690 cv
cp
.980392 .772549 .211765 rgb
f
852.5 186.25 mo
852.5 173.824 862.574 163.75 875 163.75 cv
887.426 163.75 897.5 173.824 897.5 186.25 cv
897.5 198.676 887.426 208.75 875 208.75 cv
862.574 208.75 852.5 198.676 852.5 186.25 cv
cp
.329412 .352941 .427451 rgb
f
875 236.875 mo
847.041 236.875 824.375 259.541 824.375 287.5 cv
824.375 294.401 li
838.801 304.236 856.223 310 875 310 cv
893.777 310 911.199 304.236 925.625 294.401 cv
925.625 287.5 li
925.625 259.541 902.959 236.875 875 236.875 cv
cp
f
162.5 186.25 mo
162.5 173.824 172.574 163.75 185 163.75 cv
197.426 163.75 207.5 173.824 207.5 186.25 cv
207.5 198.676 197.426 208.75 185 208.75 cv
172.574 208.75 162.5 198.676 162.5 186.25 cv
cp
f
185 236.875 mo
157.041 236.875 134.375 259.541 134.375 287.5 cv
134.375 294.401 li
148.801 304.236 166.223 310 185 310 cv
203.777 310 221.199 304.236 235.625 294.401 cv
235.625 287.5 li
235.625 259.541 212.959 236.875 185 236.875 cv
cp
f
162.5 876.25 mo
162.5 863.824 172.574 853.75 185 853.75 cv
197.426 853.75 207.5 863.824 207.5 876.25 cv
207.5 888.676 197.426 898.75 185 898.75 cv
172.574 898.75 162.5 888.676 162.5 876.25 cv
cp
f
185 926.875 mo
157.041 926.875 134.375 949.541 134.375 977.5 cv
134.375 984.401 li
148.801 994.236 166.223 1000 185 1000 cv
203.777 1000 221.199 994.236 235.625 984.401 cv
235.625 977.5 li
235.625 949.541 212.959 926.875 185 926.875 cv
cp
f
852.5 876.25 mo
852.5 863.824 862.574 853.75 875 853.75 cv
887.426 853.75 897.5 863.824 897.5 876.25 cv
897.5 888.676 887.426 898.75 875 898.75 cv
862.574 898.75 852.5 888.676 852.5 876.25 cv
cp
f
875 926.875 mo
847.041 926.875 824.375 949.541 824.375 977.5 cv
824.375 984.401 li
838.801 994.236 856.223 1000 875 1000 cv
893.777 1000 911.199 994.236 925.625 984.401 cv
925.625 977.5 li
925.625 949.541 902.959 926.875 875 926.875 cv
cp
f
4891.25 540.625 mo
4891.25 526.128 4879.5 514.375 4865 514.375 cv
4850.5 514.375 4838.75 526.128 4838.75 540.625 cv
4838.75 555.122 4850.5 566.875 4865 566.875 cv
4879.5 566.875 4891.25 555.122 4891.25 540.625 cv
cp
.266667 .223529 .290196 rgb
f
4865 599.688 mo
4832.38 599.688 4805.94 626.131 4805.94 658.75 cv
4805.94 666.801 li
4822.77 678.275 4843.09 685 4865 685 cv
4886.91 685 4907.23 678.275 4924.06 666.801 cv
4924.06 658.75 li
4924.06 626.131 4897.62 599.688 4865 599.688 cv
cp
f
6237.5 2211.25 mo
6237.5 2198.82 6227.43 2188.75 6215 2188.75 cv
6202.57 2188.75 6192.5 2198.82 6192.5 2211.25 cv
6192.5 2223.68 6202.57 2233.75 6215 2233.75 cv
6227.43 2233.75 6237.5 2223.68 6237.5 2211.25 cv
cp
f
6215 2261.87 mo
6187.04 2261.87 6164.38 2284.54 6164.38 2312.5 cv
6164.38 2319.4 li
6178.8 2329.24 6196.22 2335 6215 2335 cv
6233.78 2335 6251.2 2329.24 6265.63 2319.4 cv
6265.63 2312.5 li
6265.63 2284.54 6242.96 2261.87 6215 2261.87 cv
cp
f
5547.5 1521.25 mo
5547.5 1508.82 5537.43 1498.75 5525 1498.75 cv
5512.57 1498.75 5502.5 1508.82 5502.5 1521.25 cv
5502.5 1533.68 5512.57 1543.75 5525 1543.75 cv
5537.43 1543.75 5547.5 1533.68 5547.5 1521.25 cv
cp
f
5525 1571.87 mo
5497.04 1571.87 5474.38 1594.54 5474.38 1622.5 cv
5474.38 1629.4 li
5488.8 1639.24 5506.22 1645 5525 1645 cv
5543.78 1645 5561.2 1639.24 5575.63 1629.4 cv
5575.63 1622.5 li
5575.63 1594.54 5552.96 1571.87 5525 1571.87 cv
cp
f
4512.5 1877.5 mo
4504.22 1877.5 4497.5 1884.22 4497.5 1892.5 cv
4497.5 1900.78 4504.22 1907.5 4512.5 1907.5 cv
4520.78 1907.5 4527.5 1900.78 4527.5 1892.5 cv
4527.5 1884.22 4520.78 1877.5 4512.5 1877.5 cv
cp
/0 
<<
/Name (All)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Additive
/TintProc null
/NComponents 3 
/Components [ 0 0 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
2960 190 mo
2960 181.716 2953.28 175 2945 175 cv
2936.72 175 2930 181.716 2930 190 cv
2930 198.284 2936.72 205 2945 205 cv
2953.28 205 2960 198.284 2960 190 cv
cp
f
3440 580 mo
3440 571.716 3433.28 565 3425 565 cv
3416.72 565 3410 571.716 3410 580 cv
3410 588.284 3416.72 595 3425 595 cv
3433.28 595 3440 588.284 3440 580 cv
cp
f
2900 190 mo
2900 181.716 2893.28 175 2885 175 cv
2876.72 175 2870 181.716 2870 190 cv
2870 198.284 2876.72 205 2885 205 cv
2893.28 205 2900 198.284 2900 190 cv
cp
f
2840 190 mo
2840 181.716 2833.28 175 2825 175 cv
2816.72 175 2810 181.716 2810 190 cv
2810 198.284 2816.72 205 2825 205 cv
2833.28 205 2840 198.284 2840 190 cv
cp
f
897.5 876.25 mo
897.5 863.824 887.426 853.75 875 853.75 cv
862.574 853.75 852.5 863.824 852.5 876.25 cv
852.5 888.676 862.574 898.75 875 898.75 cv
887.426 898.75 897.5 888.676 897.5 876.25 cv
cp
f
852.5 186.25 mo
852.5 173.824 862.574 163.75 875 163.75 cv
887.426 163.75 897.5 173.824 897.5 186.25 cv
897.5 198.676 887.426 208.75 875 208.75 cv
862.574 208.75 852.5 198.676 852.5 186.25 cv
cp
f
162.5 876.25 mo
162.5 863.824 172.574 853.75 185 853.75 cv
197.426 853.75 207.5 863.824 207.5 876.25 cv
207.5 888.676 197.426 898.75 185 898.75 cv
172.574 898.75 162.5 888.676 162.5 876.25 cv
cp
f
207.5 186.25 mo
207.5 173.824 197.426 163.75 185 163.75 cv
172.574 163.75 162.5 173.824 162.5 186.25 cv
162.5 198.676 172.574 208.75 185 208.75 cv
197.426 208.75 207.5 198.676 207.5 186.25 cv
cp
f
935.912 953.431 mo
926.28 929.145 902.675 911.875 875 911.875 cv
847.325 911.875 823.72 929.145 814.088 953.431 cv
805.302 941.148 800 926.219 800 910 cv
800 868.647 833.648 835 875 835 cv
916.352 835 950 868.647 950 910 cv
950 926.219 944.698 941.148 935.912 953.431 cv
cp
839.558 975.685 mo
840.525 956.9 855.978 941.875 875 941.875 cv
894.022 941.875 909.475 956.9 910.442 975.685 cv
899.837 981.435 887.885 985 875 985 cv
862.115 985 850.163 981.435 839.558 975.685 cv
cp
530 835 mo
460.948 835 397.707 809.237 349.809 766.402 cv
424.493 691.718 li
453.118 715.592 489.899 730 530 730 cv
569.468 730 606.505 715.942 635.549 691.76 cv
709.857 766.068 li
660.21 810.456 597.028 835 530 835 cv
cp
245.912 953.431 mo
236.28 929.145 212.676 911.875 185 911.875 cv
157.324 911.875 133.72 929.145 124.088 953.431 cv
115.302 941.148 110 926.219 110 910 cv
110 868.647 143.647 835 185 835 cv
226.352 835 260 868.647 260 910 cv
260 926.219 254.698 941.148 245.912 953.431 cv
cp
149.558 975.685 mo
150.525 956.9 165.978 941.875 185 941.875 cv
204.022 941.875 219.475 956.9 220.442 975.685 cv
209.837 981.435 197.885 985 185 985 cv
172.115 985 160.163 981.435 149.558 975.685 cv
cp
245 550 mo
253.269 550 260 556.731 260 565 cv
260 573.178 253.4 579.802 245.255 579.948 cv
245.202 579.953 245.156 579.929 245.102 579.934 cv
245.041 579.94 244.995 579.979 244.934 579.986 cv
236.698 579.948 230 573.245 230 565 cv
230 556.731 236.731 550 245 550 cv
cp
149.558 285.685 mo
150.525 266.9 165.978 251.875 185 251.875 cv
204.022 251.875 219.475 266.9 220.442 285.685 cv
209.837 291.435 197.885 295 185 295 cv
172.115 295 160.163 291.435 149.558 285.685 cv
cp
110 220 mo
110 178.647 143.647 145 185 145 cv
226.352 145 260 178.647 260 220 cv
260 236.219 254.698 251.148 245.912 263.431 cv
236.28 239.145 212.676 221.875 185 221.875 cv
157.324 221.875 133.72 239.145 124.088 263.431 cv
115.302 251.148 110 236.219 110 220 cv
cp
530 295 mo
599.052 295 662.293 320.763 710.191 363.598 cv
635.541 438.248 li
606.485 414.063 569.436 400 530 400 cv
489.899 400 453.118 414.408 424.493 438.282 cv
350.199 363.988 li
399.725 319.564 462.89 295 530 295 cv
cp
875 145 mo
916.352 145 950 178.647 950 220 cv
950 236.219 944.698 251.148 935.912 263.431 cv
926.28 239.145 902.675 221.875 875 221.875 cv
847.325 221.875 823.72 239.145 814.088 263.431 cv
805.302 251.148 800 236.219 800 220 cv
800 178.647 833.648 145 875 145 cv
cp
839.558 285.685 mo
840.525 266.9 855.978 251.875 875 251.875 cv
894.022 251.875 909.475 266.9 910.442 285.685 cv
899.837 291.435 887.885 295 875 295 cv
862.115 295 850.163 291.435 839.558 285.685 cv
cp
815 580 mo
806.731 580 800 573.269 800 565 cv
799.985 556.626 806.837 550.168 815.066 550.014 cv
823.302 550.052 830 556.755 830 565 cv
830 573.269 823.269 580 815 580 cv
cp
875 805 mo
851.454 805 829.768 812.885 812.235 826.024 cv
656.82 670.609 li
666.95 658.435 675.444 644.683 681.868 629.6 cv
685.112 621.982 681.567 613.171 673.943 609.927 cv
666.355 606.66 657.507 610.227 654.27 617.852 cv
633.015 667.751 584.236 700 530 700 cv
455.564 700 395 639.436 395 565 cv
395 490.564 455.564 430 530 430 cv
584.031 430 632.737 462.08 654.087 511.724 cv
657.354 519.333 666.15 522.849 673.789 519.575 cv
681.399 516.309 684.915 507.483 681.641 499.873 cv
675.247 484.999 666.821 471.438 656.805 459.406 cv
731.306 384.905 li
765.244 422.854 788.461 470.66 796.525 524.071 cv
780.925 531.145 770 546.785 770 565 cv
770 589.814 790.185 610 815 610 cv
839.815 610 860 589.814 860 565 cv
860 544.173 845.709 526.771 826.467 521.664 cv
817.72 460.869 791.355 406.487 752.589 363.621 cv
812.235 303.976 li
829.768 317.115 851.454 325 875 325 cv
932.898 325 980 277.898 980 220 cv
980 162.102 932.898 115 875 115 cv
817.102 115 770 162.102 770 220 cv
770 243.546 777.885 265.232 791.024 282.765 cv
731.462 342.327 li
678.095 294.061 607.321 265 530 265 cv
454.876 265 384.204 292.704 328.988 342.777 cv
268.976 282.765 li
282.115 265.232 290 243.546 290 220 cv
290 162.102 242.898 115 185 115 cv
127.102 115 80 162.102 80 220 cv
80 277.898 127.102 325 185 325 cv
208.546 325 230.232 317.115 247.765 303.976 cv
403.282 459.493 li
379.408 488.118 365 524.899 365 565 cv
365 605.101 379.408 641.882 403.282 670.507 cv
328.694 745.095 li
294.756 707.146 271.539 659.34 263.475 605.929 cv
279.076 598.855 290 583.215 290 565 cv
290 540.185 269.814 520 245 520 cv
220.186 520 200 540.185 200 565 cv
200 585.827 214.29 603.227 233.532 608.335 cv
242.279 669.13 268.645 723.513 307.411 766.378 cv
247.765 826.024 li
230.232 812.885 208.546 805 185 805 cv
127.102 805 80 852.102 80 910 cv
80 967.898 127.102 1015 185 1015 cv
242.898 1015 290 967.898 290 910 cv
290 886.454 282.115 864.768 268.976 847.235 cv
328.538 787.673 li
381.905 835.939 452.679 865 530 865 cv
605.039 865 675.735 837.318 731.07 787.281 cv
791.024 847.235 li
777.885 864.768 770 886.454 770 910 cv
770 967.898 817.102 1015 875 1015 cv
932.898 1015 980 967.898 980 910 cv
980 852.102 932.898 805 875 805 cv
cp
f
532.358 681.265 mo
540.642 681.265 547.358 674.548 547.358 666.265 cv
547.358 651.775 li
569.225 644.685 585.188 624.359 585.188 600.164 cv
585.188 570.112 560.74 545.664 530.696 545.664 cv
520.528 546.621 511.306 538.899 511.367 528.518 cv
511.367 519.063 519.065 511.365 528.521 511.365 cv
537.976 511.365 545.667 519.063 545.667 528.518 cv
545.667 536.802 552.383 543.518 560.667 543.518 cv
568.95 543.518 575.667 536.802 575.667 528.518 cv
575.667 508.181 562.652 490.97 544.575 484.368 cv
544.575 472.239 li
544.575 463.955 537.859 457.239 529.575 457.239 cv
521.292 457.239 514.575 463.955 514.575 472.239 cv
514.575 483.71 li
495.408 489.699 481.367 507.403 481.367 528.518 cv
481.367 554.512 502.52 575.664 528.521 575.664 cv
542.75 574.623 555.253 585.776 555.188 600.164 cv
555.188 613.669 544.202 624.656 530.696 624.656 cv
517.19 624.656 506.196 613.669 506.196 600.164 cv
506.196 591.88 499.48 585.164 491.196 585.164 cv
482.913 585.164 476.196 591.88 476.196 600.164 cv
476.196 625.582 493.771 646.82 517.358 652.81 cv
517.358 666.265 li
517.358 674.548 524.075 681.265 532.358 681.265 cv
cp
f
2015 985 mo
1970 985 li
1970 850 li
2015 850 li
2015 985 li
cp
2030 820 mo
1955 820 li
1946.72 820 1940 826.716 1940 835 cv
1940 1000 li
1940 1008.28 1946.72 1015 1955 1015 cv
2030 1015 li
2038.28 1015 2045 1008.28 2045 1000 cv
2045 835 li
2045 826.716 2038.28 820 2030 820 cv
cp
f
1880 985 mo
1835 985 li
1835 895 li
1880 895 li
1880 985 li
cp
1895 865 mo
1820 865 li
1811.72 865 1805 871.716 1805 880 cv
1805 1000 li
1805 1008.28 1811.72 1015 1820 1015 cv
1895 1015 li
1903.28 1015 1910 1008.28 1910 1000 cv
1910 880 li
1910 871.716 1903.28 865 1895 865 cv
cp
f
1745 985 mo
1700 985 li
1700 925 li
1745 925 li
1745 985 li
cp
1760 895 mo
1685 895 li
1676.72 895 1670 901.716 1670 910 cv
1670 1000 li
1670 1008.28 1676.72 1015 1685 1015 cv
1760 1015 li
1768.28 1015 1775 1008.28 1775 1000 cv
1775 910 li
1775 901.716 1768.28 895 1760 895 cv
cp
f
1610 985 mo
1565 985 li
1565 955 li
1610 955 li
1610 985 li
cp
1625 925 mo
1550 925 li
1541.72 925 1535 931.716 1535 940 cv
1535 1000 li
1535 1008.28 1541.72 1015 1550 1015 cv
1625 1015 li
1633.28 1015 1640 1008.28 1640 1000 cv
1640 940 li
1640 931.716 1633.28 925 1625 925 cv
cp
f
2150 985 mo
2105 985 li
2105 745 li
2150 745 li
2150 985 li
cp
2165 715 mo
2090 715 li
2081.72 715 2075 721.716 2075 730 cv
2075 1000 li
2075 1008.28 2081.72 1015 2090 1015 cv
2165 1015 li
2173.28 1015 2180 1008.28 2180 1000 cv
2180 730 li
2180 721.716 2173.28 715 2165 715 cv
cp
f
2300 475 mo
2225 475 li
2216.72 475 2210 481.716 2210 490 cv
2210 550 li
2210 558.284 2216.72 565 2225 565 cv
2233.28 565 2240 558.284 2240 550 cv
2240 505 li
2285 505 li
2285 985 li
2240 985 li
2240 670 li
2240 661.716 2233.28 655 2225 655 cv
2216.72 655 2210 661.716 2210 670 cv
2210 1000 li
2210 1008.28 2216.72 1015 2225 1015 cv
2300 1015 li
2308.28 1015 2315 1008.28 2315 1000 cv
2315 490 li
2315 481.716 2308.28 475 2300 475 cv
cp
f
4891.25 535 mo
4891.25 520.503 4879.5 508.75 4865 508.75 cv
4850.5 508.75 4838.75 520.503 4838.75 535 cv
4838.75 549.497 4850.5 561.25 4865 561.25 cv
4879.5 561.25 4891.25 549.497 4891.25 535 cv
cp
f
6005 445 mo
6013.28 445 6020 451.731 6020 460 cv
6020 468.269 6013.28 475 6005 475 cv
5996.72 475 5990 468.269 5990 460 cv
5990 451.731 5996.72 445 6005 445 cv
cp
5735 445 mo
5743.28 445 5750 451.731 5750 460 cv
5750 468.269 5743.28 475 5735 475 cv
5726.72 475 5720 468.269 5720 460 cv
5720 451.731 5726.72 445 5735 445 cv
cp
5526.85 985 mo
5598.36 370 li
5720 370 li
5720 417.764 li
5702.58 423.976 5690 440.471 5690 460 cv
5690 484.815 5710.19 505 5735 505 cv
5759.81 505 5780 484.815 5780 460 cv
5780 440.471 5767.42 423.976 5750 417.764 cv
5750 370 li
5990 370 li
5990 417.764 li
5972.58 423.976 5960 440.471 5960 460 cv
5960 484.815 5980.19 505 6005 505 cv
6029.81 505 6050 484.815 6050 460 cv
6050 440.471 6037.42 423.976 6020 417.764 cv
6020 370 li
6141.64 370 li
6213.15 985 li
5526.85 985 li
cp
5750 265 mo
5750 198.833 5803.83 145 5870 145 cv
5934.51 143.735 5991.27 200.428 5990 265 cv
5990 340 li
5750 340 li
5750 265 li
cp
6169.9 353.264 mo
6169.02 345.706 6162.62 340 6155 340 cv
6020 340 li
6020 265 li
6021.57 184.227 5950.7 113.445 5870 115 cv
5787.29 115 5720 182.288 5720 265 cv
5720 340 li
5585 340 li
5577.38 340 5570.98 345.706 5570.1 353.264 cv
5495.1 998.264 li
5493.89 1006.91 5501.3 1015.19 5510 1015 cv
6230 1015 li
6238.7 1015.19 6246.11 1006.91 6244.9 998.264 cv
6169.9 353.264 li
cp
f
5675 925 mo
5570 925 li
5561.71 925 5555 931.716 5555 940 cv
5555 948.284 5561.71 955 5570 955 cv
5675 955 li
5683.29 955 5690 948.284 5690 940 cv
5690 931.716 5683.29 925 5675 925 cv
cp
f
5750 940 mo
5750 931.716 5743.28 925 5735 925 cv
5726.72 925 5720 931.716 5720 940 cv
5720 948.284 5726.72 955 5735 955 cv
5743.28 955 5750 948.284 5750 940 cv
cp
f
410 2125 mo
410 2116.72 403.284 2110 395 2110 cv
386.716 2110 380 2116.72 380 2125 cv
380 2133.28 386.716 2140 395 2140 cv
403.284 2140 410 2133.28 410 2125 cv
cp
f
290 1525 mo
290 1516.72 283.284 1510 275 1510 cv
266.716 1510 260 1516.72 260 1525 cv
260 1533.28 266.716 1540 275 1540 cv
283.284 1540 290 1533.28 290 1525 cv
cp
f
230 1525 mo
230 1516.72 223.284 1510 215 1510 cv
206.716 1510 200 1516.72 200 1525 cv
200 1533.28 206.716 1540 215 1540 cv
223.284 1540 230 1533.28 230 1525 cv
cp
f
170 1525 mo
170 1516.72 163.284 1510 155 1510 cv
146.716 1510 140 1516.72 140 1525 cv
140 1533.28 146.716 1540 155 1540 cv
163.284 1540 170 1533.28 170 1525 cv
cp
f
2780 985 mo
2780 265 li
3620 265 li
3620 985 li
2780 985 li
cp
2780 145 mo
3620 145 li
3620 235 li
2780 235 li
2780 145 li
cp
3635 115 mo
2765 115 li
2756.72 115 2750 121.716 2750 130 cv
2750 1000 li
2750 1008.28 2756.72 1015 2765 1015 cv
3635 1015 li
3643.28 1015 3650 1008.28 3650 1000 cv
3650 130 li
3650 121.716 3643.28 115 3635 115 cv
cp
f
3290 175 mo
3110 175 li
3101.72 175 3095 181.716 3095 190 cv
3095 198.284 3101.72 205 3110 205 cv
3290 205 li
3298.28 205 3305 198.284 3305 190 cv
3305 181.716 3298.28 175 3290 175 cv
cp
f
3560 175 mo
3485 175 li
3476.72 175 3470 181.716 3470 190 cv
3470 198.284 3476.72 205 3485 205 cv
3560 205 li
3568.28 205 3575 198.284 3575 190 cv
3575 181.716 3568.28 175 3560 175 cv
cp
f
3199.93 655 mo
2825.07 655 li
2816.75 655 2810 661.716 2810 670 cv
2810 678.284 2816.75 685 2825.07 685 cv
3199.93 685 li
3208.25 685 3215 678.284 3215 670 cv
3215 661.716 3208.25 655 3199.93 655 cv
cp
f
3199.93 745 mo
2825.07 745 li
2816.75 745 2810 751.716 2810 760 cv
2810 768.284 2816.75 775 2825.07 775 cv
3199.93 775 li
3208.25 775 3215 768.284 3215 760 cv
3215 751.716 3208.25 745 3199.93 745 cv
cp
f
3199.93 835 mo
2825.07 835 li
2816.75 835 2810 841.716 2810 850 cv
2810 858.284 2816.75 865 2825.07 865 cv
3199.93 865 li
3208.25 865 3215 858.284 3215 850 cv
3215 841.716 3208.25 835 3199.93 835 cv
cp
f
3199.93 925 mo
2825.07 925 li
2816.75 925 2810 931.716 2810 940 cv
2810 948.284 2816.75 955 2825.07 955 cv
3199.93 955 li
3208.25 955 3215 948.284 3215 940 cv
3215 931.716 3208.25 925 3199.93 925 cv
cp
f
3058.69 460 mo
3076.11 413.081 li
3093.54 460 li
3058.69 460 li
cp
3145.89 514.777 mo
3145.89 514.778 3090.17 364.778 3090.17 364.778 cv
3085.9 351.966 3066.32 351.969 3062.05 364.778 cv
3006.34 514.778 li
2999.61 533.101 3027.45 543.666 3034.47 525.221 cv
3034.47 525.222 3047.55 490 3047.55 490 cv
3104.68 490 li
3117.76 525.222 li
3124.67 543.55 3152.64 533.217 3145.89 514.777 cv
cp
f
3238.61 407.5 mo
3238.61 482.5 li
3238.61 494.907 3228.52 505 3216.11 505 cv
3193.61 505 li
3193.61 385 li
3216.11 385 li
3228.52 385 3238.61 395.093 3238.61 407.5 cv
cp
3178.61 355 mo
3170.33 355 3163.61 361.716 3163.61 370 cv
3163.61 520 li
3163.61 528.284 3170.33 535 3178.61 535 cv
3216.11 535 li
3245.06 535 3268.61 511.445 3268.61 482.5 cv
3268.61 407.5 li
3268.61 378.555 3245.06 355 3216.11 355 cv
3178.61 355 li
cp
f
3349.6 505 mo
3303.22 505 li
3283.54 505.293 3283.49 534.685 3303.22 535 cv
3303.22 535 3349.6 535 3349.6 535 cv
3374.41 535 3394.6 514.815 3394.6 490 cv
3394.6 475 li
3394.6 450.186 3374.41 430 3349.6 430 cv
3333.22 430 li
3324.95 430 3318.22 423.269 3318.22 415 cv
3318.22 400 li
3318.22 391.731 3324.95 385 3333.22 385 cv
3379.6 385 li
3399.28 384.707 3399.33 355.315 3379.6 355 cv
3379.6 355 3333.22 355 3333.22 355 cv
3308.41 355 3288.22 375.185 3288.22 400 cv
3288.22 415 li
3288.22 439.815 3308.41 460 3333.22 460 cv
3349.6 460 li
3357.87 460 3364.6 466.731 3364.6 475 cv
3364.6 490 li
3364.6 498.269 3357.87 505 3349.6 505 cv
cp
f
3575 295 mo
2825 295 li
2816.72 295 2810 301.716 2810 310 cv
2810 580 li
2810 588.284 2816.72 595 2825 595 cv
3365 595 li
3373.28 595 3380 588.284 3380 580 cv
3380 571.716 3373.28 565 3365 565 cv
2840 565 li
2840 325 li
3560 325 li
3560 565 li
3485 565 li
3476.72 565 3470 571.716 3470 580 cv
3470 588.284 3476.72 595 3485 595 cv
3575 595 li
3583.28 595 3590 588.284 3590 580 cv
3590 310 li
3590 301.716 3583.28 295 3575 295 cv
cp
f
110 2320 mo
110 1600 li
950 1600 li
950 2320 li
110 2320 li
cp
110 1480 mo
950 1480 li
950 1570 li
110 1570 li
110 1480 li
cp
965 1450 mo
95 1450 li
86.709 1450 80 1456.72 80 1465 cv
80 2335 li
80 2343.28 86.709 2350 95 2350 cv
965 2350 li
973.291 2350 980 2343.28 980 2335 cv
980 1465 li
980 1456.72 973.291 1450 965 1450 cv
cp
f
620 1510 mo
440 1510 li
431.709 1510 425 1516.72 425 1525 cv
425 1533.28 431.709 1540 440 1540 cv
620 1540 li
628.291 1540 635 1533.28 635 1525 cv
635 1516.72 628.291 1510 620 1510 cv
cp
f
890 1510 mo
815 1510 li
806.709 1510 800 1516.72 800 1525 cv
800 1533.28 806.709 1540 815 1540 cv
890 1540 li
898.291 1540 905 1533.28 905 1525 cv
905 1516.72 898.291 1510 890 1510 cv
cp
f
507.5 1960 mo
446.445 1960 li
398.823 1870.96 li
412.007 1868.48 425.469 1871.3 437.876 1879.31 cv
507.5 1924.22 li
507.5 1960 li
cp
191.006 1905.52 mo
280.229 1840.42 li
313.046 1817.33 344.538 1835.32 364.604 1870.63 cv
412.414 1960 li
191.006 1960 li
191.006 1905.52 li
cp
191.006 1660 mo
507.5 1660 li
507.5 1888.52 li
454.15 1854.11 li
432.144 1839.89 406.986 1836.57 383.361 1844.13 cv
354.69 1801.36 304.48 1785.23 262.548 1816.18 cv
262.549 1816.18 191.006 1868.38 191.006 1868.38 cv
191.006 1660 li
cp
522.5 1630 mo
176.006 1630 li
167.715 1630 161.006 1636.72 161.006 1645 cv
161.006 1975 li
161.006 1983.28 167.715 1990 176.006 1990 cv
522.5 1990 li
530.791 1990 537.5 1983.28 537.5 1975 cv
537.5 1645 li
537.5 1636.72 530.791 1630 522.5 1630 cv
cp
f
349.253 1718.15 mo
359.185 1718.15 367.256 1725.76 367.256 1735.13 cv
367.256 1744.5 359.185 1752.12 349.253 1752.12 cv
339.321 1752.12 331.25 1744.5 331.25 1735.13 cv
331.25 1725.76 339.321 1718.15 349.253 1718.15 cv
cp
349.253 1782.12 mo
375.723 1782.12 397.256 1761.04 397.256 1735.13 cv
397.256 1709.23 375.723 1688.15 349.253 1688.15 cv
322.783 1688.15 301.25 1709.23 301.25 1735.13 cv
301.25 1761.04 322.783 1782.12 349.253 1782.12 cv
cp
f
515 2035 mo
170 2035 li
161.709 2035 155 2041.72 155 2050 cv
155 2058.28 161.709 2065 170 2065 cv
515 2065 li
523.291 2065 530 2058.28 530 2050 cv
530 2041.72 523.291 2035 515 2035 cv
cp
f
515 2185 mo
170 2185 li
161.709 2185 155 2191.72 155 2200 cv
155 2208.28 161.709 2215 170 2215 cv
515 2215 li
523.291 2215 530 2208.28 530 2200 cv
530 2191.72 523.291 2185 515 2185 cv
cp
f
170 2140 mo
335 2140 li
343.291 2140 350 2133.28 350 2125 cv
350 2116.72 343.291 2110 335 2110 cv
170 2110 li
161.709 2110 155 2116.72 155 2125 cv
155 2133.28 161.709 2140 170 2140 cv
cp
f
515 2110 mo
455 2110 li
446.709 2110 440 2116.72 440 2125 cv
440 2133.28 446.709 2140 455 2140 cv
515 2140 li
523.291 2140 530 2133.28 530 2125 cv
530 2116.72 523.291 2110 515 2110 cv
cp
f
515 2260 mo
170 2260 li
161.709 2260 155 2266.72 155 2275 cv
155 2283.28 161.709 2290 170 2290 cv
515 2290 li
523.291 2290 530 2283.28 530 2275 cv
530 2266.72 523.291 2260 515 2260 cv
cp
f
4356.55 2845 mo
4356.55 2836.72 4349.37 2830 4340.52 2830 cv
4331.66 2830 4324.48 2836.72 4324.48 2845 cv
4324.48 2853.28 4331.66 2860 4340.52 2860 cv
4349.37 2860 4356.55 2853.28 4356.55 2845 cv
cp
f
4446.55 3610 mo
4446.55 3601.72 4439.37 3595 4430.52 3595 cv
4421.66 3595 4414.48 3601.72 4414.48 3610 cv
4414.48 3618.28 4421.66 3625 4430.52 3625 cv
4439.37 3625 4446.55 3618.28 4446.55 3610 cv
cp
f
4370 3595 mo
4236.3 3595 li
4228.01 3595 4221.3 3601.71 4221.3 3610 cv
4221.3 3618.29 4228.01 3625 4236.3 3625 cv
4370 3625 li
4378.28 3625 4385 3618.29 4385 3610 cv
4385 3601.71 4378.28 3595 4370 3595 cv
cp
f
4550 3640 mo
4550 3648.28 4543.27 3655 4535 3655 cv
4130 3655 li
4121.73 3655 4115 3648.28 4115 3640 cv
4115 2830 li
4115 2821.73 4121.73 2815 4130 2815 cv
4535 2815 li
4542.54 2815 4548.8 2820.6 4549.85 2827.85 cv
4527.51 2842.22 4506.47 2858.86 4488.88 2878.85 cv
4483.28 2876.39 4477.18 2875 4470.8 2875 cv
4194.2 2875 li
4169.39 2875 4149.2 2895.19 4149.2 2920 cv
4149.2 3520 li
4149.2 3544.81 4169.39 3565 4194.2 3565 cv
4470.8 3565 li
4495.62 3565 4515.8 3544.81 4515.8 3520 cv
4515.8 3325.31 li
4550 3313.11 li
4550 3640 li
cp
4485.8 3336.06 mo
4485.8 3520 li
4485.8 3528.28 4479.07 3535 4470.8 3535 cv
4194.2 3535 li
4185.94 3535 4179.2 3528.28 4179.2 3520 cv
4179.2 2920 li
4179.2 2911.73 4185.94 2905 4194.2 2905 cv
4467.59 2905 li
4433.95 2953.09 4415.07 3011.24 4415 3070 cv
4415 3122.86 4429.57 3174.26 4457.21 3219.14 cv
4415.87 3334.96 li
4411.32 3346.46 4423.68 3358.36 4435.03 3354.14 cv
4485.8 3336.06 li
cp
4955 3070 mo
4955 3210.61 4840.61 3325 4700 3325 cv
4655.04 3325 4610.97 3313.15 4572.45 3290.68 cv
4564.65 3286.65 4557.06 3278.57 4547.64 3282.08 cv
4454.76 3315.27 li
4487.93 3222.34 li
4489.5 3217.93 4488.92 3213.03 4486.36 3209.1 cv
4459.3 3167.63 4445 3119.53 4445 3070 cv
4442.25 2933.06 4563.09 2812.35 4700 2815 cv
4840.61 2815 4955 2929.39 4955 3070 cv
cp
4700 3355 mo
4857.15 3355 4985 3227.15 4985 3070 cv
4985 2912.85 4857.15 2785 4700 2785 cv
4657.16 2785 4614.95 2794.77 4576.68 2813.22 cv
4570.01 2796.71 4553.88 2785 4535 2785 cv
4130 2785 li
4105.19 2785 4085 2805.19 4085 2830 cv
4085 3640 li
4085 3664.81 4105.19 3685 4130 3685 cv
4535 3685 li
4559.81 3685 4580 3664.81 4580 3640 cv
4580 3328.32 li
4617.33 3345.74 4658.3 3355 4700 3355 cv
cp
f
4685 3655 mo
4655 3655 li
4655 3490 li
4685 3490 li
4685 3655 li
cp
4700 3460 mo
4640 3460 li
4631.72 3460 4625 3466.71 4625 3475 cv
4625 3670 li
4625 3678.29 4631.72 3685 4640 3685 cv
4700 3685 li
4708.28 3685 4715 3678.29 4715 3670 cv
4715 3475 li
4715 3466.71 4708.28 3460 4700 3460 cv
cp
f
4820 3655 mo
4790 3655 li
4790 3415 li
4820 3415 li
4820 3655 li
cp
4835 3385 mo
4775 3385 li
4766.72 3385 4760 3391.71 4760 3400 cv
4760 3670 li
4760 3678.29 4766.72 3685 4775 3685 cv
4835 3685 li
4843.28 3685 4850 3678.29 4850 3670 cv
4850 3400 li
4850 3391.71 4843.28 3385 4835 3385 cv
cp
f
4955 3655 mo
4925 3655 li
4925 3355 li
4955 3355 li
4955 3655 li
cp
4970 3325 mo
4910 3325 li
4901.72 3325 4895 3331.71 4895 3340 cv
4895 3670 li
4895 3678.29 4901.72 3685 4910 3685 cv
4970 3685 li
4978.28 3685 4985 3678.29 4985 3670 cv
4985 3340 li
4985 3331.71 4978.28 3325 4970 3325 cv
cp
f
453.42 3550 mo
126.58 3550 li
116.042 3527.13 110 3501.79 110 3475 cv
110 3459.44 112.193 3444.41 115.924 3430 cv
245 3430 li
253.291 3430 260 3423.28 260 3415 cv
260 3406.72 253.291 3400 245 3400 cv
126.58 3400 li
155.091 3338.14 217.53 3295 290 3295 cv
362.47 3295 424.909 3338.14 453.42 3400 cv
365 3400 li
356.709 3400 350 3406.72 350 3415 cv
350 3423.28 356.709 3430 365 3430 cv
464.077 3430 li
467.807 3444.41 470 3459.44 470 3475 cv
470 3501.79 463.958 3527.13 453.42 3550 cv
cp
290 3655 mo
229.947 3655 176.813 3625.33 144.097 3580 cv
435.903 3580 li
403.187 3625.33 350.053 3655 290 3655 cv
cp
290 3175 mo
298.276 3175 305 3181.73 305 3190 cv
305 3198.27 298.276 3205 290 3205 cv
281.724 3205 275 3198.27 275 3190 cv
275 3181.73 281.724 3175 290 3175 cv
cp
305 3265.76 mo
305 3232.24 li
322.422 3226.02 335 3209.53 335 3190 cv
335 3165.19 314.814 3145 290 3145 cv
265.185 3145 245 3165.19 245 3190 cv
245 3209.53 257.577 3226.02 275 3232.23 cv
275 3265.76 li
166.206 3273.5 80 3364.27 80 3475 cv
80 3590.8 174.204 3685 290 3685 cv
405.796 3685 500 3590.8 500 3475 cv
500 3364.27 413.794 3273.5 305 3265.76 cv
cp
f
770 2815 mo
869.258 2815 950 2895.75 950 2995 cv
950 3043.91 930.334 3088.26 898.568 3120.74 cv
885.137 3062.1 832.653 3018.19 770 3018.19 cv
707.347 3018.19 654.863 3062.1 641.432 3120.74 cv
609.666 3088.26 590 3043.91 590 2995 cv
590 2895.75 670.742 2815 770 2815 cv
cp
668.346 3143.41 mo
671.861 3090.33 716.053 3048.19 770 3048.19 cv
823.947 3048.19 868.139 3090.33 871.654 3143.41 cv
814.746 3185.03 725.253 3185.03 668.346 3143.41 cv
cp
770 3205 mo
885.796 3205 980 3110.8 980 2995 cv
980 2879.2 885.796 2785 770 2785 cv
654.204 2785 560 2879.2 560 2995 cv
560 3110.8 654.204 3205 770 3205 cv
cp
f
770 2882.72 mo
790.557 2882.72 807.277 2899.45 807.277 2920 cv
807.277 2940.55 790.557 2957.28 770 2957.28 cv
749.443 2957.28 732.723 2940.55 732.723 2920 cv
732.723 2899.45 749.443 2882.72 770 2882.72 cv
cp
770 2987.5 mo
807.218 2987.5 837.5 2957.22 837.5 2920 cv
837.5 2882.78 807.218 2852.5 770 2852.5 cv
732.782 2852.5 702.5 2882.78 702.5 2920 cv
702.5 2957.22 732.782 2987.5 770 2987.5 cv
cp
f
110 2860 mo
110 2835.19 130.186 2815 155 2815 cv
455 2815 li
479.815 2815 500 2835.19 500 2860 cv
500 3010 li
500 3011.61 500.264 3013.22 500.776 3014.75 cv
520.947 3075.3 li
385.127 3025.9 li
383.486 3025.31 381.743 3025 380 3025 cv
155 3025 li
130.186 3025 110 3004.81 110 2980 cv
110 2860 li
cp
155 3055 mo
377.363 3055 li
539.873 3114.1 li
551.115 3118.63 563.489 3106.67 559.224 3095.25 cv
530 3007.57 li
530 2860 li
530 2818.65 496.353 2785 455 2785 cv
155 2785 li
113.647 2785 80 2818.65 80 2860 cv
80 2980 li
80 3021.35 113.647 3055 155 3055 cv
cp
f
953.75 3611 mo
953.75 3635.26 934.004 3655 909.746 3655 cv
614.756 3655 li
590.498 3655 570.752 3635.26 570.752 3611 cv
570.752 3463.5 li
570.752 3461.89 570.488 3460.29 569.976 3458.75 cv
550.303 3399.71 li
683.369 3448.1 li
685.01 3448.69 686.753 3449 688.496 3449 cv
909.746 3449 li
934.004 3449 953.75 3468.74 953.75 3493 cv
953.75 3611 li
cp
909.746 3419 mo
691.133 3419 li
531.377 3360.9 li
520.1 3356.38 507.774 3368.33 512.026 3379.75 cv
540.752 3465.93 li
540.752 3611 li
540.752 3651.81 573.945 3685 614.756 3685 cv
909.746 3685 li
950.557 3685 983.75 3651.81 983.75 3611 cv
983.75 3493 li
983.75 3452.2 950.557 3419 909.746 3419 cv
cp
f
170 2890 mo
425 2890 li
433.291 2890 440 2883.28 440 2875 cv
440 2866.72 433.291 2860 425 2860 cv
170 2860 li
161.709 2860 155 2866.72 155 2875 cv
155 2883.28 161.709 2890 170 2890 cv
cp
f
170 2980 mo
380 2980 li
388.291 2980 395 2973.28 395 2965 cv
395 2956.72 388.291 2950 380 2950 cv
170 2950 li
161.709 2950 155 2956.72 155 2965 cv
155 2973.28 161.709 2980 170 2980 cv
cp
f
875 3490 mo
620 3490 li
611.709 3490 605 3496.72 605 3505 cv
605 3513.28 611.709 3520 620 3520 cv
875 3520 li
883.291 3520 890 3513.28 890 3505 cv
890 3496.72 883.291 3490 875 3490 cv
cp
f
830 3580 mo
620 3580 li
611.709 3580 605 3586.72 605 3595 cv
605 3603.28 611.709 3610 620 3610 cv
830 3610 li
838.291 3610 845 3603.28 845 3595 cv
845 3586.72 838.291 3580 830 3580 cv
cp
f
215 3505 mo
206.724 3505 200 3498.27 200 3490 cv
200 3481.73 206.724 3475 215 3475 cv
223.276 3475 230 3481.73 230 3490 cv
230 3498.27 223.276 3505 215 3505 cv
cp
215 3445 mo
190.186 3445 170 3465.19 170 3490 cv
170 3514.81 190.186 3535 215 3535 cv
239.814 3535 260 3514.81 260 3490 cv
260 3465.19 239.814 3445 215 3445 cv
cp
f
380 3505 mo
371.724 3505 365 3498.27 365 3490 cv
365 3481.73 371.724 3475 380 3475 cv
388.276 3475 395 3481.73 395 3490 cv
395 3498.27 388.276 3505 380 3505 cv
cp
380 3445 mo
355.185 3445 335 3465.19 335 3490 cv
335 3514.81 355.185 3535 380 3535 cv
404.815 3535 425 3514.81 425 3490 cv
425 3465.19 404.815 3445 380 3445 cv
cp
f
740 3325 mo
740 3333.27 733.276 3340 725 3340 cv
716.724 3340 710 3333.27 710 3325 cv
710 3316.73 716.724 3310 725 3310 cv
733.276 3310 740 3316.73 740 3325 cv
cp
680 3325 mo
680 3349.81 700.185 3370 725 3370 cv
749.815 3370 770 3349.81 770 3325 cv
770 3300.19 749.815 3280 725 3280 cv
700.185 3280 680 3300.19 680 3325 cv
cp
f
515 3250 mo
515 3258.28 521.709 3265 530 3265 cv
538.291 3265 545 3258.28 545 3250 cv
545 3235 li
560 3235 li
568.291 3235 575 3228.28 575 3220 cv
575 3211.72 568.291 3205 560 3205 cv
545 3205 li
545 3190 li
545 3181.72 538.291 3175 530 3175 cv
521.709 3175 515 3181.72 515 3190 cv
515 3205 li
500 3205 li
491.709 3205 485 3211.72 485 3220 cv
485 3228.28 491.709 3235 500 3235 cv
515 3235 li
515 3250 li
cp
f
935 3325 mo
943.291 3325 950 3318.28 950 3310 cv
950 3295 li
965 3295 li
973.291 3295 980 3288.28 980 3280 cv
980 3271.72 973.291 3265 965 3265 cv
950 3265 li
950 3250 li
950 3241.72 943.291 3235 935 3235 cv
926.709 3235 920 3241.72 920 3250 cv
920 3265 li
905 3265 li
896.709 3265 890 3271.72 890 3280 cv
890 3288.28 896.709 3295 905 3295 cv
920 3295 li
920 3310 li
920 3318.28 926.709 3325 935 3325 cv
cp
f
1625 2860 mo
1625 2851.72 1618.28 2845 1610 2845 cv
1601.72 2845 1595 2851.72 1595 2860 cv
1595 2868.28 1601.72 2875 1610 2875 cv
1618.28 2875 1625 2868.28 1625 2860 cv
cp
f
1565 2860 mo
1565 2851.72 1558.28 2845 1550 2845 cv
1541.72 2845 1535 2851.72 1535 2860 cv
1535 2868.28 1541.72 2875 1550 2875 cv
1558.28 2875 1565 2868.28 1565 2860 cv
cp
f
1505 2860 mo
1505 2851.72 1498.28 2845 1490 2845 cv
1481.72 2845 1475 2851.72 1475 2860 cv
1475 2868.28 1481.72 2875 1490 2875 cv
1498.28 2875 1505 2868.28 1505 2860 cv
cp
f
1445 3655 mo
1445 2935 li
2285 2935 li
2285 3655 li
1445 3655 li
cp
1445 2815 mo
2285 2815 li
2285 2905 li
1445 2905 li
1445 2815 li
cp
2300 2785 mo
1430 2785 li
1421.71 2785 1415 2791.72 1415 2800 cv
1415 3670 li
1415 3678.28 1421.71 3685 1430 3685 cv
2300 3685 li
2308.29 3685 2315 3678.28 2315 3670 cv
2315 2800 li
2315 2791.72 2308.29 2785 2300 2785 cv
cp
f
1955 2845 mo
1775 2845 li
1766.71 2845 1760 2851.72 1760 2860 cv
1760 2868.28 1766.71 2875 1775 2875 cv
1955 2875 li
1963.29 2875 1970 2868.28 1970 2860 cv
1970 2851.72 1963.29 2845 1955 2845 cv
cp
f
2225 2845 mo
2150 2845 li
2141.71 2845 2135 2851.72 2135 2860 cv
2135 2868.28 2141.71 2875 2150 2875 cv
2225 2875 li
2233.29 2875 2240 2868.28 2240 2860 cv
2240 2851.72 2233.29 2845 2225 2845 cv
cp
f
1505 3010 mo
1850 3010 li
1858.29 3010 1865 3003.28 1865 2995 cv
1865 2986.72 1858.29 2980 1850 2980 cv
1505 2980 li
1496.71 2980 1490 2986.72 1490 2995 cv
1490 3003.28 1496.71 3010 1505 3010 cv
cp
f
2225 3580 mo
1775 3580 li
1766.71 3580 1760 3586.72 1760 3595 cv
1760 3603.28 1766.71 3610 1775 3610 cv
2225 3610 li
2233.29 3610 2240 3603.28 2240 3595 cv
2240 3586.72 2233.29 3580 2225 3580 cv
cp
f
1505 3070 mo
1730 3070 li
1738.29 3070 1745 3063.28 1745 3055 cv
1745 3046.72 1738.29 3040 1730 3040 cv
1505 3040 li
1496.71 3040 1490 3046.72 1490 3055 cv
1490 3063.28 1496.71 3070 1505 3070 cv
cp
f
1775 3520 mo
1766.71 3520 1760 3526.72 1760 3535 cv
1760 3543.28 1766.71 3550 1775 3550 cv
2030 3550 li
2038.29 3550 2045 3543.28 2045 3535 cv
2045 3526.72 2038.29 3520 2030 3520 cv
1775 3520 li
cp
f
3140 3010 mo
3140 3001.72 3133.28 2995 3125 2995 cv
3116.72 2995 3110 3001.72 3110 3010 cv
3110 3018.28 3116.72 3025 3125 3025 cv
3133.28 3025 3140 3018.28 3140 3010 cv
cp
f
2900 3115 mo
2900 3106.72 2893.28 3100 2885 3100 cv
2876.72 3100 2870 3106.72 2870 3115 cv
2870 3123.28 2876.72 3130 2885 3130 cv
2893.28 3130 2900 3123.28 2900 3115 cv
cp
f
2900 2950 mo
3515 2950 li
3515 3225.84 li
3356.44 3380.14 li
3252.1 3279.38 li
3222.87 3251.3 3177.1 3251.3 3147.88 3279.41 cv
3043.57 3380.14 li
2900 3240.44 li
2900 3175 li
2900 3166.72 2893.28 3160 2885 3160 cv
2876.72 3160 2870 3166.72 2870 3175 cv
2870 3211.25 li
2787.96 3131.41 li
2894.07 3050.91 li
2897.53 3047.79 2899.62 3043.6 2900 3038.95 cv
2900 2950 li
cp
3172.74 2839.42 mo
3188.79 2827.29 3211.21 2827.29 3227.23 2839.4 cv
3333.46 2920 li
3066.54 2920 li
3172.74 2839.42 li
cp
3612.04 3131.41 mo
3545 3196.65 li
3545 3080.55 li
3612.04 3131.41 li
cp
3378.03 3400.99 mo
3620 3165.53 li
3620 3634.65 li
3378.03 3400.99 li
cp
3168.7 3301.01 mo
3186.24 3284.16 3213.74 3284.15 3231.28 3300.98 cv
3597.86 3655 li
2802.14 3655 li
3168.7 3301.01 li
cp
3021.97 3400.99 mo
2780 3634.66 li
2780 3165.53 li
3021.97 3400.99 li
cp
3650 3130 mo
3649.9 3125.33 3647.58 3121 3644.07 3118.05 cv
3545 3042.9 li
3545 2935 li
3545 2926.72 3538.28 2920 3530 2920 cv
3383.1 2920 li
3245.34 2815.48 li
3218.64 2795.32 3181.35 2795.32 3154.63 2815.5 cv
3016.9 2920 li
2885 2920 li
2876.72 2920 2870 2926.72 2870 2935 cv
2870 3031.5 li
2755.93 3118.05 li
2752.42 3121 2750.11 3125.33 2750 3130 cv
2750 3670 li
2750.16 3678.03 2756.86 3684.99 2765 3685 cv
3635 3685 li
3643.14 3684.99 3649.84 3678.03 3650 3670 cv
3650 3130 li
cp
f
2975 3025 mo
3065 3025 li
3073.28 3025 3080 3018.28 3080 3010 cv
3080 3001.72 3073.28 2995 3065 2995 cv
2975 2995 li
2966.72 2995 2960 3001.72 2960 3010 cv
2960 3018.28 2966.72 3025 2975 3025 cv
cp
f
3395 3250 mo
3305 3250 li
3296.72 3250 3290 3256.71 3290 3265 cv
3290 3273.29 3296.72 3280 3305 3280 cv
3395 3280 li
3403.28 3280 3410 3273.29 3410 3265 cv
3410 3256.71 3403.28 3250 3395 3250 cv
cp
f
2975 3130 mo
3440 3130 li
3448.28 3130 3455 3123.28 3455 3115 cv
3455 3106.72 3448.28 3100 3440 3100 cv
2975 3100 li
2966.72 3100 2960 3106.72 2960 3115 cv
2960 3123.28 2966.72 3130 2975 3130 cv
cp
f
2975 3205 mo
3440 3205 li
3448.28 3205 3455 3198.28 3455 3190 cv
3455 3181.72 3448.28 3175 3440 3175 cv
2975 3175 li
2966.72 3175 2960 3181.72 2960 3190 cv
2960 3198.28 2966.72 3205 2975 3205 cv
cp
f
4925 2296.92 mo
4902.75 2245 li
4947.25 2245 li
4925 2296.92 li
cp
4895 1506.7 mo
4894.85 1470.79 4955.16 1470.8 4955 1506.7 cv
4955 1525 li
4895 1525 li
4895 1506.7 li
cp
4895 1615 mo
4955 1615 li
4955 2215 li
4895 2215 li
4895 1615 li
cp
4955 1585 mo
4895 1585 li
4895 1555 li
4955 1555 li
4955 1585 li
cp
4925 1450 mo
4891.72 1450 4864.81 1472.67 4865 1506.7 cv
4865 2230 li
4865.25 2231.98 4865.41 2234 4866.22 2235.91 cv
4911.22 2340.91 li
4915.85 2352.83 4934.15 2352.83 4938.78 2340.91 cv
4983.78 2235.91 li
4984.59 2234 4984.75 2231.98 4985 2230 cv
4985 1506.7 li
4985 1475.44 4956.27 1450 4925 1450 cv
cp
f
2960 1525 mo
2960 1516.72 2953.28 1510 2945 1510 cv
2936.72 1510 2930 1516.72 2930 1525 cv
2930 1533.28 2936.72 1540 2945 1540 cv
2953.28 1540 2960 1533.28 2960 1525 cv
cp
f
3230 1675 mo
3230 1666.72 3223.28 1660 3215 1660 cv
3206.72 1660 3200 1666.72 3200 1675 cv
3200 1683.28 3206.72 1690 3215 1690 cv
3223.28 1690 3230 1683.28 3230 1675 cv
cp
f
3425 2245 mo
3425 2236.72 3418.28 2230 3410 2230 cv
3401.72 2230 3395 2236.72 3395 2245 cv
3395 2253.28 3401.72 2260 3410 2260 cv
3418.28 2260 3425 2253.28 3425 2245 cv
cp
f
2900 1525 mo
2900 1516.72 2893.28 1510 2885 1510 cv
2876.72 1510 2870 1516.72 2870 1525 cv
2870 1533.28 2876.72 1540 2885 1540 cv
2893.28 1540 2900 1533.28 2900 1525 cv
cp
f
2840 1525 mo
2840 1516.72 2833.28 1510 2825 1510 cv
2816.72 1510 2810 1516.72 2810 1525 cv
2810 1533.28 2816.72 1540 2825 1540 cv
2833.28 1540 2840 1533.28 2840 1525 cv
cp
f
3365 2320 mo
3365 2246.95 li
3365 2238.66 3358.28 2231.95 3350 2231.95 cv
3320 2231.95 li
3320 2204.54 li
3347.48 2163.32 li
3349.12 2160.86 3350 2157.96 3350 2155 cv
3350 1990 li
3350 1987.72 3349.76 1985.46 3349.42 1983.23 cv
3401.38 1971.49 3440.43 1921.78 3440 1868.2 cv
3439.7 1830.67 3422.36 1797.24 3395 1775.57 cv
3395 1723.3 li
3404.14 1715.05 3410 1703.25 3410 1690 cv
3410 1670.47 3397.42 1653.98 3380 1647.76 cv
3380 1600 li
3620 1600 li
3620 2320 li
3365 2320 li
cp
3095 2320 mo
3095 2261.95 li
3335 2261.95 li
3335 2320 li
3095 2320 li
cp
3290 2200 mo
3290 2231.95 li
3140 2231.95 li
3140 2197.45 li
3140 2193.47 3138.42 2189.66 3135.61 2186.85 cv
3007.51 2058.74 li
2993.57 2044.77 3014.95 2023.67 3028.75 2037.5 cv
3084.39 2093.15 li
3093.24 2102.62 3110.44 2095.51 3110 2082.55 cv
3110 1870 li
3110 1861.73 3116.73 1855 3125 1855 cv
3133.27 1855 3140 1861.73 3140 1870 cv
3140 2035 li
3140 2043.28 3146.72 2050 3155 2050 cv
3163.28 2050 3170 2043.28 3170 2035 cv
3170 1945 li
3170.11 1925.38 3199.9 1925.4 3200 1945 cv
3200 2035 li
3200 2043.28 3206.72 2050 3215 2050 cv
3223.28 2050 3230 2043.28 3230 2035 cv
3230 1960 li
3230.11 1940.38 3259.9 1940.4 3260 1960 cv
3260 2035 li
3260 2043.28 3266.72 2050 3275 2050 cv
3283.28 2050 3290 2043.28 3290 2035 cv
3290 1990 li
3289.69 1970.9 3320.32 1970.71 3320 1990 cv
3320 2150.46 li
3292.52 2191.68 li
3290.88 2194.14 3290 2197.04 3290 2200 cv
cp
3333.64 1955.44 mo
3321.19 1945.22 3303.1 1942.33 3288.41 1948.12 cv
3281.95 1920.93 3247.26 1906.06 3222.92 1920.8 cv
3212.7 1903.88 3189.2 1895.31 3170 1902.57 cv
3170 1870 li
3170 1845.19 3149.81 1825 3125 1825 cv
3100.19 1825 3080 1845.19 3080 1870 cv
3080 1956.55 li
3030.75 1957.55 2989.94 1917.57 2990 1868.2 cv
2989.07 1820.86 3030.77 1779.06 3078.2 1780 cv
3321.8 1780 li
3337.5 1780 3352.22 1784.17 3365 1791.39 cv
3365 1825 li
3365 1833.27 3358.27 1840 3350 1840 cv
3341.73 1840 3335 1833.27 3335 1825 cv
3335 1816.72 3328.28 1810 3320 1810 cv
3311.72 1810 3305 1816.72 3305 1825 cv
3305 1849.81 3325.19 1870 3350 1870 cv
3374.81 1870 3395 1849.81 3395 1825 cv
3395 1819.06 li
3404.46 1833.11 3409.79 1850.02 3410 1868.2 cv
3410.5 1911.15 3375.9 1950.96 3333.64 1955.44 cv
cp
3365 1675 mo
3373.27 1675 3380 1681.73 3380 1690 cv
3380 1698.27 3373.27 1705 3365 1705 cv
3356.73 1705 3350 1698.27 3350 1690 cv
3350 1681.73 3356.73 1675 3365 1675 cv
cp
2780 1600 mo
3350 1600 li
3350 1647.76 li
3332.58 1653.98 3320 1670.47 3320 1690 cv
3320 1714.81 3340.19 1735 3365 1735 cv
3365 1758.29 li
3351.6 1753 3337.06 1750 3321.8 1750 cv
3078.2 1750 li
3014.54 1748.79 2958.8 1804.63 2960 1868.2 cv
2959.94 1934.1 3014.2 1987.56 3080 1986.55 cv
3080 2046.34 li
3049.96 2016.29 li
3006.95 1975.63 2945.52 2036.8 2986.29 2079.96 cv
3110 2203.66 li
3110 2231.95 li
3080 2231.95 li
3071.72 2231.95 3065 2238.66 3065 2246.95 cv
3065 2320 li
2780 2320 li
2780 1600 li
cp
2780 1480 mo
3350 1480 li
3350 1570 li
2780 1570 li
2780 1480 li
cp
3620 1570 mo
3380 1570 li
3380 1480 li
3620 1480 li
3620 1570 li
cp
3635 1450 mo
2765 1450 li
2756.72 1450 2750 1456.72 2750 1465 cv
2750 2335 li
2750 2343.28 2756.72 2350 2765 2350 cv
3635 2350 li
3643.28 2350 3650 2343.28 3650 2335 cv
3650 1465 li
3650 1456.72 3643.28 1450 3635 1450 cv
cp
f
3290 1510 mo
3110 1510 li
3101.72 1510 3095 1516.72 3095 1525 cv
3095 1533.28 3101.72 1540 3110 1540 cv
3290 1540 li
3298.28 1540 3305 1533.28 3305 1525 cv
3305 1516.72 3298.28 1510 3290 1510 cv
cp
f
3485 1540 mo
3560 1540 li
3568.28 1540 3575 1533.28 3575 1525 cv
3575 1516.72 3568.28 1510 3560 1510 cv
3485 1510 li
3476.72 1510 3470 1516.72 3470 1525 cv
3470 1533.28 3476.72 1540 3485 1540 cv
cp
f
3170 1675 mo
3170 1666.72 3163.28 1660 3155 1660 cv
2855 1660 li
2846.72 1660 2840 1666.72 2840 1675 cv
2840 1683.28 2846.72 1690 2855 1690 cv
3155 1690 li
3163.28 1690 3170 1683.28 3170 1675 cv
cp
f
3545 2230 mo
3470 2230 li
3461.72 2230 3455 2236.72 3455 2245 cv
3455 2253.28 3461.72 2260 3470 2260 cv
3545 2260 li
3553.28 2260 3560 2253.28 3560 2245 cv
3560 2236.72 3553.28 2230 3545 2230 cv
cp
f
1865.9 1729.37 mo
1850.29 1730.8 1836.17 1718.45 1836.28 1702.57 cv
1836.28 1687.8 1848.3 1675.78 1863.07 1675.78 cv
1877.85 1675.78 1889.87 1687.8 1889.87 1702.57 cv
1889.87 1710.85 1896.58 1717.57 1904.87 1717.57 cv
1913.15 1717.57 1919.87 1710.85 1919.87 1702.57 cv
1919.87 1676.98 1902.75 1655.55 1879.44 1648.47 cv
1879.44 1629.41 li
1879.44 1621.12 1872.73 1614.41 1864.44 1614.41 cv
1856.16 1614.41 1849.44 1621.12 1849.44 1629.41 cv
1849.44 1647.62 li
1824.72 1653.76 1806.28 1675.97 1806.28 1702.57 cv
1806.28 1733.89 1831.76 1759.37 1863.07 1759.37 cv
1883.97 1757.88 1902.37 1774.6 1902.25 1795.71 cv
1902.25 1815.75 1885.95 1832.05 1865.9 1832.05 cv
1845.86 1832.05 1829.56 1815.75 1829.56 1795.71 cv
1829.56 1787.43 1822.84 1780.71 1814.56 1780.71 cv
1806.27 1780.71 1799.56 1787.43 1799.56 1795.71 cv
1799.56 1827.9 1822.61 1854.76 1853.07 1860.76 cv
1853.07 1881.65 li
1853.07 1889.93 1859.79 1896.65 1868.07 1896.65 cv
1876.35 1896.65 1883.07 1889.93 1883.07 1881.65 cv
1883.07 1859.52 li
1911.3 1851.9 1932.25 1826.32 1932.25 1795.71 cv
1932.25 1759.13 1902.49 1729.37 1865.9 1729.37 cv
cp
f
1685 1480 mo
1733.29 1479.15 1775.98 1521.31 1775 1570 cv
1775 1619.63 1734.63 1660 1685 1660 cv
1636.51 1661.06 1594.53 1618.26 1595 1570 cv
1595.48 1520.37 1635.37 1480 1685 1480 cv
cp
1865 1510 mo
1997.33 1510 2105 1617.67 2105 1750 cv
2105 1882.33 1997.33 1990 1865 1990 cv
1732.67 1990 1625 1882.33 1625 1750 cv
1625 1725.95 1628.55 1702.3 1635.58 1679.45 cv
1644.76 1683.57 1654.47 1686.33 1664.37 1688.09 cv
1658.17 1708.14 1655 1728.88 1655 1750 cv
1655 1865.8 1749.2 1960 1865 1960 cv
1953.35 1960 2032.78 1904.17 2062.67 1821.07 cv
2065.47 1813.27 2061.42 1804.68 2053.63 1801.88 cv
2045.84 1799.08 2037.24 1803.12 2034.44 1810.92 cv
2008.83 1882.14 1940.73 1930 1865 1930 cv
1765.75 1930 1685 1849.25 1685 1750 cv
1685 1729.3 1688.52 1709.01 1695.46 1689.55 cv
1752.11 1685.24 1800.24 1637.1 1804.55 1580.46 cv
1824.01 1573.52 1844.3 1570 1865 1570 cv
1949.49 1570 2023.54 1629.88 2041.07 1712.38 cv
2042.78 1720.49 2050.69 1725.69 2058.86 1723.93 cv
2066.96 1722.21 2072.13 1714.25 2070.41 1706.14 cv
2049.96 1609.87 1963.57 1540 1865 1540 cv
1843.88 1540 1823.14 1543.17 1803.09 1549.37 cv
1801.33 1539.47 1798.57 1529.76 1794.45 1520.58 cv
1817.3 1513.55 1840.95 1510 1865 1510 cv
cp
1609.62 1663.19 mo
1600.1 1691.2 1595 1720.31 1595 1750 cv
1595 1898.88 1716.12 2020 1865 2020 cv
2013.88 2020 2135 1898.88 2135 1750 cv
2135 1601.12 2013.88 1480 1865 1480 cv
1835.31 1480 1806.21 1485.1 1778.19 1494.62 cv
1755.42 1466.56 1721.44 1450 1685 1450 cv
1618.83 1450 1565 1503.83 1565 1570 cv
1565 1606.44 1581.56 1640.42 1609.62 1663.19 cv
cp
f
695 565 mo
695 556.716 688.284 550 680 550 cv
671.716 550 665 556.716 665 565 cv
665 573.284 671.716 580 680 580 cv
688.284 580 695 573.284 695 565 cv
cp
f
2075 1765 mo
2075 1756.72 2068.28 1750 2060 1750 cv
2051.72 1750 2045 1756.72 2045 1765 cv
2045 1773.28 2051.72 1780 2060 1780 cv
2068.28 1780 2075 1773.28 2075 1765 cv
cp
f
4415 925 mo
4415 916.716 4408.28 910 4400 910 cv
4391.72 910 4385 916.716 4385 925 cv
4385 933.284 4391.72 940 4400 940 cv
4408.28 940 4415 933.284 4415 925 cv
cp
f
320 3415 mo
320 3406.72 313.284 3400 305 3400 cv
296.716 3400 290 3406.72 290 3415 cv
290 3423.28 296.716 3430 305 3430 cv
313.284 3430 320 3423.28 320 3415 cv
cp
f
4820.4 227.5 mo
4909.6 227.5 li
4918.11 227.5 4925 220.784 4925 212.5 cv
4925 204.216 4918.11 197.5 4909.6 197.5 cv
4820.4 197.5 li
4811.89 197.5 4805 204.216 4805 212.5 cv
4805 220.784 4811.89 227.5 4820.4 227.5 cv
cp
f
4908.97 250 mo
4851.03 250 li
4842.74 250 4836.03 256.716 4836.03 265 cv
4836.03 273.284 4842.74 280 4851.03 280 cv
4908.97 280 li
4917.26 280 4923.97 273.284 4923.97 265 cv
4923.97 256.716 4917.26 250 4908.97 250 cv
cp
f
4787.41 907.949 mo
4792.78 885.013 4818.9 871.614 4840.64 880.681 cv
4845.8 882.725 4851.6 881.772 4855.8 878.242 cv
4866.67 869.145 4880.44 864.143 4894.58 864.143 cv
4927.9 864.143 4955 891.25 4955 924.568 cv
4955 957.893 4927.9 985 4894.58 985 cv
4778 985 li
4759.81 985 4745 970.198 4745 951.997 cv
4745 935.085 4757.66 920.986 4774.44 919.192 cv
4780.7 918.533 4785.87 914.043 4787.41 907.949 cv
cp
4520 970 mo
4520 978.269 4513.28 985 4505 985 cv
4130 985 li
4121.72 985 4115 978.269 4115 970 cv
4115 160 li
4115 151.731 4121.72 145 4130 145 cv
4202.11 145 li
4202.11 183.079 li
4202.11 199.624 4215.58 213.079 4232.11 213.079 cv
4402.89 213.079 li
4419.42 213.079 4432.89 199.624 4432.89 183.079 cv
4432.89 145 li
4505 145 li
4513.28 145 4520 151.731 4520 160 cv
4520 970 li
cp
4402.9 183.079 mo
4232.11 183.079 li
4232.11 146.157 li
4402.89 146.157 li
4402.9 183.079 li
cp
4865 145 mo
4914.63 145 4955 185.371 4955 235 cv
4955 284.629 4914.63 325 4865 325 cv
4847.5 325 4830.52 319.954 4815.9 310.403 cv
4811.96 307.837 4807.04 307.262 4802.66 308.835 cv
4784.79 315.222 li
4791.16 297.351 li
4792.74 292.935 4792.15 288.027 4789.59 284.102 cv
4780.05 269.49 4775 252.512 4775 235 cv
4775 185.371 4815.37 145 4865 145 cv
cp
4865 490 mo
4914.63 490 4955 530.371 4955 580 cv
4955 601.26 4947.55 620.789 4935.18 636.206 cv
4925.58 606.43 4897.93 584.688 4865 584.688 cv
4832.07 584.688 4804.42 606.43 4794.82 636.206 cv
4782.45 620.789 4775 601.26 4775 580 cv
4775 530.371 4815.37 490 4865 490 cv
cp
4820.97 658.414 mo
4821.16 634.277 4840.81 614.688 4865 614.688 cv
4889.19 614.688 4908.84 634.277 4909.03 658.414 cv
4883.36 673.696 4846.64 673.696 4820.97 658.414 cv
cp
4745 580 mo
4745 646.167 4798.83 700 4865 700 cv
4931.17 700 4985 646.167 4985 580 cv
4985 513.833 4931.17 460 4865 460 cv
4809.21 460 4762.32 498.329 4748.95 550 cv
4625 550 li
4625 235 li
4745 235 li
4745 255.793 4750.35 276.03 4760.51 293.989 cv
4745.88 334.954 li
4741.35 346.376 4753.68 358.639 4765.04 354.128 cv
4806.01 339.495 li
4823.98 349.661 4844.21 355 4865 355 cv
4931.17 355 4985 301.167 4985 235 cv
4985 168.833 4931.17 115 4865 115 cv
4809.21 115 4762.32 153.329 4748.95 205 cv
4610 205 li
4601.71 205 4595 211.716 4595 220 cv
4595 550 li
4550 550 li
4550 160 li
4550 135.186 4529.81 115 4505 115 cv
4130 115 li
4105.19 115 4085 135.186 4085 160 cv
4085 970 li
4085 994.814 4105.19 1015 4130 1015 cv
4505 1015 li
4529.81 1015 4550 994.814 4550 970 cv
4550 580 li
4595 580 li
4595 910 li
4595 918.284 4601.71 925 4610 925 cv
4721.23 925 li
4717.33 933.221 4715 942.325 4715 951.997 cv
4715 986.736 4743.26 1015 4778 1015 cv
4894.58 1015 li
4944.44 1015 4985 974.431 4985 924.568 cv
4985 874.705 4944.44 834.143 4894.58 834.143 cv
4876.26 834.143 4858.38 839.746 4843.36 850.066 cv
4810.11 841.063 4773.81 859.648 4761.41 891.206 cv
4757.84 892.169 4754.44 893.467 4751.17 895 cv
4625 895 li
4625 580 li
4745 580 li
cp
f
4190 340 mo
4198.28 340 4205 346.731 4205 355 cv
4205 363.269 4198.28 370 4190 370 cv
4181.72 370 4175 363.269 4175 355 cv
4175 346.731 4181.72 340 4190 340 cv
cp
4190 400 mo
4214.81 400 4235 379.814 4235 355 cv
4235 350.56 4234.15 346.353 4232.95 342.298 cv
4259.27 329.815 4288.12 322.898 4317.5 322.898 cv
4370.18 322.898 4419.69 343.391 4456.89 380.605 cv
4470.82 394.419 4491.92 373.32 4478.11 359.395 cv
4435.23 316.511 4378.2 292.898 4317.5 292.898 cv
4281.71 292.898 4246.44 301.423 4214.73 317.471 cv
4207.63 312.773 4199.14 310 4190 310 cv
4165.19 310 4145 330.185 4145 355 cv
4145 379.814 4165.19 400 4190 400 cv
cp
f
4445 775 mo
4436.72 775 4430 768.269 4430 760 cv
4430 751.731 4436.72 745 4445 745 cv
4453.28 745 4460 751.731 4460 760 cv
4460 768.269 4453.28 775 4445 775 cv
cp
4445 715 mo
4420.19 715 4400 735.185 4400 760 cv
4400 764.44 4400.85 768.647 4402.05 772.702 cv
4375.73 785.186 4346.88 792.102 4317.5 792.102 cv
4264.82 792.102 4215.31 771.609 4178.11 734.394 cv
4164.55 720.428 4142.93 742.049 4156.89 755.605 cv
4199.77 798.489 4256.8 822.102 4317.5 822.102 cv
4353.29 822.102 4388.56 813.577 4420.27 797.529 cv
4427.38 802.227 4435.86 805 4445 805 cv
4469.81 805 4490 784.814 4490 760 cv
4490 735.185 4469.81 715 4445 715 cv
cp
f
4340 910 mo
4227.5 910 li
4219.21 910 4212.5 916.716 4212.5 925 cv
4212.5 933.284 4219.21 940 4227.5 940 cv
4340 940 li
4348.29 940 4355 933.284 4355 925 cv
4355 916.716 4348.29 910 4340 910 cv
cp
f
5983.13 3190 mo
5983.13 3181.72 5976.41 3175 5968.13 3175 cv
5959.84 3175 5953.13 3181.72 5953.13 3190 cv
5953.13 3198.28 5959.84 3205 5968.13 3205 cv
5976.41 3205 5983.13 3198.28 5983.13 3190 cv
cp
f
5450 3250 mo
5450 3241.72 5443.28 3235 5435 3235 cv
5426.72 3235 5420 3241.72 5420 3250 cv
5420 3258.28 5426.72 3265 5435 3265 cv
5443.28 3265 5450 3258.28 5450 3250 cv
cp
f
5450 3190 mo
5450 3181.72 5443.28 3175 5435 3175 cv
5426.72 3175 5420 3181.72 5420 3190 cv
5420 3198.28 5426.72 3205 5435 3205 cv
5443.28 3205 5450 3198.28 5450 3190 cv
cp
f
5570 3340 mo
5570 3331.72 5563.28 3325 5555 3325 cv
5546.72 3325 5540 3331.72 5540 3340 cv
5540 3348.28 5546.72 3355 5555 3355 cv
5563.28 3355 5570 3348.28 5570 3340 cv
cp
f
5570 3280 mo
5570 3271.72 5563.28 3265 5555 3265 cv
5546.72 3265 5540 3271.72 5540 3280 cv
5540 3288.28 5546.72 3295 5555 3295 cv
5563.28 3295 5570 3288.28 5570 3280 cv
cp
f
5690 3430 mo
5690 3421.72 5683.28 3415 5675 3415 cv
5666.72 3415 5660 3421.72 5660 3430 cv
5660 3438.28 5666.72 3445 5675 3445 cv
5683.28 3445 5690 3438.28 5690 3430 cv
cp
f
5690 3370 mo
5690 3361.72 5683.28 3355 5675 3355 cv
5666.72 3355 5660 3361.72 5660 3370 cv
5660 3378.28 5666.72 3385 5675 3385 cv
5683.28 3385 5690 3378.28 5690 3370 cv
cp
f
6290 3250 mo
6290 3241.72 6296.72 3235 6305 3235 cv
6313.28 3235 6320 3241.72 6320 3250 cv
6320 3258.28 6313.28 3265 6305 3265 cv
6296.72 3265 6290 3258.28 6290 3250 cv
cp
f
6290 3190 mo
6290 3181.72 6296.72 3175 6305 3175 cv
6313.28 3175 6320 3181.72 6320 3190 cv
6320 3198.28 6313.28 3205 6305 3205 cv
6296.72 3205 6290 3198.28 6290 3190 cv
cp
f
6170 3340 mo
6170 3331.72 6176.72 3325 6185 3325 cv
6193.28 3325 6200 3331.72 6200 3340 cv
6200 3348.28 6193.28 3355 6185 3355 cv
6176.72 3355 6170 3348.28 6170 3340 cv
cp
f
6170 3280 mo
6170 3271.72 6176.72 3265 6185 3265 cv
6193.28 3265 6200 3271.72 6200 3280 cv
6200 3288.28 6193.28 3295 6185 3295 cv
6176.72 3295 6170 3288.28 6170 3280 cv
cp
f
6050 3430 mo
6050 3421.72 6056.72 3415 6065 3415 cv
6073.28 3415 6080 3421.72 6080 3430 cv
6080 3438.28 6073.28 3445 6065 3445 cv
6056.72 3445 6050 3438.28 6050 3430 cv
cp
f
6050 3370 mo
6050 3361.72 6056.72 3355 6065 3355 cv
6073.28 3355 6080 3361.72 6080 3370 cv
6080 3378.28 6073.28 3385 6065 3385 cv
6056.72 3385 6050 3378.28 6050 3370 cv
cp
f
5675 3475.95 mo
5666.72 3475.95 5660 3482.66 5660 3490.95 cv
5660 3670 li
5660 3678.29 5666.72 3685 5675 3685 cv
5683.28 3685 5690 3678.29 5690 3670 cv
5690 3490.95 li
5690 3482.66 5683.28 3475.95 5675 3475.95 cv
cp
f
6305 3295.95 mo
6296.72 3295.95 6290 3302.66 6290 3310.95 cv
6290 3670 li
6290 3678.29 6296.72 3685 6305 3685 cv
6313.28 3685 6320 3678.29 6320 3670 cv
6320 3310.95 li
6320 3302.66 6313.28 3295.95 6305 3295.95 cv
cp
f
6154.25 3104.8 mo
5578.7 3104.8 li
5578.7 3042.7 li
6154.25 3042.7 li
6154.25 3104.8 li
cp
5916.88 3381.25 mo
5816.22 3381.25 li
5657.09 3134.8 li
6076.01 3134.8 li
5916.88 3381.25 li
cp
5910.05 3646.72 mo
5823.05 3607.23 li
5823.05 3411.25 li
5910.05 3411.25 li
5910.05 3646.72 li
cp
5662.4 2976.45 mo
5739.2 2976.45 li
5742.5 2962.97 5748.35 2950.32 5756.15 2939.04 cv
5701.85 2889.26 li
5743.4 2851.17 li
5797.7 2900.95 li
5810 2893.8 5823.8 2888.43 5838.5 2885.41 cv
5838.5 2815 li
5897.3 2815 li
5897.3 2885.41 li
5912 2888.43 5925.65 2893.8 5938.1 2900.95 cv
5992.4 2851.17 li
6033.95 2889.26 li
5979.65 2939.04 li
5987.45 2950.32 5993.3 2962.97 5996.6 2976.45 cv
6073.4 2976.45 li
6073.4 3010 li
5940.49 3010 li
5927.73 2926.45 5808.05 2926.49 5795.31 3010 cv
5662.4 3010 li
5662.4 2976.45 li
cp
5825.69 3010 mo
5836.05 2966.18 5899.76 2966.21 5910.12 3010 cv
5825.69 3010 li
cp
6184.25 3119.8 mo
6184.25 3027.7 li
6184.25 3019.42 6177.54 3012.7 6169.25 3012.7 cv
6103.13 3012.7 li
6103.21 3011.8 6103.4 2976.45 6103.4 2976.45 cv
6103.4 2959.88 6089.97 2946.45 6073.4 2946.45 cv
6018 2946.45 li
6017.81 2946 6017.61 2945.56 6017.41 2945.12 cv
6054.22 2911.37 li
6067.07 2900.1 6067.08 2878.42 6054.22 2867.15 cv
6054.22 2867.15 6012.67 2829.05 6012.67 2829.05 cv
6001.2 2818.54 5983.6 2818.54 5972.13 2829.05 cv
5932.87 2865.05 li
5931.02 2864.29 5929.17 2863.56 5927.3 2862.88 cv
5927.3 2815 li
5927.3 2798.43 5913.87 2785 5897.3 2785 cv
5838.5 2785 li
5821.93 2785 5808.5 2798.43 5808.5 2815 cv
5808.5 2862.85 li
5806.62 2863.54 5804.76 2864.26 5802.9 2865.02 cv
5763.67 2829.05 li
5752.2 2818.54 5734.6 2818.54 5723.13 2829.05 cv
5681.58 2867.15 li
5668.73 2878.42 5668.72 2900.1 5681.58 2911.37 cv
5681.58 2911.37 5718.39 2945.12 5718.39 2945.12 cv
5718.19 2945.56 5717.99 2946 5717.8 2946.45 cv
5662.4 2946.45 li
5645.83 2946.45 5632.4 2959.88 5632.4 2976.45 cv
5632.4 2976.45 5632.59 3011.8 5632.67 3012.7 cv
5563.7 3012.7 li
5555.42 3012.7 5548.7 3019.42 5548.7 3027.7 cv
5548.7 3119.8 li
5548.7 3128.08 5555.42 3134.8 5563.7 3134.8 cv
5621.38 3134.8 li
5793.05 3400.67 li
5793.05 3616.9 li
5793.05 3622.79 5796.49 3628.12 5801.86 3630.55 cv
5918.85 3683.65 li
5928.33 3688.33 5940.37 3680.56 5940.05 3670 cv
5940.05 3400.67 li
6111.72 3134.8 li
6169.25 3134.8 li
6177.54 3134.8 6184.25 3128.08 6184.25 3119.8 cv
cp
f
5886.97 3316.96 mo
5893.84 3321.42 5903.19 3319.52 5907.71 3312.49 cv
5952.48 3243.14 li
5956.97 3236.17 5954.97 3226.89 5948.01 3222.39 cv
5941.03 3217.92 5931.77 3219.91 5927.27 3226.86 cv
5882.5 3296.23 li
5878.01 3303.19 5880.01 3312.48 5886.97 3316.96 cv
cp
f
5435 3295.95 mo
5426.72 3295.95 5420 3302.66 5420 3310.95 cv
5420 3670 li
5420 3678.29 5426.72 3685 5435 3685 cv
5443.28 3685 5450 3678.29 5450 3670 cv
5450 3310.95 li
5450 3302.66 5443.28 3295.95 5435 3295.95 cv
cp
f
5555 3385.95 mo
5546.72 3385.95 5540 3392.66 5540 3400.95 cv
5540 3670 li
5540 3678.29 5546.72 3685 5555 3685 cv
5563.28 3685 5570 3678.29 5570 3670 cv
5570 3400.95 li
5570 3392.66 5563.28 3385.95 5555 3385.95 cv
cp
f
6185 3385.95 mo
6176.72 3385.95 6170 3392.66 6170 3400.95 cv
6170 3670 li
6170 3678.29 6176.72 3685 6185 3685 cv
6193.28 3685 6200 3678.29 6200 3670 cv
6200 3400.95 li
6200 3392.66 6193.28 3385.95 6185 3385.95 cv
cp
f
6065 3475.95 mo
6056.72 3475.95 6050 3482.66 6050 3490.95 cv
6050 3670 li
6050 3678.29 6056.72 3685 6065 3685 cv
6073.28 3685 6080 3678.29 6080 3670 cv
6080 3490.95 li
6080 3482.66 6073.28 3475.95 6065 3475.95 cv
cp
f
2240 610 mo
2240 601.716 2233.28 595 2225 595 cv
2216.72 595 2210 601.716 2210 610 cv
2210 618.284 2216.72 625 2225 625 cv
2233.28 625 2240 618.284 2240 610 cv
cp
f
3560 813.438 mo
3511.37 813.438 li
3509.25 822.763 3505.57 831.473 3500.62 839.327 cv
3535.03 873.73 li
3508.73 900.026 li
3474.33 865.623 li
3466.47 870.569 3457.76 874.251 3448.44 876.371 cv
3448.44 925 li
3416.56 925 li
3416.56 876.371 li
3407.24 874.251 3398.53 870.569 3390.67 865.623 cv
3356.27 900.026 li
3329.97 873.73 li
3364.38 839.327 li
3359.43 831.473 3355.75 822.763 3353.63 813.438 cv
3305 813.438 li
3305 781.563 li
3353.63 781.563 li
3355.75 772.237 3359.43 763.527 3364.38 755.673 cv
3329.97 721.269 li
3356.27 694.974 li
3390.67 729.377 li
3398.53 724.431 3407.24 720.749 3416.56 718.629 cv
3416.56 670 li
3448.44 670 li
3448.44 718.629 li
3457.76 720.749 3466.47 724.431 3474.33 729.377 cv
3508.73 694.974 li
3535.03 721.269 li
3500.62 755.673 li
3505.57 763.527 3509.25 772.237 3511.37 781.563 cv
3560 781.563 li
3560 813.438 li
cp
3560 751.563 mo
3547.16 751.563 li
3556.24 742.482 li
3567.96 730.767 3567.96 711.772 3556.24 700.056 cv
3529.94 673.761 li
3518.23 662.045 3499.23 662.044 3487.52 673.761 cv
3478.44 682.84 li
3478.44 670 li
3478.44 653.432 3465.01 640 3448.44 640 cv
3416.56 640 li
3399.99 640 3386.56 653.432 3386.56 670 cv
3386.56 682.84 li
3377.48 673.761 li
3365.77 662.045 3346.77 662.044 3335.06 673.761 cv
3308.76 700.056 li
3297.04 711.772 3297.04 730.767 3308.76 742.482 cv
3317.84 751.563 li
3305 751.563 li
3288.43 751.563 3275 764.994 3275 781.563 cv
3275 813.438 li
3275 830.006 3288.43 843.438 3305 843.438 cv
3317.84 843.438 li
3308.76 852.517 li
3297.04 864.233 3297.04 883.228 3308.76 894.943 cv
3335.06 921.239 li
3346.77 932.956 3365.77 932.955 3377.48 921.239 cv
3386.56 912.16 li
3386.56 925 li
3386.56 941.568 3399.99 955 3416.56 955 cv
3448.44 955 li
3465.01 955 3478.44 941.568 3478.44 925 cv
3478.44 912.16 li
3487.52 921.239 li
3499.23 932.956 3518.23 932.955 3529.94 921.239 cv
3556.24 894.943 li
3567.96 883.228 3567.96 864.233 3556.24 852.517 cv
3547.16 843.438 li
3560 843.438 li
3576.57 843.438 3590 830.006 3590 813.438 cv
3590 781.563 li
3590 764.994 3576.57 751.563 3560 751.563 cv
cp
f
3432.5 812.5 mo
3424.23 812.5 3417.5 805.769 3417.5 797.5 cv
3417.5 789.231 3424.23 782.5 3432.5 782.5 cv
3440.77 782.5 3447.5 789.231 3447.5 797.5 cv
3447.5 805.769 3440.77 812.5 3432.5 812.5 cv
cp
3432.5 752.5 mo
3407.69 752.5 3387.5 772.685 3387.5 797.5 cv
3387.5 822.314 3407.69 842.5 3432.5 842.5 cv
3457.31 842.5 3477.5 822.314 3477.5 797.5 cv
3477.5 772.685 3457.31 752.5 3432.5 752.5 cv
cp
f
4445 580.938 mo
4396.37 580.938 li
4394.25 590.263 4390.57 598.973 4385.62 606.827 cv
4420.03 641.23 li
4393.73 667.526 li
4359.33 633.123 li
4351.47 638.069 4342.76 641.751 4333.44 643.871 cv
4333.44 692.5 li
4301.56 692.5 li
4301.56 643.871 li
4292.24 641.751 4283.53 638.069 4275.67 633.123 cv
4241.27 667.526 li
4214.97 641.23 li
4249.38 606.827 li
4244.43 598.973 4240.75 590.263 4238.63 580.938 cv
4190 580.938 li
4190 549.063 li
4238.63 549.063 li
4240.75 539.737 4244.43 531.027 4249.38 523.173 cv
4214.97 488.77 li
4241.27 462.474 li
4275.67 496.877 li
4283.53 491.931 4292.24 488.249 4301.56 486.129 cv
4301.56 437.5 li
4333.44 437.5 li
4333.44 486.129 li
4342.76 488.249 4351.47 491.931 4359.33 496.877 cv
4393.73 462.474 li
4420.03 488.77 li
4385.62 523.173 li
4390.57 531.027 4394.25 539.737 4396.37 549.063 cv
4445 549.063 li
4445 580.938 li
cp
4445 519.063 mo
4432.16 519.063 li
4441.24 509.982 li
4452.96 498.267 4452.96 479.272 4441.24 467.556 cv
4414.94 441.261 li
4403.23 429.544 4384.23 429.545 4372.52 441.261 cv
4363.44 450.34 li
4363.44 437.5 li
4363.44 420.932 4350.01 407.5 4333.44 407.5 cv
4301.56 407.5 li
4284.99 407.5 4271.56 420.932 4271.56 437.5 cv
4271.56 450.34 li
4262.48 441.261 li
4250.77 429.544 4231.77 429.545 4220.06 441.261 cv
4193.76 467.556 li
4182.04 479.272 4182.04 498.267 4193.76 509.982 cv
4202.84 519.063 li
4190 519.063 li
4173.43 519.063 4160 532.494 4160 549.063 cv
4160 580.938 li
4160 597.506 4173.43 610.938 4190 610.938 cv
4202.84 610.938 li
4193.76 620.017 li
4182.04 631.733 4182.04 650.728 4193.76 662.443 cv
4220.06 688.739 li
4231.77 700.455 4250.77 700.455 4262.48 688.739 cv
4271.56 679.66 li
4271.56 692.5 li
4271.56 709.068 4284.99 722.5 4301.56 722.5 cv
4333.44 722.5 li
4350.01 722.5 4363.44 709.068 4363.44 692.5 cv
4363.44 679.66 li
4372.52 688.739 li
4384.23 700.455 4403.23 700.455 4414.94 688.739 cv
4441.24 662.443 li
4452.96 650.728 4452.96 631.733 4441.24 620.017 cv
4432.16 610.938 li
4445 610.938 li
4461.57 610.938 4475 597.506 4475 580.938 cv
4475 549.063 li
4475 532.494 4461.57 519.063 4445 519.063 cv
cp
f
4317.5 580 mo
4309.22 580 4302.5 573.269 4302.5 565 cv
4302.5 556.731 4309.22 550 4317.5 550 cv
4325.78 550 4332.5 556.731 4332.5 565 cv
4332.5 573.269 4325.78 580 4317.5 580 cv
cp
4317.5 520 mo
4292.69 520 4272.5 540.185 4272.5 565 cv
4272.5 589.814 4292.69 610 4317.5 610 cv
4342.31 610 4362.5 589.814 4362.5 565 cv
4362.5 540.185 4342.31 520 4317.5 520 cv
cp
f
6040.43 718.332 mo
5981.78 776.941 5900.37 858.35 5870 888.752 cv
5839.63 858.35 5758.22 776.941 5699.57 718.332 cv
5631.12 646.83 5736.71 550.569 5801.15 614.878 cv
5858.76 679.946 li
5864.48 686.377 5875.52 686.377 5881.24 679.946 cv
5938.85 614.878 li
6003.29 550.569 6108.88 646.83 6040.43 718.332 cv
cp
5917.33 594.004 mo
5870.01 647.383 li
5870 647.366 li
5869.99 647.383 li
5822.67 594.004 li
5724.71 503.413 5584.71 638.035 5678.03 739.214 cv
5746.85 808.003 5846.45 907.568 5859.35 920.569 cv
5864.96 926.428 5875.04 926.427 5880.65 920.569 cv
5893.55 907.568 5993.15 808.003 6061.97 739.214 cv
6155.29 638.035 6015.29 503.413 5917.33 594.004 cv
cp
f
755 1990 mo
746.75 1990 740 1983.25 740 1975 cv
740 1966.75 746.75 1960 755 1960 cv
763.25 1960 770 1966.75 770 1975 cv
770 1983.25 763.25 1990 755 1990 cv
cp
755 1930 mo
730.387 1929.95 710.011 1950.25 710 1975 cv
710.011 1999.75 730.387 2020.05 755 2020 cv
779.613 2020.05 799.989 1999.75 800 1975 cv
799.989 1950.25 779.613 1929.95 755 1930 cv
cp
f
882.5 1990.9 mo
833.9 1990.9 li
831.8 2000.2 828.05 2008.9 823.1 2016.85 cv
857.6 2051.2 li
831.2 2077.6 li
796.85 2043.1 li
788.857 2048.12 780.062 2051.78 770.9 2053.9 cv
770.9 2102.5 li
739.1 2102.5 li
739.1 2053.9 li
729.938 2051.78 721.144 2048.12 713.15 2043.1 cv
678.8 2077.6 li
652.4 2051.2 li
686.9 2016.85 li
681.95 2008.9 678.2 2000.2 676.1 1990.9 cv
627.5 1990.9 li
627.5 1959.1 li
676.1 1959.1 li
678.2 1949.8 681.95 1941.1 686.9 1933.15 cv
652.4 1898.8 li
678.8 1872.4 li
713.15 1906.9 li
721.143 1901.88 729.938 1898.22 739.1 1896.1 cv
739.1 1847.5 li
770.9 1847.5 li
770.9 1896.1 li
780.063 1898.22 788.856 1901.88 796.85 1906.9 cv
831.2 1872.4 li
857.6 1898.8 li
823.1 1933.15 li
828.05 1941.1 831.8 1949.8 833.9 1959.1 cv
882.5 1959.1 li
882.5 1990.9 li
cp
785 2155 mo
725 2155 li
725 2129.05 li
729.2 2131.3 734 2132.5 739.1 2132.5 cv
770.9 2132.5 li
776 2132.5 780.8 2131.3 785 2129.05 cv
785 2155 li
cp
755 2236.9 mo
732.8 2185 li
777.2 2185 li
755 2236.9 li
cp
725 1686.7 mo
724.87 1650.79 785.135 1650.8 785 1686.7 cv
785 1705 li
725 1705 li
725 1686.7 li
cp
725 1795 mo
785 1795 li
785 1820.95 li
780.8 1818.7 776 1817.5 770.9 1817.5 cv
739.1 1817.5 li
734 1817.5 729.2 1818.7 725 1820.95 cv
725 1795 li
cp
785 1765 mo
725 1765 li
725 1735 li
785 1735 li
785 1765 li
cp
882.5 1929.1 mo
869.6 1929.1 li
878.75 1919.95 li
890.45 1908.25 890.45 1889.2 878.75 1877.5 cv
852.5 1851.25 li
842.372 1841.14 826.768 1839.59 815 1847.2 cv
815 1686.7 li
813.606 1611.03 696.374 1611.07 695 1686.7 cv
695 1847.2 li
683.232 1839.59 667.628 1841.14 657.5 1851.25 cv
631.25 1877.5 li
619.55 1889.2 619.55 1908.25 631.25 1919.95 cv
640.4 1929.1 li
627.5 1929.1 li
611 1929.1 597.5 1942.45 597.5 1959.1 cv
597.5 1990.9 li
597.5 2007.55 611 2020.9 627.5 2020.9 cv
640.4 2020.9 li
631.25 2030.05 li
619.55 2041.75 619.55 2060.8 631.25 2072.5 cv
657.5 2098.75 li
667.628 2108.86 683.232 2110.41 695 2102.8 cv
695 2170 li
695 2171.95 695.45 2173.9 696.2 2175.85 cv
741.2 2280.85 li
745.91 2292.85 764.091 2292.85 768.8 2280.85 cv
813.8 2175.85 li
814.55 2173.9 815 2171.95 815 2170 cv
815 2102.8 li
826.768 2110.41 842.372 2108.86 852.5 2098.75 cv
878.75 2072.5 li
890.45 2060.8 890.45 2041.75 878.75 2030.05 cv
869.6 2020.9 li
882.5 2020.9 li
899 2020.9 912.5 2007.55 912.5 1990.9 cv
912.5 1959.1 li
912.5 1942.45 899 1929.1 882.5 1929.1 cv
cp
f
1844.02 3166.49 mo
1818.18 3177.71 1795.87 3186.58 1771.03 3193.41 cv
1763.03 3195.6 1758.34 3203.86 1760.54 3211.85 cv
1762.69 3219.9 1771.2 3224.51 1778.97 3222.34 cv
1805.49 3214.92 1828.96 3205.73 1855.98 3194.01 cv
1863.56 3190.71 1867.07 3181.88 1863.75 3174.28 cv
1860.47 3166.69 1851.66 3163.19 1844.02 3166.49 cv
cp
f
1655 3235 mo
1663.29 3235 1670 3228.28 1670 3220 cv
1670 3211.72 1663.29 3205 1655 3205 cv
1587.49 3205 li
1579.19 3205 1572.49 3211.72 1572.49 3220 cv
1572.49 3228.28 1579.19 3235 1587.49 3235 cv
1655 3235 li
cp
f
2045 3274.86 mo
2045 3195.14 li
2063.15 3202.19 2075 3217.69 2075 3235 cv
2075 3252.31 2063.15 3267.8 2045 3274.86 cv
cp
2015 3430 mo
2015 3438.27 2008.28 3445 2000 3445 cv
1991.72 3445 1985 3438.27 1985 3430 cv
1985 3040 li
1985 3031.73 1991.72 3025 2000 3025 cv
2008.28 3025 2015 3031.73 2015 3040 cv
2015 3430 li
cp
1730 3172.4 mo
1807.26 3156.61 1882.77 3122.26 1955 3070.09 cv
1955 3400.86 li
1891.38 3357.94 1820.44 3329.64 1730 3310.89 cv
1730 3172.4 li
cp
1662.5 3355 mo
1602.5 3355 li
1592.01 3355.16 1581.49 3349.07 1576.5 3340 cv
1688.66 3340 li
1685.31 3347.5 1671 3355 1662.5 3355 cv
cp
1520 3242.49 mo
1520 3205.27 1550.28 3175 1587.49 3175 cv
1700 3175 li
1700 3310 li
1587.49 3310 li
1550.28 3310 1520 3279.71 1520 3242.49 cv
cp
2045 3163.69 mo
2045 3040 li
2045 3015.19 2024.81 2995 2000 2995 cv
1977.97 2995 1959.67 3010.93 1955.82 3031.86 cv
1878.2 3091.81 1796.72 3129.94 1713.46 3145 cv
1587.49 3145 li
1533.73 3145 1490 3188.75 1490 3242.51 cv
1490 3280.17 1511.49 3312.84 1542.82 3329.07 cv
1544.38 3351.85 1558.7 3371.79 1580 3380.49 cv
1580 3537.91 li
1580 3569.39 1603.58 3595 1632.57 3595 cv
1661.47 3595 1685 3569.39 1685 3537.91 cv
1685 3520 li
1685 3511.72 1678.29 3505 1670 3505 cv
1661.71 3505 1655 3511.72 1655 3520 cv
1655 3537.91 li
1655 3552.85 1644.94 3565 1632.57 3565 cv
1620.12 3565 1610 3552.85 1610 3537.91 cv
1610 3385 li
1655 3385 li
1655 3400 li
1655 3408.28 1661.71 3415 1670 3415 cv
1678.29 3415 1685 3408.28 1685 3400 cv
1685 3380.4 li
1702.18 3374.06 1716.52 3357.73 1720.61 3339.73 cv
1817.09 3359.41 1890.32 3390.1 1955.84 3438.35 cv
1959.78 3459.18 1978.05 3475 2000 3475 cv
2024.81 3475 2045 3454.81 2045 3430 cv
2045 3306.31 li
2080.1 3297.67 2105.19 3268.51 2105 3235 cv
2105 3202.6 2078.97 3173.39 2045 3163.69 cv
cp
f
1891.89 3141.89 mo
1886.04 3147.75 1886.04 3157.25 1891.89 3163.11 cv
1897.75 3168.96 1907.25 3168.96 1913.11 3163.11 cv
1918.96 3157.25 1918.96 3147.75 1913.11 3141.89 cv
1907.25 3136.03 1897.75 3136.03 1891.89 3141.89 cv
cp
f
2225 3220 mo
2150 3220 li
2141.71 3220 2135 3226.72 2135 3235 cv
2135 3243.28 2141.71 3250 2150 3250 cv
2225 3250 li
2233.29 3250 2240 3243.28 2240 3235 cv
2240 3226.72 2233.29 3220 2225 3220 cv
cp
f
2130.61 3419.39 mo
2124.75 3413.53 2115.25 3413.53 2109.39 3419.39 cv
2103.54 3425.25 2103.54 3434.75 2109.39 3440.61 cv
2169.39 3500.61 li
2175.25 3506.46 2184.75 3506.46 2190.61 3500.61 cv
2196.46 3494.75 2196.46 3485.25 2190.61 3479.39 cv
2130.61 3419.39 li
cp
f
2106.58 3333.29 mo
2102.88 3340.7 2105.88 3349.71 2113.29 3353.42 cv
2173.29 3383.42 li
2180.55 3387.08 2189.69 3384.19 2193.42 3376.71 cv
2197.12 3369.3 2194.12 3360.29 2186.71 3356.58 cv
2126.71 3326.58 li
2119.3 3322.89 2110.3 3325.89 2106.58 3333.29 cv
cp
f
2190.61 2969.39 mo
2184.75 2963.53 2175.25 2963.53 2169.39 2969.39 cv
2109.39 3029.39 li
2103.54 3035.25 2103.54 3044.75 2109.39 3050.61 cv
2115.25 3056.46 2124.75 3056.46 2130.61 3050.61 cv
2190.61 2990.61 li
2196.46 2984.75 2196.46 2975.25 2190.61 2969.39 cv
cp
f
2193.42 3093.29 mo
2189.7 3085.87 2180.7 3082.87 2173.29 3086.58 cv
2113.29 3116.58 li
2105.88 3120.29 2102.88 3129.3 2106.58 3136.71 cv
2110.31 3144.19 2119.45 3147.08 2126.71 3143.42 cv
2186.71 3113.42 li
2194.12 3109.71 2197.12 3100.7 2193.42 3093.29 cv
cp
f
1670 3445 mo
1661.72 3445 1655 3451.72 1655 3460 cv
1655 3468.28 1661.72 3475 1670 3475 cv
1678.28 3475 1685 3468.28 1685 3460 cv
1685 3451.72 1678.28 3445 1670 3445 cv
cp
f
4625 2170 mo
4625 2178.27 4618.27 2185 4610 2185 cv
4601.73 2185 4595 2178.27 4595 2170 cv
4595 1780 li
4595 1771.73 4601.73 1765 4610 1765 cv
4618.27 1765 4625 1771.73 4625 1780 cv
4625 2170 li
cp
4655 1935.14 mo
4673.14 1942.19 4685 1957.69 4685 1975 cv
4685 1992.31 4673.14 2007.81 4655 2014.86 cv
4655 1935.14 li
cp
4805 2320 mo
4295 2320 li
4295 2290 li
4760 2290 li
4768.28 2290 4775 2283.28 4775 2275 cv
4775 2050 li
4775 2041.72 4768.28 2035 4760 2035 cv
4751.72 2035 4745 2041.72 4745 2050 cv
4745 2260 li
4295 2260 li
4295 2117.93 li
4309.39 2109.79 4319.79 2096.12 4323.6 2080.01 cv
4397.25 2094.41 4483.2 2117.57 4565.84 2178.27 cv
4569.74 2199.13 4588.02 2215 4610 2215 cv
4634.81 2215 4655 2194.81 4655 2170 cv
4655 2046.31 li
4690.1 2037.68 4715.19 2008.52 4715 1975 cv
4715.19 1941.48 4690.1 1912.32 4655 1903.69 cv
4655 1780 li
4655 1755.19 4634.81 1735 4610 1735 cv
4587.97 1735 4569.67 1750.93 4565.82 1771.86 cv
4488.21 1831.82 4406.72 1869.94 4323.46 1885 cv
4265 1885 li
4265 1630 li
4355 1630 li
4355 1654.81 4375.19 1675 4400 1675 cv
4625 1675 li
4649.81 1675 4670 1654.81 4670 1630 cv
4745 1630 li
4745 1930 li
4745 1938.28 4751.72 1945 4760 1945 cv
4768.28 1945 4775 1938.28 4775 1930 cv
4775 1615 li
4775 1606.72 4768.28 1600 4760 1600 cv
4670 1600 li
4670 1570 li
4805 1570 li
4805 2320 li
cp
4205 2125 mo
4265 2125 li
4265 2320 li
4205 2320 li
4205 2125 li
cp
4291.55 2080 mo
4287.33 2089.19 4277.43 2094.95 4267.25 2095 cv
4202.75 2095 li
4192.41 2095.12 4182.53 2088.92 4178.06 2080 cv
4291.55 2080 li
cp
4565 2140.93 mo
4487.57 2089.11 4408.99 2066.78 4340 2052.7 cv
4340 1912.4 li
4417.25 1896.61 4492.77 1862.26 4565 1810.09 cv
4565 2140.93 li
cp
4115 1984.9 mo
4113.76 1946.8 4145.42 1915 4187.3 1915 cv
4310 1915 li
4310 2050 li
4187.3 2050 li
4147.43 2050 4116.16 2020.78 4115 1984.9 cv
cp
4205 1570 mo
4355 1570 li
4355 1600 li
4250 1600 li
4241.72 1600 4235 1606.72 4235 1615 cv
4235 1885 li
4205 1885 li
4205 1570 li
cp
4385 1525 mo
4385 1516.73 4391.73 1510 4400 1510 cv
4475.75 1510 li
4482.89 1510 4489.03 1504.97 4490.45 1497.97 cv
4492.56 1487.56 4501.83 1480 4512.5 1480 cv
4523.18 1480 4532.45 1487.56 4534.55 1497.97 cv
4535.96 1504.97 4542.11 1510 4549.25 1510 cv
4625 1510 li
4633.27 1510 4640 1516.73 4640 1525 cv
4640 1630 li
4640 1638.27 4633.27 1645 4625 1645 cv
4400 1645 li
4391.73 1645 4385 1638.27 4385 1630 cv
4385 1525 li
cp
4820 1540 mo
4670 1540 li
4670 1525 li
4670 1500.19 4649.81 1480 4625 1480 cv
4559.95 1480 li
4551.42 1462.07 4533.07 1450 4512.5 1450 cv
4491.93 1450 4473.59 1462.07 4465.05 1480 cv
4400 1480 li
4375.19 1480 4355 1500.19 4355 1525 cv
4355 1540 li
4190 1540 li
4181.72 1540 4175 1546.72 4175 1555 cv
4175 1885.76 li
4122.52 1891.56 4083.81 1934.4 4085 1984.9 cv
4085.91 2023.42 4109.82 2056.61 4145.34 2071.54 cv
4146.8 2091.34 4158.03 2108.62 4175 2117.83 cv
4175 2335 li
4175 2343.28 4181.72 2350 4190 2350 cv
4820 2350 li
4828.28 2350 4835 2343.28 4835 2335 cv
4835 1555 li
4835 1546.72 4828.28 1540 4820 1540 cv
cp
f
4430 1585 mo
4595 1585 li
4603.28 1585 4610 1578.28 4610 1570 cv
4610 1561.72 4603.28 1555 4595 1555 cv
4430 1555 li
4421.72 1555 4415 1561.72 4415 1570 cv
4415 1578.28 4421.72 1585 4430 1585 cv
cp
f
4280 1960 mo
4280 1951.72 4273.28 1945 4265 1945 cv
4175 1945 li
4166.72 1945 4160 1951.72 4160 1960 cv
4160 1968.28 4166.72 1975 4175 1975 cv
4265 1975 li
4273.28 1975 4280 1968.28 4280 1960 cv
cp
f
4760 1975 mo
4751.72 1975 4745 1981.72 4745 1990 cv
4745 1998.28 4751.72 2005 4760 2005 cv
4768.28 2005 4775 1998.28 4775 1990 cv
4775 1981.72 4768.28 1975 4760 1975 cv
cp
f
4535 1705 mo
4325 1705 li
4316.72 1705 4310 1711.72 4310 1720 cv
4310 1728.28 4316.72 1735 4325 1735 cv
4535 1735 li
4543.28 1735 4550 1728.28 4550 1720 cv
4550 1711.72 4543.28 1705 4535 1705 cv
cp
f
4460 1795 mo
4468.28 1795 4475 1788.28 4475 1780 cv
4475 1771.72 4468.28 1765 4460 1765 cv
4325 1765 li
4316.72 1765 4310 1771.72 4310 1780 cv
4310 1788.28 4316.72 1795 4325 1795 cv
4460 1795 li
cp
f
4460 2185 mo
4340 2185 li
4331.72 2185 4325 2191.72 4325 2200 cv
4325 2208.28 4331.72 2215 4340 2215 cv
4460 2215 li
4468.28 2215 4475 2208.28 4475 2200 cv
4475 2191.72 4468.28 2185 4460 2185 cv
cp
f
4325 2140 mo
4325 2148.28 4331.72 2155 4340 2155 cv
4370 2155 li
4378.28 2155 4385 2148.28 4385 2140 cv
4385 2131.72 4378.28 2125 4370 2125 cv
4340 2125 li
4331.72 2125 4325 2131.72 4325 2140 cv
cp
f
2142.5 2320 mo
1866.95 2320 li
1851.86 2320 1837.11 2314.63 1825.4 2304.87 cv
1746.83 2239.5 li
1739.52 2233.38 1730.18 2230 1720.55 2230 cv
1677.5 2230 li
1677.5 2070.7 li
1743.3 2070.74 1820.69 2071 1820.75 2071 cv
1826.94 2070.84 1832.5 2074.02 1836.93 2078.07 cv
1915.77 2156.92 li
1935.18 2177.03 1906.29 2205.94 1886.25 2186.8 cv
1820.42 2120.98 li
1814.57 2115.12 1805.07 2115.12 1799.21 2120.98 cv
1793.35 2126.84 1793.35 2136.33 1799.21 2142.19 cv
1865.22 2208.2 li
1883.38 2225.68 1906.22 2227.49 1925.98 2215.78 cv
1932.28 2223.1 1941.67 2233.66 1955.85 2249.61 cv
1969.92 2265.74 1990.44 2275 2012.15 2275 cv
2142.5 2275 li
2160.49 2275 2166.88 2287.12 2166.88 2297.5 cv
2166.88 2307.88 2160.49 2320 2142.5 2320 cv
cp
1647.5 2260 mo
1572.5 2260 li
1572.5 2035 li
1647.5 2035 li
1647.5 2260 li
cp
1445 2230 mo
1445 2065 li
1542.5 2065 li
1542.5 2230 li
1445 2230 li
cp
2052.12 2124.99 mo
2068.72 2125.42 2074.6 2137.41 2074.6 2147.56 cv
2074.59 2157.65 2068.72 2169.57 2052.2 2170 cv
1952.08 2170 li
1951.78 2158.48 1947.48 2146.57 1937.17 2135.89 cv
1926.27 2125 li
2052.12 2124.99 li
cp
2134.6 2222.57 mo
2134.59 2232.65 2128.72 2244.57 2112.2 2245 cv
2012.15 2245 li
1999.11 2245 1986.83 2239.49 1978.36 2229.78 cv
1969.17 2219.44 1959.48 2208.43 1952.11 2200 cv
2112.13 2199.99 li
2128.72 2200.41 2134.6 2212.41 2134.6 2222.57 cv
cp
2158.53 2247.24 mo
2162.43 2239.56 2164.59 2231.07 2164.6 2222.58 cv
2164.61 2197.1 2146.85 2170.86 2112.5 2170 cv
2099.58 2170 li
2114.12 2137.48 2096.08 2096.49 2052.5 2095 cv
1896.27 2095 li
1858.14 2056.86 li
1848.11 2047.24 1834.87 2040.82 1820.8 2041 cv
1820.8 2041 1743.35 2040.74 1677.5 2040.7 cv
1677.5 2020 li
1677.5 2011.72 1670.78 2005 1662.5 2005 cv
1557.5 2005 li
1549.22 2005 1542.5 2011.72 1542.5 2020 cv
1542.5 2035 li
1430 2035 li
1421.72 2035 1415 2041.72 1415 2050 cv
1415 2245 li
1415 2253.28 1421.72 2260 1430 2260 cv
1542.5 2260 li
1542.5 2275 li
1542.5 2283.28 1549.22 2290 1557.5 2290 cv
1662.5 2290 li
1670.78 2290 1677.5 2283.28 1677.5 2275 cv
1677.5 2260 li
1720.55 2260 li
1723.19 2260 1725.62 2260.86 1727.6 2262.53 cv
1806.2 2327.92 li
1823.28 2342.16 1844.85 2350 1866.95 2350 cv
2142.5 2350 li
2178.2 2350 2196.88 2323.59 2196.88 2297.5 cv
2196.88 2275.7 2183.65 2253.88 2158.53 2247.24 cv
cp
f
4667.06 3087.09 mo
4712.13 3087.09 li
4726.23 3034.46 li
4681.15 3034.46 li
4667.06 3087.09 li
cp
4723.64 3117.09 mo
4647.51 3117.09 li
4637.94 3117.34 4630.3 3107.39 4633.02 3098.21 cv
4655.16 3015.58 li
4656.92 3009.03 4662.86 3004.46 4669.65 3004.46 cv
4745.78 3004.46 li
4755.34 3004.22 4762.99 3014.16 4760.26 3023.34 cv
4760.26 3023.34 4738.12 3105.98 4738.12 3105.98 cv
4736.36 3112.53 4730.42 3117.09 4723.64 3117.09 cv
cp
4529.72 3117.09 mo
4518.69 3117.16 4518.65 3133.94 4529.72 3134.01 cv
4529.72 3134.01 4586.37 3134.01 4586.37 3134.01 cv
4595.94 3133.76 4603.58 3143.71 4600.86 3152.89 cv
4600.86 3152.89 4586.55 3206.3 4586.55 3206.3 cv
4585.28 3210.67 4588.12 3215.57 4592.53 3216.65 cv
4596.92 3217.88 4601.79 3215.1 4602.89 3210.68 cv
4620.45 3145.12 li
4622.21 3138.57 4628.15 3134.01 4634.94 3134.01 cv
4711.07 3134.01 li
4720.63 3133.76 4728.27 3143.71 4725.55 3152.89 cv
4725.55 3152.89 4711.68 3204.64 4711.68 3204.64 cv
4710.48 3209.14 4713.16 3213.79 4717.67 3215 cv
4722.04 3216.26 4726.93 3213.43 4728.02 3209.03 cv
4745.15 3145.12 li
4746.9 3138.57 4752.84 3134.01 4759.63 3134.01 cv
4846.39 3134.01 li
4857.43 3133.93 4857.47 3117.17 4846.39 3117.09 cv
4846.39 3117.09 4772.2 3117.09 4772.2 3117.09 cv
4762.64 3117.34 4754.99 3107.39 4757.71 3098.21 cv
4757.71 3098.21 4779.86 3015.58 4779.86 3015.58 cv
4781.61 3009.03 4787.55 3004.46 4794.34 3004.46 cv
4858.12 3004.46 li
4869.13 3004.46 4869.2 2987.58 4858.11 2987.55 cv
4858.12 2987.55 4806.91 2987.55 4806.91 2987.55 cv
4797.34 2987.8 4789.71 2977.85 4792.42 2968.67 cv
4809.99 2903.14 li
4811.19 2898.64 4808.51 2893.99 4804 2892.78 cv
4799.62 2891.51 4794.75 2894.35 4793.65 2898.75 cv
4772.83 2976.43 li
4771.07 2982.99 4765.13 2987.55 4758.34 2987.55 cv
4682.22 2987.55 li
4672.66 2987.8 4665.01 2977.85 4667.74 2968.67 cv
4667.74 2968.67 4684.85 2904.79 4684.85 2904.79 cv
4686.12 2900.43 4683.27 2895.53 4678.87 2894.44 cv
4674.39 2893.22 4669.71 2895.91 4668.51 2900.41 cv
4648.14 2976.43 li
4646.38 2982.99 4640.44 2987.55 4633.65 2987.55 cv
4541.45 2987.55 li
4536.79 2987.55 4532.99 2991.34 4532.99 2996 cv
4532.99 3000.67 4536.79 3004.46 4541.45 3004.46 cv
4621.08 3004.46 li
4625.75 3004.46 4630.14 3006.63 4632.98 3010.33 cv
4635.82 3014.03 4636.78 3018.84 4635.57 3023.34 cv
4613.43 3105.98 li
4611.67 3112.53 4605.73 3117.09 4598.94 3117.09 cv
4529.72 3117.09 li
cp
4594.71 3246.95 mo
4570.24 3247.6 4550.55 3222.04 4557.57 3198.53 cv
4557.57 3198.53 4566.82 3164.01 4566.82 3164.01 cv
4529.72 3164.01 li
4479.01 3162.68 4479.03 3088.42 4529.72 3087.09 cv
4529.72 3087.09 4587.43 3087.09 4587.43 3087.09 cv
4601.53 3034.46 li
4541.45 3034.46 li
4490.75 3033.13 4490.74 2958.88 4541.45 2957.55 cv
4541.45 2957.55 4622.14 2957.55 4622.14 2957.55 cv
4639.53 2892.65 li
4645.02 2872.17 4666.15 2859.98 4686.63 2865.46 cv
4706.71 2870.4 4719.58 2892.71 4713.82 2912.56 cv
4701.77 2957.55 li
4746.84 2957.55 li
4764.67 2891 li
4769.59 2870.92 4791.93 2858.04 4811.77 2863.81 cv
4832.25 2869.29 4844.44 2890.42 4838.96 2910.9 cv
4826.46 2957.55 li
4858.12 2957.55 li
4908.83 2958.88 4908.81 3033.14 4858.11 3034.46 cv
4858.12 3034.46 4805.85 3034.46 4805.85 3034.46 cv
4791.75 3087.09 li
4846.39 3087.09 li
4897.1 3088.43 4897.1 3162.68 4846.39 3164.01 cv
4846.39 3164.01 4771.14 3164.01 4771.14 3164.01 cv
4757 3216.78 li
4752.09 3236.86 4729.71 3249.73 4709.9 3243.97 cv
4689.42 3238.49 4677.23 3217.36 4682.71 3196.88 cv
4691.52 3164.01 li
4646.45 3164.01 li
4631.86 3218.44 li
4627.26 3235.6 4611.68 3246.95 4594.71 3246.95 cv
cp
f
1873.84 492.394 mo
1879.79 486.444 1879.79 476.798 1873.84 470.849 cv
1867.89 464.899 1858.25 464.899 1852.3 470.849 cv
1846.35 476.798 1846.35 486.444 1852.3 492.394 cv
1858.25 498.344 1867.89 498.344 1873.84 492.394 cv
cp
f
1842.9 599.834 mo
1720.91 601.181 1614.14 494.382 1615.49 372.432 cv
1616.88 247.173 1717.67 146.388 1842.92 145 cv
1964.91 143.648 2071.67 250.418 2070.33 372.417 cv
2068.94 497.807 1968.3 598.449 1842.9 599.834 cv
cp
1617.55 619.785 mo
1595.68 597.973 li
1650.59 542.954 li
1657.22 550.857 1664.58 558.233 1672.49 564.849 cv
1617.55 619.785 li
cp
1505.37 753.115 mo
1492.62 765.771 1471.98 765.771 1459.36 753.144 cv
1457.85 751.643 li
1445.14 738.921 1445.14 718.23 1457.85 705.515 cv
1559.37 604.133 li
1606.87 651.623 li
1505.37 753.115 li
cp
1842.9 115 mo
1701.13 116.569 1585.57 230.627 1585.49 372.417 cv
1585.46 425.706 1601.81 476.453 1631.79 519.316 cv
1574.29 576.926 li
1565.37 569.454 1550.63 570.062 1543.01 578.088 cv
1436.64 684.297 li
1412.22 708.708 1412.22 748.442 1436.64 772.854 cv
1438.14 774.355 li
1462.47 798.672 1502.11 798.62 1526.51 774.399 cv
1633.14 667.766 li
1639.82 660.78 1641.25 650.622 1637.58 642.178 cv
1696.12 583.639 li
1738.9 613.555 1789.5 629.834 1842.62 629.834 cv
1842.7 629.834 1842.84 629.834 1842.91 629.834 cv
1984.85 629.834 2098.76 514.352 2100.33 372.432 cv
2101.85 234.288 1981.01 113.471 1842.9 115 cv
cp
f
1905.61 456.316 mo
1911.46 462.175 1920.96 462.175 1926.82 456.316 cv
1949.19 433.948 1961.51 404.168 1961.51 372.461 cv
1961.51 340.747 1949.19 310.967 1926.82 288.599 cv
1920.96 282.739 1911.46 282.739 1905.61 288.599 cv
1899.75 294.458 1899.75 303.957 1905.61 309.81 cv
1922.31 326.516 1931.51 348.76 1931.51 372.461 cv
1931.51 396.155 1922.31 418.398 1905.61 435.105 cv
1899.75 440.957 1899.75 450.457 1905.61 456.316 cv
cp
f
2180 325 mo
2171.73 325 2165 318.269 2165 310 cv
2165 301.731 2171.73 295 2180 295 cv
2188.27 295 2195 301.731 2195 310 cv
2195 318.269 2188.27 325 2180 325 cv
cp
1460 880 mo
1451.73 880 1445 873.269 1445 865 cv
1445 856.731 1451.73 850 1460 850 cv
1468.27 850 1475 856.731 1475 865 cv
1475 873.269 1468.27 880 1460 880 cv
cp
2225 310 mo
2225 285.185 2204.81 265 2180 265 cv
2155.19 265 2135 285.185 2135 310 cv
2135 328.155 2145.86 343.74 2161.38 350.847 cv
2092.57 854.264 1625.12 859.783 1502.97 852.359 cv
1497.47 833.723 1480.4 820 1460 820 cv
1435.19 820 1415 840.185 1415 865 cv
1415 889.814 1435.19 910 1460 910 cv
1478.67 910 1494.71 898.562 1501.51 882.33 cv
1514.24 883.095 1530.41 883.728 1549.47 883.728 cv
1722.98 883.728 2127.08 831.208 2191.37 353.366 cv
2210.66 348.294 2225 330.864 2225 310 cv
cp
f
1842.92 214.741 mo
1927.49 213.811 2001.52 287.832 2000.59 372.417 cv
1999.63 459.358 1929.86 530.093 1842.9 530.093 cv
1758.35 531.962 1684.29 456.974 1685.23 372.432 cv
1686.2 285.579 1756.08 215.697 1842.92 214.741 cv
cp
1842.71 560.093 mo
1946.25 559.071 2029.44 475.966 2030.59 372.432 cv
2031.71 271.706 1943.62 183.625 1842.9 184.741 cv
1739.54 185.887 1656.38 269.042 1655.23 372.417 cv
1654.12 473.035 1742.09 561.086 1842.71 560.093 cv
cp
f
5885 820 mo
5885 811.716 5878.28 805 5870 805 cv
5861.72 805 5855 811.716 5855 820 cv
5855 828.284 5861.72 835 5870 835 cv
5878.28 835 5885 828.284 5885 820 cv
cp
f
6018.78 676.335 mo
6012.92 670.476 6003.43 670.476 5997.57 676.335 cv
5904.13 769.756 li
5898.27 775.608 5898.27 785.107 5904.13 790.967 cv
5909.99 796.826 5919.48 796.826 5925.34 790.967 cv
6018.78 697.546 li
6024.64 691.694 6024.64 682.195 6018.78 676.335 cv
cp
f
5950 1742.2 mo
6000 1742.2 li
6000 1885 li
5950 1885 li
5950 1742.2 li
cp
6030 1675 mo
6080 1675 li
6080 1885 li
6030 1885 li
6030 1675 li
cp
5870 1809.4 mo
5920 1809.4 li
5920 1885 li
5870 1885 li
5870 1809.4 li
cp
6000 1660 mo
6000 1712.2 li
5935 1712.2 li
5926.7 1712.2 5920 1718.92 5920 1727.2 cv
5920 1779.4 li
5855 1779.4 li
5846.71 1779.4 5840 1786.12 5840 1794.4 cv
5840 1900 li
5840 1908.28 5846.71 1915 5855 1915 cv
6095 1915 li
6103.29 1915 6110 1908.28 6110 1900 cv
6110 1660 li
6110 1651.72 6103.29 1645 6095 1645 cv
6015 1645 li
6006.71 1645 6000 1651.72 6000 1660 cv
cp
f
6275.91 2288.43 mo
6266.28 2264.15 6242.67 2246.87 6215 2246.87 cv
6187.33 2246.87 6163.72 2264.15 6154.09 2288.43 cv
6145.3 2276.15 6140 2261.22 6140 2245 cv
6140 2203.65 6173.65 2170 6215 2170 cv
6256.35 2170 6290 2203.65 6290 2245 cv
6290 2261.22 6284.7 2276.15 6275.91 2288.43 cv
cp
6179.56 2310.69 mo
6180.52 2291.9 6195.98 2276.87 6215 2276.87 cv
6234.02 2276.87 6249.48 2291.9 6250.44 2310.69 cv
6229.58 2322.9 6200.42 2322.9 6179.56 2310.69 cv
cp
5870 2260 mo
5861.72 2260 5855 2253.27 5855 2245 cv
5855 2236.73 5861.72 2230 5870 2230 cv
5878.28 2230 5885 2236.73 5885 2245 cv
5885 2253.27 5878.28 2260 5870 2260 cv
cp
5686.33 2127.56 mo
5649.88 2091.11 li
5730 2011.1 li
5741.42 2023.98 5753.76 2036 5767 2047.01 cv
5686.33 2127.56 li
cp
5671.75 2170.5 mo
5540.79 2301.44 li
5521.91 2320.31 5488.94 2320.32 5470.02 2301.4 cv
5450.53 2282.81 5450.55 2249.31 5470.05 2230.7 cv
5601.1 2099.67 li
5604.99 2095.56 5612.18 2095.67 5616.08 2099.73 cv
5671.75 2155.4 li
5675.62 2159.71 5676.14 2166.22 5671.75 2170.5 cv
cp
5982.5 1480 mo
6152.06 1480 6290 1617.94 6290 1787.5 cv
6290 1957.06 6152.06 2095 5982.5 2095 cv
5812.94 2095 5675 1957.06 5675 1787.5 cv
5675 1617.94 5812.94 1480 5982.5 1480 cv
cp
5525 1915 mo
5516.72 1915 5510 1908.27 5510 1900 cv
5510 1891.73 5516.72 1885 5525 1885 cv
5533.28 1885 5540 1891.73 5540 1900 cv
5540 1908.27 5533.28 1915 5525 1915 cv
cp
5450 1555 mo
5450 1513.65 5483.65 1480 5525 1480 cv
5566.35 1480 5600 1513.65 5600 1555 cv
5600 1571.22 5594.7 1586.15 5585.91 1598.43 cv
5576.28 1574.15 5552.67 1556.87 5525 1556.87 cv
5497.33 1556.87 5473.72 1574.15 5464.09 1598.43 cv
5455.3 1586.15 5450 1571.22 5450 1555 cv
cp
5525 1630 mo
5512.11 1630 5500.16 1626.43 5489.56 1620.69 cv
5490.52 1601.9 5505.98 1586.87 5525 1586.87 cv
5544.02 1586.87 5559.48 1601.9 5560.44 1620.69 cv
5549.84 1626.43 5537.89 1630 5525 1630 cv
cp
6215 2140 mo
6162.21 2140 6118.52 2179.2 6111.2 2230 cv
5912.24 2230 li
5907.71 2217.29 5897.71 2207.29 5885 2202.76 cv
5885 2110.58 li
5915.89 2119.92 5948.61 2125 5982.5 2125 cv
6168.59 2125 6320 1973.6 6320 1787.5 cv
6320 1601.4 6168.59 1450 5982.5 1450 cv
5796.41 1450 5645 1601.4 5645 1787.5 cv
5645 1821.39 5650.08 1854.11 5659.42 1885 cv
5567.24 1885 li
5562.71 1872.29 5552.71 1862.29 5540 1857.76 cv
5540 1658.8 li
5590.79 1651.48 5630 1607.79 5630 1555 cv
5630 1497.1 5582.89 1450 5525 1450 cv
5467.11 1450 5420 1497.1 5420 1555 cv
5420 1607.79 5459.21 1651.48 5510 1658.8 cv
5510 1857.76 li
5492.58 1863.98 5480 1880.47 5480 1900 cv
5480 1924.81 5500.19 1945 5525 1945 cv
5544.53 1945 5561.02 1932.42 5567.24 1915 cv
5670.09 1915 li
5680.73 1941 5694.5 1965.39 5710.98 1987.68 cv
5627.2 2071.35 li
5612.1 2062.99 5591.67 2066.06 5579.8 2078.54 cv
5448.87 2209.46 li
5417.68 2239.18 5417.68 2292.95 5448.84 2322.65 cv
5478.58 2353.65 5532.27 2353.66 5562 2322.65 cv
5692.96 2191.71 li
5703.66 2181 5707.25 2165.96 5703.62 2152.71 cv
5791.15 2065.3 li
5811 2079.02 5832.39 2090.65 5855 2099.91 cv
5855 2202.76 li
5837.58 2208.98 5825 2225.47 5825 2245 cv
5825 2269.81 5845.19 2290 5870 2290 cv
5889.53 2290 5906.02 2277.42 5912.24 2260 cv
6111.2 2260 li
6118.52 2310.8 6162.21 2350 6215 2350 cv
6272.89 2350 6320 2302.9 6320 2245 cv
6320 2187.1 6272.89 2140 6215 2140 cv
cp
f
6215 2188.75 mo
6202.57 2188.75 6192.5 2198.82 6192.5 2211.25 cv
6192.5 2223.68 6202.57 2233.75 6215 2233.75 cv
6227.43 2233.75 6237.5 2223.68 6237.5 2211.25 cv
6237.5 2198.82 6227.43 2188.75 6215 2188.75 cv
cp
f
5525 1543.75 mo
5537.43 1543.75 5547.5 1533.68 5547.5 1521.25 cv
5547.5 1508.82 5537.43 1498.75 5525 1498.75 cv
5512.57 1498.75 5502.5 1508.82 5502.5 1521.25 cv
5502.5 1533.68 5512.57 1543.75 5525 1543.75 cv
cp
f
6065 1585 mo
6073.28 1585 6080 1578.28 6080 1570 cv
6080 1561.72 6073.28 1555 6065 1555 cv
6056.72 1555 6050 1561.72 6050 1570 cv
6050 1578.28 6056.72 1585 6065 1585 cv
cp
f
5982.5 2035 mo
6118.96 2035 6230 1923.97 6230 1787.5 cv
6230 1707 6190.64 1631.27 6124.71 1584.91 cv
6117.92 1580.14 6108.58 1581.78 6103.8 1588.55 cv
6099.04 1595.33 6100.67 1604.69 6107.45 1609.45 cv
6165.4 1650.2 6200 1716.76 6200 1787.5 cv
6200 1907.43 6102.43 2005 5982.5 2005 cv
5862.57 2005 5765 1907.43 5765 1787.5 cv
5765 1667.57 5862.57 1570 5982.5 1570 cv
5987.76 1570 5993.72 1570.24 5998.89 1570.62 cv
6007.12 1571.08 6014.33 1565 6014.92 1556.73 cv
6015.52 1548.47 6009.29 1541.28 6001.03 1540.69 cv
5995.19 1540.27 5988.46 1540 5982.5 1540 cv
5846.04 1540 5735 1651.03 5735 1787.5 cv
5735 1923.97 5846.04 2035 5982.5 2035 cv
cp
f
4473.79 1915.7 mo
4470.55 1908.09 4461.74 1904.54 4454.1 1907.81 cv
4430.07 1918.07 4405.49 1926.68 4381.02 1933.41 cv
4373.04 1935.6 4368.34 1943.86 4370.53 1951.85 cv
4372.71 1959.9 4381.2 1964.54 4388.98 1962.34 cv
4414.74 1955.25 4440.62 1946.19 4465.9 1935.39 cv
4473.51 1932.14 4477.05 1923.33 4473.79 1915.7 cv
cp
f
1725.61 1529.39 mo
1719.75 1523.54 1710.25 1523.54 1704.39 1529.39 cv
1644.39 1589.39 li
1638.54 1595.25 1638.54 1604.75 1644.39 1610.61 cv
1650.25 1616.46 1659.75 1616.46 1665.61 1610.61 cv
1725.61 1550.61 li
1731.46 1544.75 1731.46 1535.25 1725.61 1529.39 cv
cp
f
1670 1540 mo
1670 1531.72 1663.28 1525 1655 1525 cv
1646.72 1525 1640 1531.72 1640 1540 cv
1640 1548.28 1646.72 1555 1655 1555 cv
1663.28 1555 1670 1548.28 1670 1540 cv
cp
f
1730 1600 mo
1730 1591.72 1723.28 1585 1715 1585 cv
1706.72 1585 1700 1591.72 1700 1600 cv
1700 1608.28 1706.72 1615 1715 1615 cv
1723.28 1615 1730 1608.28 1730 1600 cv
cp
f
3245 3580 mo
3236.72 3580 3230 3586.72 3230 3595 cv
3230 3603.28 3236.72 3610 3245 3610 cv
3253.28 3610 3260 3603.28 3260 3595 cv
3260 3586.72 3253.28 3580 3245 3580 cv
cp
f
3200 3520 mo
3183.45 3520 3170 3506.54 3170 3490 cv
3170 3473.46 3183.45 3460 3200 3460 cv
3216.55 3460 3230 3473.46 3230 3490 cv
3230 3506.54 3216.55 3520 3200 3520 cv
cp
3200 3370 mo
3133.83 3370 3080 3423.83 3080 3490 cv
3080 3556.17 3133.83 3610 3200 3610 cv
3208.28 3610 3215 3603.29 3215 3595 cv
3215 3586.71 3208.28 3580 3200 3580 cv
3150.37 3580 3110 3539.63 3110 3490 cv
3110 3440.37 3150.37 3400 3200 3400 cv
3249.63 3400 3290 3440.37 3290 3490 cv
3290 3505 li
3290 3513.28 3283.27 3520 3275 3520 cv
3266.71 3520 3258.42 3512.5 3257.9 3504.91 cv
3259.14 3500.12 3260 3495.18 3260 3490 cv
3260 3456.91 3233.08 3430 3200 3430 cv
3166.92 3430 3140 3456.91 3140 3490 cv
3140 3523.09 3166.92 3550 3200 3550 cv
3215.51 3550 3229.52 3543.93 3240.19 3534.24 cv
3248.99 3543.73 3261.48 3550 3275 3550 cv
3299.81 3550 3320 3529.81 3320 3505 cv
3320 3490 li
3320 3423.83 3266.17 3370 3200 3370 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.4.1
%%For: (Pachara) ()
%%Title: (Digital Marketing-Stock-temp_03.eps)
%%CreationDate: 5/10/2022 6:14 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj9=SdkL]K^5q=N%g`pWV&7tX$Ji!c>.1_[V^=-[&s>(EHaY#fhu:o7,hiW.bgr66V3"7!18>_HAk""jAgZF%26+((BtjE#
%E^n;)1.P>#Q2uKbs8Cj!bfe_#hjI<<fW=]tr'knBh5pCB:8(g/[QD[#_G@@tg$hbqM3iMNfB^['R=*hkS3rk&RX%l8ebsNpIGo<)
%QD3qDG/Pp"GG#^.JDWfp>,,!a<W-d5moS*ni-C)BZ&a-=fC*k`5j238Liuhj;.'B;`HE5lRIJ2#%9%mT=4^-hc-5:=:pgA_e`O.%
%!Z#bb9lmOtBfQsH03Hqg(='#5:=$M>h(u8"B2hUVjZdf.G5TfmVq^pV[:\G4J!O<F#e=6Ujj=/1)W6=A3I$o?qBoUQhBf6Z@4D!*
%S^1.(>:n(`n6-TLV"#O,r(m_$+8B!gn:+R,ni-KLB3<0HI^Z_DfS<3*/2^q)n5pJAZqDEIc5['%Bsm,2[-CuLkNp'-<E2`VhrUL/
%8Qc'RJJZmSgJq2tZ`%ZBX]QHQkqMfH'Xq%I0gtPnhu)q#s2T0BV%5t-$b"3c]=YIX^cn8SO]BAQSR1,jml+ue(dErA\O;R>B%='u
%kD0>bFUraH3_K0KQItf_Vg]F/7^Lr=Jh1QO?8d-HleYDZ-\*g1fkU>B^#f>#FV1!90m1ad=LQ(O%@Kk%)9?qUY%f-QYU:)FdnT+l
%BIoUm[]h(2LM\9T[UBMZ[;2\J`j2GO0RecE>%2r^[VOF7oRJ[DeDLF+;f'S;QbPMg@kd<@(P*H_;n)'OjOe2C;.1^9$RiZm/"kNV
%lWkJh]Gcg:mUU,aium9*Qm[lffC^8UWO`,+r%F96g#]PEKn#'??d$=$Y)@c;"e!ONIPQXR)8iA2dF3-(=/Tf!KuGSN;jN-V/.7A=
%<k0b#F^6QY\lct+J%WAY@PQKR@e^E4@^/6#M\QS$[8=XdK`[PhQgne#Cg"Ds\Vp^7AZA-`'?C:gogqraWdN)/<6#M#L3VZa/;AC@
%D!;f]Kn$?9,)(M,mW(:c1?+";0ni0W?YkT(Mjd,2n1Vg&^L/tZKtYp%&d2;F;8^.NVHh,'8L4j/NAQV@%2Jl=We<MY5i<;te3=1E
%P"HL`Iom,!`4sq=&X"iGB7b*t"cFOaP0u0D<#K\o^R.=jM%B*Z!$8K90,?npnLkK<fS'Nr+M^/e06#hq-V;_uLc"g-N!<(<%:N$<
%E8V$ZlC$@lA>:@>+-o1q-''7%]K0IrNtFn[MoCM(&P!`UWf2G4$mGu--'ufC7)MNC&>r0EQ:rP!NWW'.6VJXNM52__5/Ba!:Hd1b
%ESr-O,^ok[(6e\qo@*b'VgebmR]+0X7!fgpC8/rP&M&XCTB\[a3IAYh-3l&k#K5kI%YU@nX,#IUB7<Bg3S#?2&10E-]QuO_&mPaK
%m$SchWg]gUJ+tH\V'c3+3^!g7l(;B\3rGe':u*rW/,Z2m[S?#UPQ!QPV&^rIh%B[-3I2Bgd_C1$dbuSPKBgE"AVHcKY>h6<pdtM8
%i1H,&843;JoVJogd3mqP)[4,1(X"e<728;@0']mEk8[%S-tO4R4$:eKVJb[FaY*.^APOA>AWQkF_Cd\Lhb;83-4re$>,;X%Ppt+q
%W+7Zs'PYL:1mH&;MeWhI:ee>_^B3%32?^^M?X;]a>1k>,Bdetkq-ti@@(VXiFJ(:5!fc-!DAtStVlRJp&iC-KD;Ma>k<ou(E:aco
%$>C=8iLh!k$\T*bR)n$.#m'1RTcrcbK4YAH''ON6>sc\\f4>-1-t"2i)uqk">Ai-D#Zqq,,#OhZj%Z3?iKX-K!*9YeaN'j4"oe#N
%-p@WI6d.SZ%gc;kog2D-Jh'uV)DUgBZd>%^,m#oF%Y5)!,*n6+-u;Fq9=AQqpon`@i)B+OG/h'&'*;[56NK3c\24g</fJfp#+d%9
%E]!U5lQsJVni16^"_QaIr^9!D')n=P05CsR09aI0MGXTI:"@a<nN9*kL`q`Pb@_eA`R$p>I"Lk@7H5o<]hAh:W8KI@-_6=2>0(F:
%"@6j(P81GE.%iT.JA5Y#J_(b#!P84SO'q#3"&0d;Sff/)Q]m:t`lZAbYlrC2q4%t_7['UmHRXk-08TnPXM=l"\BCmuM1B(_!=QXr
%c5JKH=^d"L!nbH[pk+7K,j8^UMjfY.Lct9r?^Aop6RFn$94b#OeI<?bh(lMTi=C2kaWNS[H!AN,^Bsbh;Bhh2#@kqRcBokmQjLpG
%)3"(s6,NH8&]..<RDr43#N4hJ=NDIk\9'gjFl$BK&V@T%gNb2\_Ik$RVIbp?)C%#3:m!O6-tCY`(P4[fF8SH@TGij$NegsZF'paB
%KU%0_+`Y0UEp>/C,@I.b0/)Jk]p#8.\IHIF)#8cS;e`JQWJY^4"E[&!j.tYI6^t)mQn1iBQ*X0Z9/OI,)"j%[LA+G2i<%AG%$IS8
%3d<7kFpsC):;B`hV5SS<gZ9(!7@jjALa/_-AJ`Ah\-f1Ol/=>1GW5`_9NMR0@b$'GW_sPkr,rKRH"$-O,Qmfm6sa7HW;EHC%5Z+J
%;=YZ[O</s,QRKWtl_oKHbe`OA1@e2f6H1R3..AZY'#suQ0gl+kKu<#8cT%M-L\&^=qWWOOkr>%VqP48t8]_9/K+oNGVltj5@h1OZ
%E_[bW*'V1B96"\+J0pS;3U%4e_^W/*;1O4;_r27ATCKnD'l.&/OEJ2`Y1M_S=t3@@JAQ^KOQ%,_(X^HlM<jpTMj+Xh!R\_K>$HOl
%dP)anlF,g8briRVntlR90FSj#fc.fHLX_:(q>r5_11,i0Y$""5>RHHQN4Ksg3aYlle0O7AK,nVf@[60o8E$9hPnF3=3?McR!Ns"-
%=#o"HUP9m_?&hAoq\Sig:`Z>I`.@)]kg5u!E<3H.!h7hChrsYX&q3IF.48pD"TVQi+*ga'U8n9o#GPI0a?#b]S00GhNRV=P$H0T?
%qe2Cp)-?6Q/-%70d2`Q(TM#co"16Hq?:^nLPi)b.8$)H`GU&8baARHYE<n:mfATft+\0KkP\_=UXtC!&#eoP<W7qTSPTJ8!bm>^s
%;*A$*>b[3STMWd`JHKX91+dkWM)L;\N^4r-cZ312@,6"140BWuE[&U>W^[IIVgNK9[FSaI4=lhBW4[r6+h\B?&sJt>GqYnN''N*$
%:O.SQ/CNkB6au!o_8#JFjWI`)K^gOHKF'k'M4)_hiN"J0<C_ok'HkhE-jM<Bf,@3o=7CT?=>$O(nnG'./EBD@,abq](q`C"@`maO
%&jGlU8FmmAZ:;6=7#9t2QKQf[";$V_Rd@WL?e:CN-@D,4);(9%N'6CRNo]q7U#uge80LK.k=S;jAG`3!W>6*Fa9qu1d"B8jkjst^
%Ft!mm&5*^MC5Wa#c=pua&cl\V8AMcZ8'1n4Ya/C&aoORlN@cSnB\(?qM/1WM3=\H(NqY0._Qr+&YZdu>j.,9pO:sMu9EAC<Z+9u-
%NN4g&rF"@-l@t8984;Eu@IKj?([s(jg-SP,1Z#l.BJiE/;9pJq70=,fkAiakIYJG-l4q-ZTj<b_`AMDc2M/]@D3/5N_,lW/7"AZ"
%FU:5b_<_fd.VUF[l/Z;>;O:%*jE4N@L/OfS3f*(4KkbV$!#?fH]lJ:Y-(0\h"q?fr;.LUmk7d&X"e<$4%GG%nIr.%=FHp(76A9AF
%fd!j3`.o+BffJ7dAJc`.`0lMkBkNO#-@I?[9F+UFd;IPf<6#=L,Z12%+N975Z47"U:+T%kSZn=^J[cgOM$;'[\^98*lJ+<EM\>g'
%*-R1_+Pd*N6:'Ze64R]1L2_\ODA6,b7?D*'ojiu&V@[".7DUV/#'WMo2qsFM$<'Is9eI2\ICVp%CkpBO"ko?b)5Lcj!\Gl7GrW"N
%V4`e($:t>uA>(@OQRj,+]-q21=\9UV6>go)C_R;pf+MtpKZN(r'Jr4oaRN9-!,M]TZQ12aYQT#.$Y)R5W>hQVH:Np-M9_5DU?7-Z
%N8tC]"-k_F*&LkhqKs.p%M]f8&5OJ\ntN+'iK,j$_B0StO>aU6,J[kS<PXX5T"-uj!^TE[RVUQf-;6k6DhV4@a:h5fa_NmcOB'1$
%c?(_g7]c&<+h/G.ELVfK#=UM4LXUu$9-McWO@"LAei5Ft\ZHiF)d;co+srI$O"%[t5T-#1LlJPEN)5P'3AGA;h3H!PgGCf?i';Bf
%T_leT'G9anicG/X*Vot'9#^csIO".I$!XWJ,*:0qQ%e+MOV$KrEqtbP*sAU#p,fh$YkMTt)Od,'7CKM<`>$Fecqf?TUDu0#Ou=V(
%r4%tG0QgXbQ9agBRh"eC&f=$ll"%(dW'SVc1%O,q6d@+Pih5ImU!JTHE<VfljCHQp^nACknKc]kB:L`Z]\"&Q=^3lSBd:"nc2raZ
%1,K)1p7]6Sb8D$F0NupGDO)#7.4I><\N/85mi_IALfl$,30o,q7cICl,>GC.ZmMbr7lp33)'D];$<gTD?j($XX`i,X_VX+aq\UW>
%l4ih*TgE63.Dnh!=JAJSGFSjCQI'"H*"a^*@pH!InkV_I,[[2L-B'0t"f+q64eFfaKr/"3MDK;IiM^IE>er#QGenE2X`6^80eH+i
%`<ma5griVC076gM3u=.&COmOD#!)_oIYeS@0!OE8T?'&\g4^mG$a,;KNF?&",u()SUu;`H00h8i'g+Caeo7$nMcBuS`tB5X.*jNJ
%25-M#X(Ig-o4UDtXN3Y^j%`Qf%*Q&5&/&afV[[?DI/=,9^JIC3J79Lr9.LKtM-PUt.ucj/6q6\ZRMECs>gTB@@`:W?@0rEa&lX"-
%lQ[b\U>ReeI47tu9%'sb:*-,=k;o#efZkD5]4r,hW!$nS0#@6Z?;cZ>Og<VbZ>pk$+/"5$/K?d-#V#1B`o6$C835OFBb\;5Lu(T]
%dWR3(Efq'KV1VP<lSqG$,aEK>7/aDJA]RNe>r>f:9Hh?u0&R/(lFmtXA@%'F1englV?bTQ<-E5Pj%oGA>=ZOA%NH)oV8-k7:']c(
%q+t2$#4a^$P$&^gg1@gcLPh_'TiciQMK>>m+385p$e[.[8Arl../Br:ACs?LZM5AY"1lG6d[uX8iZmquO?tr%=ic;hjS$nkeZgZr
%%t*riJms$/^HoRjOo'T[AV/X6VS^Y&<jYoiqk\kq859iW@*8)]TE:M5N(M#K3o&dDT0?$.ntN=.Wq&KN\SroSC5PU*#M'#LeVI"3
%d#-ENe);Vef4h"l]E@"Wmee3l-?][j:+`;r=t%2QF#RR#W[^\]@9\nC)/t-r:?G22SQr>hISmD*$PR3"RTg-n#&3-CK0ie@kc%'\
%61[>[k]3Z>D(kl%mYlgJ+nSNn=J1paDXW;QXDe3+`;8?*dnQ=PP.(NHWIrnElFNnp$#'Jf`-d>Kii>-iK-WQnVX*"h+L[YqJJ=,h
%$Z2kAKJ_kZiGq4?91+*E'o#t2Jn\pr&?EB8>#%i(I</j`/to]aMP,lR4\B1dY_rf<(fTOCA#NNTcZ:4/_n`*C9%q)JjTId4ODGmC
%iM2`T3q31[CTp_gI0h(UE:(STM6p=aP06s4*_CTtALOd[pnCbTV%(Ct78$T*dQg8$Ubm=LI&B,Q<GjJ:e/"Opd[e>L)'S=ACT5Oe
%FD02Jg;nMiZ6LAC;1_@+JST/eKu\TbUl:rNT.lpr\O'C1.8Z`N=\,Rdc,(+@"SXIX(PRu-$@u:S^11PcJsg<cs)B+(am\"t+l$q5
%[-G*(TZ^oO\rq(!$?qCIm)bU@pqZ![9E&>6L2](lgu+/?hr5;>fZ<;cU][P]I)ck*%t+'1^fu0o&QO>:$,&ZQm4m_f6b@u%pWa(5
%Aa#a8Q_R<@clp9*NiSsF%W61=nIZGE$^-SuDkRV7?E2(",HhhcZ=/Oq(KPRVi953F9?"?]m*,.k'F?a]2Y_oOcmF#<K3\I3ETHOm
%cA="RdR49Sd<)U:")JHLeSu3e?\frpL[o-nDQ.@6s.Io-mt[0i`CO6QSqF`c4.gSj=U%:"B\T,eO\'BM3,Q`&<"?f(UpEi3]G<oO
%#`rU(\\0-5P$Ae39;i+.\)AAOg/DNV3OnOTdRkW?O[G9<:Ou7*5OA]n#`r9-`dLi3(JZ3NfDfOYT1j)?5,$dg1$;f@9+WT.HbtRL
%"4p&AQ;EIf<U`:7nD['!j]!!R/>(<>?Q;]cMVp7^@1KkHUDo/J*2//YcH*UDmPWEE:3"4T=Kk5EMVTrY=Fhe-\R]9u8jle'8/hlL
%oKrl](+@<bY(RcT?4,I<J21(3pHH[o8AYsM*Dmd_a/'j&#58bhnAjY=#Ir,;@IA-s`P>_(>f`7&3mg%fWWdDqa;md8BKSs\CiY7%
%TocRc[,^5N%$Zm:>U1Ln*]anOFpX^C.]&0\NJ*SJ78aH@aQ;K(aiQ-#WIT@"#LVP*P'_cNj;I*_<!T@;%OW@$^3mu8/8Q12(dR1-
%,bXXY460X7-C)NeHq?R8CW+,3\=4EFJiQZe2S1E>G;H7#TU\MPJNOtScdN(A[67&QN&s:HOG&#-%^ZI]8`J=@!&\?_$K"0\AOfpb
%Hil\bK`V^g,:93Ki*"@ScFVg,N0$r1a*@@bXSWoK)\J<6@!lAkG@Y_<l2Xl6E!^#B=ADIiRKHYg/JJad+C#M&.#_Ep&P"2j-Y4\s
%;%GLY]ph+i#Mn$_-"rAdr#77!EfHd;/afGe#7gGU29TPC=+b&4\NbZ*NUr[H&*&Bf-`$673>`7c;X@&\8@gR$/L2UnC'@4cPh6^;
%UPI=H!$[^R7'qXb,>k>Sn.gIq9G.qgf0VM2!h<[V<!A)6d[H+!Y)tF"JsuV2\.f8T',!$t7Yo,q*lQo3<"BSL%-a%Nc9h<J?ehoM
%h[=T;f,:V/`n-=Z&rl'BWJ;`eIjpI5Z9&gJ+^a8#T;2c1)1c0e'H<RLp;lW56(S%4@%e\o-4&=uT\E?]U)>MQ,"fZ#KPD3p[2->u
%"7MW5+5'::17:d_^5&!eBif<Z9(-#P-XD`Vmar*1!^:3gN@LNJ&RPpj$Tusm-XZ(Bb]^U$Dk;ia@=g_uot.ogs6*,fcT'Wp6A8SF
%ceeTgs#0,0F0o6A_8FfHZe&ArS2C9?Iri/8o@VA/pm#a'?2N_b1L%n,+YfUWj!X(HHYoqfD*U-1UNj2tr.G9tFg(1FkUG$C8bj7%
%IaLAo[P,K%.(@_$mamr18AeCZ:5dkU]@-fqC>WUq$ni;O5,LU+;66qi(f\,0.91.;@O$1<>A!Vbf<(RFf8_qtqQ"rPY<C7K3lf,?
%('mD<$i8\gES;sgom6#4mBt5SPt\pJl^VP[Ra$0*r/g)-2pl:9&_7rZ.1F8M8Zbk_gR6l(Xm:c@1bW$Wh@u#O[P0co\U+K`Cc/HR
%0LR00#&qYk]2U.)!e6rRT[p?=i8K+LA[fNHAlp/RO+MgKFom#a_5dBlC+!\dP$ts^4Xi$"gcmHPS+TtJ+p9ifZgG04[7]94rRpH3
%&Rf>o_+G;F#o4=)Xq@*p%sJObbI)X4cd=?Kh_WH;HFpGrfrY&FII;c$cY&Pe]?no=B(!ElH353@ih(sL!>G1ss8Hs3j6p<f8'dNB
%mC)c\Eo[.*YC52Y6)s^hf>U?aUiKM:=5/1VQd@K\CEP/)l?@`d7.k#kJk(1$p15p>h&=@L4LEn3"Q`m`\][X,.!QJOoddfsB`klU
%>s%Is&_P/%8K[kk#EW`n0"*68ms>JuoHYRpKmOB/A$=pZg]"Z'0\4R,BW6l(-4.!ZkQd5cqjh',3t\MGbcE'u-,CWjLDl)%bZHUi
%7o0OBN@QlBmto@*SdnhQ&hEN<"`Ja\[SEV,/p5:08-nqIYh'egUfVT7%#=X6+qsM!D>)ZuJ!JOTA0DY"]%f>&P7GKK!gu#k9l:q@
%0#1',q"5dca;@-Vea=in,K*AVeX7\V,bQ2HB%4%T<p`;Kn_]Fb>+LI:DXAiRDk2/D>*<hj^^$!YTg^8b*^fRs1ES8h\p"fUJiuD;
%/f">KbXuWmV5@KK;pIoH;R^A_,ta>tQJ<cs:>-bN]"Zk!F])Er[H1:j0"'fD`6>24QX!NJ[H5c$99a1Vg2]d%jPJO0X'W!YWHjJN
%]m#C*h"kIk;h7+RNCBQUkh,/#(Gn_#814QBVKTB2J$8B(Xm_T>g(4"ED1\mRPE%ki/-"P7WD6c^'1IuIO;5;eGnisf%bJ2iS"-+j
%LuS:Y`0)I.j-_Y)Z[B7D=*f"mc!Ljoj!X;//`(Br)Vt'GqT^/s.DI2BI?ED^S0YE?\rNbqBI4.G+gQ*nBO'&M7Z<sh`1%<:!b5p5
%<c:sJ<;bU,o(]OTfpQ(]Z?NRjhtlp(CpYG\%k3Y]MbD-JV5*ZiX4ct]EU;=G@<DnS9*k7F-XOdLX`uRVR&JZLI`P"kY0_!,\m?An
%,mq+ScsKr?8[geLN&ioPmRXEd@*#Lk5Iou)&=[I'4b&_"nCk;<fnJ<Xf$<!o,XEUlmJ9_R?L./,DFq_.`r=`RDWg`PF$?#H&uFNV
%%q2g9;-q&ZDHEQO0S\N$mMR%t&0+/*QrH+[f2s"Or:]A,/r[\Oa)lp"hA@FjRI9EW.78Rk7?Y1#rk@lrhsGKD);AXH.s0b(Ys""k
%Z4OQiFALcnmaq"%ccmP]_g.6;dH(R04pd].pEn$qUY0OUi@Qi!\`H!lo@4bnK02_a0ZK3H/9-j7`u?43@N+`m_W0O0]P;fD>&SG+
%[&,,663dhie[=mGN$VPa-0l,^ou1%-n@4#d98-HQKNI/c7H;V^`1'+KU.#muQ>k5^;<'!C8kHn[>5lA18GmD!b\\AW:K/=^D'"O0
%e3Z1S8:6rX-;jQn7&<Qk+u^+`M-=nR.@'qmeHEipVcEI@52J$-iO'<2!lYI]8_.DiI[WKUll*9qJ+$oLU(I.$AQL6['Qp/6d2<uh
%rNgJ*2&^plf<=e8jsTW/,mgQock#.1hc94$8J6K=Ttg/];nul[)]k65\1a@kO%,k6!B6.iM*g8ME]R&!mb0_a`OO%[B=5oHA2l!$
%D.YXMIkmA)C40HQKX+#6b4=q;Y/TVj`,!jT7dp@&6%#9RlLc"&PjeWEPSHVp%hYRBY8q*h]Df_F3GLbU.9T9)?XhK-oAY5<$PUI2
%GT?UY1"HLc;+)!M&#)sm/2$)/6m9Dj^9ka7n!=\&i>oi;/<e4GF)o4e>eS_X]gRQ&LS,/%j]/?=I!*t-UtS"V#pfnY&GAb!<@Y\?
%hO%u4ke9G0=\(tH^P%n(]ue*_J6@h8Pl;)GrE)`oV>c8gQRHiq'/M7<Ltoq-99_Scj(lgNV+1FNf9XCCn<HBRjLUI%:6L^K5pT(.
%W0'QDUld'L/V%ae&g^]4rVWuTg5E;o,\pKXq?gi?&@m@j:=bkt`hG$aKs<&JROm'M7B%PJ8*pMd.oD-#eZp]3/4uZ'QS]I(NC?G.
%EYCf8-d-(E"$)o#6uF3H'=HboYpdK#*$9]o`hF_Z^a7,PE"`8=-q%qsi"@?8dp8E`ZqmlmMo3;dRY_"7eT/dc\GhgDOi3/"IRD2t
%muC"3hbP.nGI:seb]`qH%*_3!EU>7b$dE9HT=Du/CYiEcYZq.Uq[:mM$iccU^F&7cpZeXQR$UPob3p/Hb,IVae:H/Ia;Oh&;1g4H
%RT-GdE\3Pl!DZ[Yn@1,l/Q%.db-g+ZfDKf5Ue`BRCIo(QM:+L!0@ib:c`+@=9!qWu-!I;p9(08;;CtaUFt]ZF4UEdP;B.rrU)L0Q
%#OmN2:QuBM&iG4(2#9SgaA*?agrF,nVuaO9djY$9@`8aQeM>j9Y%BL(ri-k2?%MJ6\H39s8RdQJ<9i$&rbD<Hc&m4tUj%=EL=SNQ
%m]V-,c7CPMQjgYb/,"ZqSJGNlPpCb*$`?JRp%McP74\2ZaOMgb[nR<&ns8`eM_QJHX\naeC5lE&2C'O::Y&qBVhG`G[]ZF>')Vt.
%FX7H]J)e5/s,Ih@l)a2>X4\@Be<1pS@dcR@jN5>W5>8d?,/O-e6S=@SHd#3)gK&5liVOt_Os[B9F\q2'Ooet%eigY7]?-L"[il1n
%\<Pj1/4e8FbF>#N9rNFYVXg6Qk.3sCja7?7SWDK*MKl38KnD)_LJ`%I8YlM.K#8uBP=c)I)N/-PIenp70MuYUSf<**YKr3JgFV0`
%rTDeAle]s_A22sQJ']HZC#mMUC;rr3pl'_e@7mBn^QW8Jbl(no"1SH7X"0%eLNLj$h=FA8I'8FLc1ZP6QOK^;^=Pk)h=FA8I+(79
%44j#O4l:p#Pj\?:A3dDCEmj:KlZcJ=+I&=$j%9:"YLf7.<_hD`hcPH/lEA"/:ciNsI'5EnIWqXU='(i-Y;+HcR+c)M9pXLD,AaZ4
%nFG;_-;/3]qdbo@`PT>k_&!t7$HLXM)m,@@K$`_aa1:s5&*cjFYM)Duc39e7U--p+fRj:pf)_OH(4_YuKHbA2B!jj3Sla%T8CEm]
%^d:g>2Lf)X@_['BCS-.2YoE#:;2Mk6]H?];8hk<`U"SAprdMic>QTBLFG`Sq6t+XOp`NVB'WOHS6'AGk7,Z5Aa_o;*J8X(9I7EaS
%7`%M\4sT#Oii]'+B9`7ODBP]PT2Fl08ps1.cU]7FqM\=E;<!!n0t[\_0dn<e=-39mP(CuPomOgO(j1MNPd$?ZJ%O<'N-aa'(+e!U
%gagKe*F/aH&qX2)M^8eBZ$nEaH@3b8U1D\`n-9Q<U(aNnO'4F0V[)Ii3b&*_>r7\ZLqW*r/cY_!hLo@&?8h=4?8dq]c-DeLK6jZ3
%mF=[@'_b<9,ktiAbP9#cA0Olcgcp2.7'^dAhB`hlg/>Z9,noP&R./'LZ's=i(W]"hSf=bm8R1c6)jh7i6[Ai512od&@(N*PQkCjm
%e(^4N2#kkg9;>Or`9cT_[kI]7gR%?QFT^kgrIeR#j)b'R&j/*8Vn[@pdd`M@fM`fuJ;*Vde9h3,hSEX':42eR_Jo9qD*,MSq$BK0
%gTMrAlMl9p.B.<.2/s7]d`H+[ldPh3;^Ub`;Q8pV=.>enB3r"A,E]J7VA<?MTqrN.(e^GGCf1XXc:JX3Y%aRU$]!4u9>"M)/[X"o
%9.dMt7?l:g9<*^>UK3@q.ah.+P(]!KH4ZLd$Ib_]-45kY.asZ!k!X'S%,7hRXT'T+,XXE(1I'/6m5^.PCR.Mq'CWuola;e#Fh][%
%eqq0ADPHclSj_KmnsZ/6G4T0`Pb+&:6b<Km-'LI2FW:)5P+HPI#!!<=o05Q(LdcX?:jU[=Da<U=Xr9@p3e"X,J*Xp[4\E+TD]8Ji
%2\"TSEmj4'\s9V8>!5?rAYZfZ9.+HGqVWH+NCNAGX4$[Ta1s90f2b9?+%.U(4ADp61'%50%-1%?mGaM&$HYWq#+Gm`AF8dqfa+F/
%-D5A,p0c%n2k.3cSZr\T?-PJ1=.NGf06[.#o4H&u_Dnkd;.Andm90@>)[\=Uf3L%<-d1sI^t2jO8lKNaNi[q&"h*3`Z(Tr$CE]RL
%h1_8^,cjJ7g9J$7mNaNLlDU\BRd-inQ2mnMHA>[=bchm@=W@4h%XUb_)V5IF$.[q.;:iN-`k`HYO\-<bD@lN)YZ^NmLV9M7g`9O=
%M)n1VS(:i=&5/"n9?<o5%]MITRWGGgQ^Vup3L<:[iASoj7!Y"qF"U%Og`(>&T%q<s@r<X]`:*@$W02nX^[grO.pXZf-keGN<[(]=
%(j<#L$lRV97u,#RZ1J7<KHTulhiCX;2k(I.<O0#u`4c-G-?7p7_e%?qk]D<oGa[e&EYlE<Er!65<R+Z$PgsSqQ!3qFEl-VY!imit
%U=?`!B-b$UF#2L-cYsuhA;SpsQTu7J-7`sVpQA7KS"+t"*0ID!,o#V2P3_+]_KY-7.G"9PR+L@XXHK]Mn96N5lh&)Vg$/I8?1d-$
%crm(_[/np4q"St3.,KrLM)s'&JU?tCr"JFe`7N1=J$hij2Lh>>g2AV9g*^4GhlV,XXG0-bRXW<_nIh?kBK#Y&2-H"f$+3FA&"cVe
%LmBI5q>_VUW\1ZG`GrIlLtIcpK\Zqh#lg0t\R"_de5W!NRQ?c\-:kPT<1CMIXnrEQ-h?/t#Dl;2rRYdBr&>$NU,`$*q#?5G-S`B.
%RbhW>;l(mbiSP.^rdBZ"rb'j>KOT$TBD5aZ$+tG`HZn?qm*_/g8V@5Xmqs<YjNHGEK[7CGY'<-ugCg?5T+>A:o2-YF8]AL_K#=O.
%h+>S:%DcJ;b+DM*!9$Wga1lJ29WTS,/s$B/kF-0rZK0]R]/D!o%bFo(P=:8mXGuJV#1Ic*hIF\RG[:.THY?J*H$Y1jn(>$=?f*OQ
%YJ9Wpeql3K^8_!dh7pIYc+eNW;8(Z>n=\RTo<EdAPfK:VX3c?/bguZ>Rle_+#1oG-(ZX07cVBomA2ktlf%#^/IYN7YEfu*Z`9bWU
%igsEG&Q;FMebo8&QJ(njN204@(jBLA-Aiq`0$/oh\&;aM%#5d,0!U[TDpf*5=]/*h,AR4TfXbThT:>0b,0M-9HO7:ooEHK_OiH4b
%jMB`M9Li5;;('(r^hZN44uZN?[:HuAp4`o3?Wch@`a7D8FAD8nP07mL;;"P1>`Iipl$CClP+KSI0-&2gGWls-PGl`c51$LWcH'Os
%.?c'<aV6h3AeKgGNS,kTZ<?bN9Y8onlqco=Ddi#df@l'jLt'pG>p%12I3eTTb0@R?K\0WW%$E*tXrf0]`e`JQ2Z?'^o8,L+3Vdah
%HBL`K1@]kgW28rJMYOm/AA-g\g@%:1e<5O,[GQRXfPFSagKq1-Wp@>".;:WL_+Tk&2GL@L&u:rNR\h-k)V*bW83G5:XJ=$P@iNeS
%\"kR4r4IM_CIFfmn,G:Mr0]pu[d-*O]>^Tknnkd[lt>nV?KWlGiAJ8H^Ra%m=8hjjUk]h6>4ChMg*palU?Gpi=^Qcq]uo#ia%Q"A
%70!H]oRh2iW/Z<<0c1)Q4:d.pFT,WIq/>?Wp>L5[=g$T:`V\p^^f%?Tbo[CdinXM6pq_SopCm&e-87Ak]A;10X6p4HeBA^-O^WV3
%o@CgL*VcC3Y+r%@#/8`E@2\io3L4Es(Rqr>_abWOFVAgQ>r+(!Ik_Bko/;BKa@O+U5;Dg<^3t^J+##gFNQd/RC8UhlGdrCl47lb]
%!;YjmAE,(&]/W%f<%!a[[TE48?([555"9@)_mOWHA)h;Va2V.'&&,QRAsg#WFmd-W[*\'Gq1]<:*hr2u(QN2/KE(o-G%K=iboQA5
%Oi6:LNM=J25eP6bd%'7PL8.*BeM)+NMlP!ECkb2'[c?Q[gMq&I6sO#4D_Br6G&%g7fN-pONX^c3Z?=^&2;Y41>.1)qija`?3S9d7
%3>TLcfWH632T%1mbj:pH+Db%pBJ5!LDJb%6:P#.rpDs1GIL:-L`5b\s*?g.JQS?l_QQrB;L8ha(/]1T]i,_GIVJ'm0+7`aR@98qs
%lbGc6POgP^;itk<"VCY1iU5$Mj(9=$qZ!9__EdOf*X'j/Au0_12nDG]$\L3UZm7G(G$qUo&VH%`C--Jn2dI0;-S;kb8!B6CBKK=8
%0D0DFGJ,JVGfSWfpY%Ls#4MDPD2I$5l8SBXlPPUZMe8!hg2]QjC:)EAcQ3TaC:WB`3er*0(Y$#Zg]dc!C7XJTPMr(%D01egG+FnT
%RVH*Sa6K^,-;00;0EUd"0sRhP3o/peZLR9WNoSVNA"@qPEpc^[3h]rVfpM,$qa5ubOVg-Y]f+*r9od=`,`c`rLGSb]aWEi+MTd/T
%SZBuSjNF(g"$/+ESWb.>]\%DmTEloi27gep+\(OikC1k_,<#UJ/=5VFO_'%h^U3$Jon;j]kWHO@T-pD!9Uu)$NmC,Vj35mpEtV*C
%T>PZ+kDPij8h=9\YN."jNksdp?EF#Oh5tkfFRj#cT?R+C1MJgT`oCC-eZb_F/PGbT?/nCuk2,MK6l[J*Mo?Y_]#_!FB1p'VI.o\6
%[9o\SUn<7NIf6+pL$I$Hhd.gVpuC>_%a(q5.pa52d_=/W&prgi^okR46pRbdRD:T]C2L/>=n`i44n$nHCc>S3f&.h:27D7ga)?J%
%1OK+Nh+XeOl[$UZHEI'cb[:Vb.<r4Q0-Fs"pq0k0"'5D:?WK#caP9J"%O:F$E!Eu>H.[RXh>cop6R2`#eBA46p=l!IY?S1fr(IoW
%]8U[8AD?Fc-ng&D/)=f!F6qF?IT6DC6et]M-#/.(kLRehH<h_8i3tdu,<Qu%7WrCQf4r,UFY_aKSD!c,[p/6'UDjmA::K%A%iET6
%JsBjc\nqJ`[I=*0]2h)K6!7OjYNnu#\l,`>16j24=8pCMrDN\[7f+T#7lG9SReI`V=pCqdFbYiF'TSL?Su*J@=i3!hAk!WQCNki/
%?FuZbD["3qRFASd9^%=egOV@GZ060U;M0P9Jm5p+X4PV_E'C9"ik#G`*P^()pOXV30RC=(4/8:sqnSe*\0%$XXHO8E;hP'4i$k$W
%gf,=+o@Rdo&!XH62W!Nth:JZp:+1cBJe3st#RJ]p@-n&s6IX1E7eD\qL>P"\1iD:%)CC6^!Q/kre'2\=d=Ln3hll2<>(>H>+X2E]
%Vo\)BHd,U`Td_(desdcpG5PCEh?eanL_BZ"\(0in%5c>pnA]JE6sJ84Nr.oMG;ChS"o*:V(VRBr)7W?125kWUFj:5i?O)*$C`MT:
%S92u<!4TV@Uq7>Y!1<tKW=nl=X/:Q.9PuGGlZJZtYsYu+1g=\&X+#0se=!/XB".fN/j!?oQ?$GNer$b[bqL>/+*,PJ]6R;TqjHXt
%S$0q?Ek@%529.77:K>,i3g7g#90ILr<W4EDmb'Bs>hXMgY*?Vfp=&s-ai<s6>M754gP9Neep+as@X79.f<(;s55oT2hY#1:Z`EDo
%?b_&$Zh%O]g$GJh;q^NmX!q`51"T'&^VYKI9icbkI^>ofQNqA$mcEe2Vfhbio*51f3NMrlr[L2jH\M^J(C-SHc,5m'%sbJQV6]e%
%P:Jb`B?nY@9Q!_d^%[e'9NHBnkIb4TpbFd^NBbNFgL!b7g\auDmQie4&!bp[83Fae;`h$9kF2mo4l4-BV*_;j[tI<_W``;E(-D"s
%;<(Hq"i(!FPP^_P/:Dg;D%==*nAdEXqUokX-OC_.@'e(8YX#a<o',Bllb1h0.in)X;roCG?;=qpcQBFidc,FfmosG%>fo:Z@D(be
%Q&Zq;IjgmNHoY,Qh.*)QW:BCgcoe5A6>ei2VAIk:L0f8s@9NPLT^D[R2;<H(IUQB_C8]Y>ik+r2.D(sS3kKXF+DCo-nUhJn8[s6o
%8GMEH4_7*S5%qjt9MaVL0-'LUX:G'0!7ck.5=>Eq9bs=(7M9PY_3;9t&7Ct`:&`E*F,,2!<4(3R]D"CtSa,h"Htd<Ki"4-^Vr'Zk
%'VCp\/^6325$H3\[(bVIQ`H0SI!\r<7lVu7Fpn*T>E0+XFnY`;m\5!\.mGJdD->HUb!D`po]>X1Bk(Fqna1V@?7;qB2_F`r=8DN)
%l29)tm)$)HgD6R6GdX'rIJfg:W1?t/$e)ibpe3.5S`b1\rCK$L@X7S2q9nSm"iJ(LT^<9*Za$geH+?p9<Zh'VYMW'H!'S(Lj;6W2
%+,Xja[>3+6^AakPno]$9fX@,--S3lPXD&(*mO+MQ;f>u.hs8PBDD-@FO>#iGX#[;q\F?6^n2TS^.T=<M`K.*fhq30386A1*?_!O6
%AZ+_!`U*4pjWZcdIJGai/KPhG]^8$DqtsG1+e95KRt('E.QbE@p077<ZMTG64&HfOLtOla#uf=7\Yc/$Z47]:$SOR4V[bmo6mg7*
%AuB6*/SCt'(H8Z2oS)>lN"*+<p?@m"Zf'fJ\sf1:?N6+X0C:[(O']"<fnD@`q<[-ocNi.BO/9$_j`kc/]6%5'RT2#Lhdj-Tm:Y*o
%pHb,<p8tDVqrCc.H9D-dCMQH-XRfnRA_jZ^1:t2krL@/mn-G9Fe(I)Mqs<":XmGY3Vl/2a%;d8X?[btu(-YD6AP9As#MJ\A[hm_a
%1Tc_k[B8#%p@VlJQX0>tNj>/#(Zr'YZdr=Rc#KnPh-JbhZMWqArTli=lW!Rpo5Q5VroiSaG4Y7k^7G6#VZ&=IA^>ao4[.NObuW`1
%*b8'HcdoF89s:$LT2f610:(LDb;Qhoea0cfiO<XtZ2Sbn]B8d`VH`kUWS.4Am*shDg\n+*_K0j7Yqtu_9&8u;VO4f3!SpG;?^G+o
%3L^QBVH0!%+/b\noU\aiBYXF&<B/adSLT,<D+q'[>,tH$Iseda[8l$:VKV6C)H6OhK>"7..Q$cP=.bpBg<C[5*FD(`-S'!/<,E]q
%\<q/^RVH\$CY2AUiP%04[G--a4_m/ES"?f(+&4KW=tcd2p<K'aBA(//""WX.P:nF6dk>mY^7R#q^=o$)\Z;$of+63":2bW0@nc?>
%IC_E:DL2<@oI%+*2=57-m:lTBpL=!"rq\-e1Yp\4S5"3>F/KPG[[s*RGkedfqI&:RlIc8^jn741Ap446Jc#!$gOj.B>M078UA")m
%99re0Yd&.\51k/9H2?Gq=^HOGETpm.J[[c?iPEXUla$iZ?TPk*XmW2EP?mE9Kl1L7heoUC/G(!4SC'7.`f/Hm/^-?1S:*;Z=&4!P
%<mTWmc"t%A3^9rd.kbMk9m,@=I'0)kS#Lk==YjEG^22-&:+@'dfrA]/5!6$_R8miP>-irH[5,A,XaQRb;9R3M2m]R9_<]d6\*&b(
%^"LG%BA^I,4eD>rRPB0SRic5]`C"4F[lAm4E40htpi+VfHMc&KpnU#WH*d)3@K(DuGdt2i>CF$[n_*MhLUF\D_p?$&NJAn4]7l"V
%lYB!$]B:i=UGRAnltLW<3H<s%=g#.pp[kN8SL]t,hTftgN1AX<m*<n)r9./CWioUlF7m1\c#rW]Vrf)`rQ>%9@:=N>?=/1?s86q.
%R:#nnm*'AukLKC;Y6p'V?^f["o<i4XfZj?'\mmpm.=PKGUs+:TIUmjVIXC_bV/cLu-%"Q7H8F=J*kc@cT-#**]oS6"CS*dQl8F\e
%/BlG4ITk*hk0_&gbGjNUiYV8u@InKD^2UUP[_:TnF_2E'DE,d*GA>0QDB@+E:$3VajgE@R:DTEA*g\qLg>f;-BDV/1:YY5UjU3S%
%^,S;@>b#QqSM)V@4BkppQPX_$\]o&JMm)Foc,BeV,?t*:nSi".>hM,Am%(jlQ%f-k%E4c!Xt)0N>1ei*qI&_f3EUe%5k/1L^JsL%
%)YKr+=7"&Wim,j>P#Io0QO:EmT9m!P]56a1ri=@<^lIR*\*_M^lJ,Y4M9>Oicdh3U=&r[N\#7c/e)I'Ir.^VS"$5"Ff&kPW)bo(W
%?dbP6cC\fdT":W_2f2h^ed>-RnT+LlTD;O2l2&ka$i72AWNNugI"&!.IAEt0<I`WO^TC9rAFmdr#.'9a0<AQ1fk9&_rY>=k5'XoX
%Y+IbpeDZ]#h&&f@_Lh=MM*5XeHFGS>]RBFFC\[?>FGp]VcnQ?^+*C<Pd%3!o$\]I>Iq`]TX=TsCk-rBlD!TKDr,^'/^:^hqq5%A4
%DeJgc3j-fZX`*X>=o6T:_m8+oC)L*_e^(GVg'>srF1^.D5-d7M>\l=,%\4t#?acKVKtQBWJ$uZIe6]obl:u92cs>IW^$Xrp%pJCj
%db,<.MuNch^@UFUntXpN2p9D+W@Wk/kGuepr3OspD=;0N\lj=J]&$[H$EN9R@e!l>AZtlCIAM8blJY@e;\,M!F4998(PT'#-ei:!
%[3qR;EW4(hPP8FU/j=bdGl$c(FoLX&G?0!8FR\5]e(-%54aXj<])Cu0nbCS>c.A$-SfPN%5SeUqWjQH20.n$cT0M(HIsSiZ>2Oes
%Pogg7[p,I$@VKV#ks`m0%q"\Kc"(0\0@!e4m,q1-3Tbagj\"'IVn'^o_irm-LYc25iKNl:H1t&%,6,6N[e$-_X4-lF]<VFm'U6j4
%XH:o_T+uO]h,f;oj4/eAK=AO/dGEUD'OP]+9(CBh=g$ERZE[V;RXJ3ejdep5V>ZJ.>cIG\ia)B=iR^hMAa.DjDu/Yojl<I\B/R:`
%s)cdrF?Zn2c#7&MX.NuR)lqj3k1_OhpN>G+EP$Yuo'KTEfuo:Dp!^=hH`s'DjlYa@Y3g_;'\:"0X6j![4alqP1Oj`0eaD;IVcRL9
%rj13t>9>o0T>(>Qn/;]T(PHG']0>DbhlT++dP2eZIJ71<dJDP4LT_Zg>4u@a=Y4"5f\<Uo)di1eg!']toP?<rPs0"*Ra[aq(Jd41
%\!2mCb#\&=Wc*<Ql94##<]Y`?Xe0mfgM>,"p9p$nT=]$IT2']NS8r]9c'CFM"5UUM=g7%4k*EI+S`f@?]lW*_4l<g&gjc`DjNm8_
%XtK)]msa,^Ds_,64tc1^HdA>ND(j4Pm@ADrNqXVq%]9!l+'pVh^YaJ0B"u$gEdhDFI]=E)S3>Ud312@H4e0je)UQ`;mdt&in@^V6
%FkAm'<dJPpr:K[Lf#$4bgXGbRb.E?\&+"MZ:]&3$5(1eKpK=\Cnp^CNrV??(a32a%(T$s#&)'V<d>-??o^dk'kMp1skFYe\*t'm4
%pE)U@\"8#jISsdORnkQ(bK$7Khs@LqC@9X>c\?(,J)8>^5P\Qj+71.!qtm4b[5lJqWk:K!pbHchotD+YgA.)]+1`3U_:nELn+hlo
%6gsu3m9Qp)[f,?5AS6Aepn2r;IGB9n]Mif.]*H\WA[eF_W&.kbGua2#l.>3iMV>4>*.4.JNE<.EDa/ZBpZmNuSJ1_f>NKD]n87XT
%r8\#CANF$Wh:eD_3^)pgZY/W!A*%NRl/LX&IbntoN0!Q\[5\!++)6e[F];&L>2,=MYIbkm0#"bhf:JSGZh<VZ5r!#EGJ:MuqNK>H
%VuEisq%ltJ0:lI^Gd;[9nQ@N[C-8#-+#Z_%[?$<iP5;Q]fN,T.="i68oBc8*PEr@h9t.QTO1qui$e\V.br=h/1\9A[RQ&dB1<"1H
%:d,o,NuluTSb\Zep]!AaD!>AoD35(E?-dL@.h'#^Er>6Hh.mGj9FS;`Jl;8-\&*%#CE8uIHlL?![DqHnf;P2sgY9u/5;2$>d+&D.
%[K$.c!-I3*%dB+XG5P:?,?r[JLmL[k.")8ih3M,n9'Bmn4j$V<Q?bV9>$gs)1X,SK`/C=WElaTaI=iiAf64EH`19?9k)T^8\Qs64
%Bk-F#YC!G#DB=/\Fmg^)</ulS`p\';!k9M"h#'?,qLQ5(:q+efHma.4G-bMUaIs&*8&IBabK7oojos,p8$dV=DS#@D:3M>tO9>@F
%`q@o;?H6L<;B*.CdccSa(\'T@,=X]]VS^jfCaZM_4,u#uM(\RP"!B'O9<Ndud'm2r0j:UZhR/Q9J(a-HXQPRTUKKSZM#B%jD-[27
%f<n(*##gPT;BKt?)mNgj:[U:+AdXk)_`9Q6=+'pF`iBiobiGfZfNqK/'?4.RKu8%UnI`PuOu::B=HI[-;5s:B$(e[<)h,3G]82F&
%VtlI6c2e51'59NO198HRm/@S=`na]5ESM$@E3YJecf&s*8oo;t?Xd,miBBgAdd2.j7MXM/!>Qi6-m,`@4&B_ZNoE#RQ!m]6qSrgu
%s+b-J]e^dQ`bRrVB7?^Ma#5\<&3MSmao"-i)ju_A.m.p==f^/$o=Q,/-Np`E.plTf+4BC/kU5!b;_n4jhD"lp:qaStIl;YA(<HI`
%b]+^2!PKTmeEEl5CLh/hWlM^eSNb=aa$Be:TLu*9`.fajVUgGN))"q_W8:>*Jb*%sQl%)A3dALN!+'FTrD)ae&N3*AMuJ55H2r*Z
%,Qt'san-M7GR@._4c_SmU#enYer%/66@$A;_q2YS2b),m@IV0h#6H@`d*U$WlNg6`I+(c"'5/r'&<H3IG"Ka+ii#-4<m.,Np>N<C
%pY)1jF"\^S-8+u/f;u4boks48"];VRh*FrWT`PMq[Dkco2?r,L1*-IZB-7^p!3t.Y>p(52@^JhH=DOGI>a;Itnl$hK8m^-,46p/l
%2nW=BJlq"p"%%V21GEIO;a4$e7cmA$OuK!43F?$_!#%oSViacD?Gfj=ER`b5:SYj,(#9i7OsKap+&hVKN2[[JLr9VHT::8&Mo-Gl
%3$"G&5"78-CE+37=C2>5*()>&p.MbZ'YG2M;UkhqBC8-_==/&BGSmTKB"dV6#%[*.=T?>qBg%0C^dss(f_0cIX?+JY*CbOGKCqu@
%WAJr&Bi]o1@]aXA_)%%<82+3I_Ouqk6+UmNms<mi%2a^9bhU#)NsVpP"PWlZ8k6g7rP273k+M$NTQ#V>_VL"t1L,E_U8RBED/m'G
%"\%14M@S[>Y^8-_a$A@][QBB(^_j\'F1'Oq.cJ;eO#cK8>TF4*@mlNrBrK$/T[bb#:I'i<em%O*B'A.jL3;hSi`nL`ak/^9;*]8d
%F0cO;Y01:.f=F6CK=-^E7,=[0m0PPHEhUQ6[`ZS8o.a?:8iAumMF7hYL4L"4._qTHJs/P1C+ZI:d5(qn"b6Opp'o&]=i)]9#sM<#
%it#EY<+TN(&fp20gr.%EjmBQRT,M%?"^4PNe67T0dZnuUiHP-XkP)1)A*(5O^$o3lB'-&OHnFnM<(ejup/%=\(n0h1Qk<Y`G,nl9
%pEgcKrD_u=0?*$YJcGpFh.nIsj&<!?<]]fWQXnD:cHdgn+cJ^reub!sG*RAX$,T8pq5k$7$:FPABj,/op947ipTsNh#c)9S27jM^
%[2lf>+q@s;,Em*!1):Qd(5KH?$pUh:b#qZUc"@Ia:ooDsSd=#)ahgf^XpF@)eWPSE>uT.k[i1h6I<V:$<c*R-7<efoMe:MC%m)an
%Be4`*NQ!.WaZL;l*CEc\$$aH$[N&gmGS7r']+L&Ch'u"cO=nFq#F6e)3n0tgp6Ao0F6F]Y$;IaLWgSoh]8'VF+6PH;ohk@tAM2-$
%,?E'I0N*(=6[T=gW5m.+(ko[jF21#E%TYC+5;U8:W0$BYJ7?dCGY\GLLeadH+6uQHm3RA0GZO#iFN'!8:%cTl#&X-!#D)$frM\3e
%UG9`)m;*3.W-*^%N2j*LE!39RDhi'(j(/a.q+cSA`eoTRV.M-H\l$@kBH_2Ka2<ti=mK7FgMmmLOnOHnob+Z&l+W_FEG&Mo)#%XC
%g7(3/]LJYVZ([%SMQYl"LPcbB$4L1W5P<B8Rl#()]HLpXE8\rBBlkPNGUT1i2D%Dig%VbHLPt9t"Sp\m`bkcCOoB43OnRF!Y>L]u
%N58ELR&'"8Us;ehW<9.N)SqV=^;p^%g(KV^le[.<cb3MMS1H_NT]b8B\[>*32p2P;ZYZOhZRgFXU!X:p"JMm.'&L>CLN>I\V=!*D
%7n;q8+:nQDgMojkZsT<k56NmL6f,bkrq]F9+`ppt1M!t5?i+lS0r)a_@1]1.3jtGlG;ER#8dFr?7i.PZX0&hD.N0MD)XU<1<f7G*
%<>mf.rNPh^\M@j2<Xd&%H`qU$2="HW,%oF;nf7'HjnbMbg&OWZ%A$4^)"TK5+KX2.!B8OW7DJ5"P_J#UQS+:Og,Z@E^s3h`m>ccP
%;%02\%#a32Gi]?,8o15u7tHM#]@Z_2b)TQJA)(J5oUed9cjNVb%3_'!-sktfg5EK%7[<51FR$rhg##gppKunjD1Zse=0M)hBY=QF
%fZFaXMHlN.E-p=JhZ&=m=T=<7+iiVmkk[_Bgt%:2D)\6S:57Z9QSC4=r>;a/"-XQ4l_3?f]tp*T^`.H+I=J@)9\rj%kb]CeNW%d#
%(4pmdQRMFj,2`Ab:i`Zm(K8>f;3G;A6.\G.?r?d3:9C[WkM`o.n]=>/->#6+)e^0sD0[!IdfoHJqod.d+0DiXddn*^<+MZ[i@l)'
%5a`U@83uL!D!GS2I@LSt41SOs284_8Mr#^:=MEIC<=3qMQ^@@G>@aDj>,-i/hD[S.-i,,R_9dp\5[a=IbKJVI!)d=Yg(F(,;a'M?
%Yd&!;&g+\5:@W[hf")bhlBP!-K/.5H1g]89UD@OU<un4)NisM,&Qiok%#Wjs&"dZbD=8\$%dRn@T^bRLQ_61brHA3!=C7JF0t&.6
%+-]FLrX1fC$<rK_=V/+45:UI#.]B#YP-S%DVL0]3H3Y8"?9pL8N([F!k-A,GQqXX*PV/adQ0_;gOuJKPQ=F+',dh.>QCo;T;P0J&
%9mo-7WLQ`FF=O2,-Dskl0lQS7D9^WO7FRV5iX)\_OII`[ZH[Jr`E#9kNoZt"1C[VE9T](4I/%/!+DuHL:eu:8ZS,6iQ=;V5AI@),
%5eaA4e8chl@>^hrf4]A%f)\e!n0>.@R>$)pJp_Cf;(]b=+iA]i.]UKrq/T^\@+':.gJi:Lal'BQNhr/*B)lVV%X##78A5H,Nh\Yb
%Y\PbD@p,2f,)VB]%;VElWn<`Z$p`,=Lkgt1JZf2I0l4ls8nk`O%%D&N`F5XhYC!bGi5T^V<Z+=b>X2TH/\VSVWhq9rp;4.T@3hp[
%(P"CU\1f!YE>6:pnj'(O/!^NXW9.8AXK+$'O9srW\ZhB#YQY"A(01P/F_!$-kd`aIJqu&E:]Sko>ft!Cb!dY`Tj-@T2!6&!6GB2q
%9sF`?F"AeVBo:.dP8XE,Fj)\8/^l#/3ejJ]WIW'h(/WBm"-6jLh<U/>6?<Q[+#4F5PNQ*$)A3/1#(l'd9[8<O874Vh!MbqEcP0^s
%q?uVDaT8W>>t`_U^+9XFJp0VKAi!gKe'rZs<]&XoR5PJ<apXUUYbL4jSslVY%q'`XZP:<_"eKsk49lrTKjkl[E\7i`_$SCpU2.Pp
%T_PIS8/M-U"LCo.d4D0)Q7?YN4nu&]GS/k/?%^FtR6'iGM+$^RZn7LqDC4'W1?'Ed&p"GMp^WNH(RSg^ebBR2h]6*EQnCkJeI<'"
%TI)5lm5'c>dMG0ed7l+-1MeFBMl3dB-qE/hQ^S4rB`L=SaM1$_YV2S85fnlaLm8pYHtma0/A[^\3^XZJc08G7K5uB$)DJ9OZrFep
%2QEmXk%LL=)r9#u@B4fQB"R3cCBGbQVA<%tJmpI!]4dD??*E(D2EJM3:6WOiU*\hNkG!O^>Kf*sJLj&%k2/%#0OodtR,g4baDaiB
%>>U6UFCKChDFmS3C,&Gia0^CHJJeTQX;/N0Ndp5ZU4LO2=_(e.q-9cE]9!+Xb`+_A6b>KV[nJC8oYb^[)j/ZJTrYGs5h;H%<9l(b
%`-".FMl255V=.=AL:+NNjpap[*VMpr\kc5E&C_"to\1)ER[l51bo!"XUCc\fHQ\h'XN;`#Z9cK@`0[/cNsPBVA.GZ5eE2_sGoh-]
%)$Gu$'`^1YbnmpV#6/RlcYl['\P7XHo(c#U]I-ts%[pTK0IQ->/f6"6951OkQsfKQL*dP!)(=+65t/[@@$+8iN0aTUPh2]97\gA;
%W%Iiu3XMjsZ7XZBG0"fKms'H<MSm12NnY0D4//^'I7-f_pL`d(&+VP52kPAB#SPSt>_aM-O0GC^7C\?jQEZ,h>SgEAAtue>.V2'$
%Oc/(hMB-ESNcnl#Qp-%9*!aggG%(?=H!P&3YMWG]P8AsVbS7c5Y+8[,`&Yb7RUP_#Q0_;gP.r6ai4&/\V(i2=hGq.2Fk:tA\7O^k
%f;734A&AqQ.Yd?C(?U-YXf7\_>OW/EF<.hTn;F>^Y/PTLKO?R+L^<%?=<^G)]O)jVdpn4ggX4I:pJcgB,4$pN=O_6(G<NR^Fno((
%DDKsgpfEHin/8^EU]:Lj@As_Q?j:p5"!,V4>W($4.&E=YV0L,]e1KllY2RBY+0sO9#r(+jVh5GWqPaHf"^!7imO3PJp@mSVh,JZI
%!(f)?dP,,7V3c%)9(A)1IJ&&UA@(8d2FF`,HmQs(nHO;T.c+(nQAW-SLc62hAF#OKO`S`e1lRVTFiu\jX>DM'jT1R4X+?ei\Zm$P
%BI62X\[omMb;<;J5sh891I8hZ4jV+g4;T$G[UGiM1/6A$<*-t&-r&;.gJBc!Dj__8/0=Qjp9!UVm]b9_#sR.*ZQ57?c>Do0Wtkn^
%WK%Y<Lt+2./V^Jd'uRFL[2B^F+QicP)"KX!PJJZZY/XAER>T8D'q8qf2Z#XYG8-Yu%:(ouJ`'#qEiq9e\-3Pt2"bs[+VeVhN%dnI
%^t[^XE3726K,`K((b`L=@=R5HaKBW7+dH?4lq3$!&r23I4`\3&Vq0lJ0:!pQfC@jfo#CpUS][R(rhT,JSf*,(p-Md08Bcf<j;+SZ
%)@=jU9;oVoC7F*u%8N.qWC0B*=t7p;.+,u0>ZX!sYN^qd*V\=je3N.F3cbam[Ed++>Bkt](8m_T,IN+[@s"YQ*g!7Y:4pZ`es+a.
%H-2T(W[86YL\7q(5,]kV>ZXX^7;(pCgXX*FAVS90*t!?s9;_+UN`7'bU07%\\4@S034MNFng&Ie4rubB6IgPor#-/'N9PRU!1l!u
%>[,)r(-#0YC'/k](4e0SNqlKmgPP(Y/jG9UlDDEt`amf.GS?$GeX*+@;_guZ%7Zi,Ke!L^:#Z"IBJBkq@Sk4Un6,glKf_KG<^g28
%N32_`1#<7K"W0X3%F?(U<]<*f*dd]>bhH;bFk%\W@sM$J(WT(-[ubJcgD=2p%bFQPARiOo^78L5XC/`a*V8#N#A*#8j]$aiP,cE$
%eZ8D@?3`E4SP%UYL0hR=?sIu6^$;7rHaNhB,2:!87=Jm0M#Q?>B%\<-$kQ(7X]V`?np>dmIDFrsJ&B1-N_Y9Va6fqkau767=(Xd5
%hGU-fhPit=i]!*n@<\)+^]ZM^5_$hV*6aC^>fsIp?81kd6<jEOV4;P'ACL-JPF6]g/m<[-rSRWX6*)_F4a?"H"U!*B"kNtt>&\mt
%*E*kT%&O2UX3m2`-EMr0.L'U>1HD:RLP`U,OtB)Ui\!R_M1;Wu.!Q*bR\iP;LpAAbLCMuNBdW+KVLYB^V?.UP[KqX"hm$h>Dt+O:
%bB0V?dN&Nk(+W-rb9+8=n]hl7OjVuV:f1['GE7uPQl)f(/"S49'>g9CF$`7#$j@!rKnH6TjE-L&[ohnt=_](%D(q)(DJM<d8mOA(
%KP;-mL(1h!r7X-S_PRa^LAInrCRJp6,]#N1W=)9;A8sm#"'J=?jKO&EJrpfLJZ&<QieBF^!l4jQWYHP?T]q$4\sZ$1"j)29+l&`1
%_NJeq1*$R0\/'--.[Atl$r:I0%:cqCoQ[>RF$d:fFAtb-9n%qiV-+/H%?!QR_gE$bMJ]s&`nG)>U[l<\\Spl"17i7fmo_>Sm<=Cr
%pM7Akjp&P239^Wr]%rWhGMT7XHNtMbQEIhrhK?_AHnb.lEEfd)U,Pg;ZgfUn9/B:i:-'`ePCnjRQ#aEYgC)hRS/WMV8n]F_0LY$9
%9VL'Uj6O$jl=\sb.a;S;RX+;DQbrE<U1e;7rD??EA>V/g#B`@WD_H5L\Mrn6gdl0*Uk5*u4Ormii`Y=\Eh,BIP&!RX8=C:`+lP#u
%K.\Ec?Z[K_5cVof7Y`UE5.mO[(N0G2$Vsq<a-/%O?'GTpM_r?1%WVDpXs6ac@_.TPDg!/?%i.a]Nn!Ddc&P2oTSB0*MW5QOkU>(3
%[cPp\H%tdd0TAU]$:YU&MSh8&P&9EO*>I$<Y^?#V4GQco'XEj;VC@tUp_skT"0r(=,I1l*p&=<N58XD`1$_<f)M6X:]g/iVYcbhU
%3dSj@Wfe3+U7ehi2TgP%"8\"2A"4*_7N4?s$'<9D9-dljUq'O-6+l/O9q#;$F%On5>;s&uCtSBC,M+bL;auo9W6Ef0?p6^)cXX+S
%Bso"HDI'peh[N)rf+"tn#WK^WF;qN9YU1j2pk@Mr<.nng^044=LEQoth1EMVRBVu/gU!lmYU@Z!qJ'/qp?k*s5omZIJ":@[8%$k`
%QS<B]/WEE5rfu5^TqUBb'c7]R/k^T"&&6R11FOl@kn`)\9IXu74GBlJ9O*]2X77S[hP,hs_<WuBAn1g2f:pf?9"%9ITJK`1!0Jr^
%k"]hFf"2`-giI:IFuhj*Dk6*#fIacULUM.>'3B!K%V(H(ZU!k'Or!H4b*5Wu)6&MJNhTh&&nT%QhX[Ap?e+OZfBr#`W(J09n0Wk&
%D0KeMfbN/o@:NB%PeF9EhK2nrLkQ(D9aY^jQ,cBQEL04aUsDkh&OT'gku`r)19$qL9$*!Pn>.::2+i]@.3Ub\X#WJ(:4cfh?l?Fq
%0tjWaJX3dhd0>?sg+N3.%Ja02bV8fb*Gq9j9;I56R1]]YEhjVbU8^T?ZSpmf($Le9=3Zc6B_QWb<-*[-h#ti5e\!1Gm2G5i(2fJ6
%9f,Z_%H;%7hZ1i&'/N>]#$+)FR7IqiM1f9]82Z.PG`,601^.[C,HJ#:'lD@`lR]!s"t_0XUFlAO3*K6t4_<k^ASFe;,:r4C;3p@B
%jT7'0P[HaK8DXcU!T/bMM5B`r\fj^N.Z77>.8(@cOj50$gn;X$PbhYEAa*E1Ban3[d@jX/Bp.4q#$ne!#WkbVa?q<f_DI3N_tPla
%MbFg!9I_*oIF[+dMf)m75rCT70gW!!ZaJP6`KOklSK'(K?]Ch!isK&9edR9&(R#_oAib=K;R=0[dnNo!CfOD5M_;Be9G:4LlV;'>
%!\%rqiaq>NbA]PfJo&V,9ZL]9NqC/Rf72E.\!Da,jfULjcRt#-<u%']]MSN0GMhCa4dkSoC3.2`%]6c="A?lA@i@)t[mWoeGMi,9
%c<CRpK@SjV/-dg1Yq8H&8=-OqI\R*Xlh%<>ffG?-g_Tfl1f"3&"heFjeLfBL5d'[).R;iW!L0W3W6la!D;M4*=r>n0?oCP$'jn+\
%ir.Pj3KRl']'@q1lI`&3"+VM`EBhlN/6=]RX-Sdo%54-R!(@]6jeI)JT)N_T?;TIb'kT1[5fL@\6$u2BKb&\AAM@"md<9WE;VaeG
%a/3e&]Z\2Rl-71%=,VV&f/OnMX$@iK61@UA*s6)72U,2k!=%!"@Y(f$=49Y0F;KZ5"!Su?nZ!Ch_:jiXj_Cr-35B$^@(*qVWh:Ee
%QDGFW=j]@TeeOH)2GbCu%$4n$Uo-ai!)]P<!'F9mHa9#uUR6l<,dW56IS0gSXaP'(5s="Z@?Oc@ZdO](_iAN=:Q]c:W''+L"B0.q
%L.&b^?#JG';h0?LF:Wn"$LCKU/W*L0q:a1]%-_GoKm?A0q]p]nOm4tU^!*bkRQM]a2:-J7#T_"R$skiGlU`qV"jsB>r5ts/D-^^6
%84-uW3f<!P!/8r*f_PI`Z6PV-0Of>T!`(*11?N*(.t"C9SVS)F!XfOf%<ednGAO%l-Ej"9hHP7-bOso&JGJ;H#+V1\+r>N8KMmhT
%B/)'lQahbH+t_E'HOAH?XYTt2aGVJCI4kB7d+Hhl9J++3>D-_+BtjppgrS_0NS_Q%"V=HiN_!Qo^;ND?FIVHY/G(1eDG_/?D#pC6
%ku0m5$E@'%h27l"f4moD'qUt$QRQ!@!m:uF-#Q(Kii]<=.t69@d`4msekW&;.Xg_aqH/&C9estlR`&.-+[cnXlq?,goJ,ajY5F6k
%F_X2<=K1_P8tT)ZgnjYj2(Kl!kXt^0XWfl=1N<l=AI]u'62K6&p=lF)*q,t^_8r-Gr1r="'gK/ZIeX<&!qE$UPo<8'1uGkqfU)B8
%4sF2iJ%LhTC@MFlb#1Nj$E@'%h5-d=c#gk3D%-<7)iPN/d]l)sqTs),T+1]u*8S[Qgc;1"Q@a=);1dep.=nr0X'3M^<;oHJIQ?ss
%9.]5j]&GcR,G*k*?U698OR5o^'r</Jn:Wa.ai%KZNklFMPYZBgd;6J?Qnc7]f-G#\rdkDl_ufP2+9?(bFq,C?YnD;D.@PfBXEPRT
%"An??@lXa\a/YisNiit"^pJf3^:0aPY3$jaWko1f^i4:lA(jHVh23KR5f&Oqbg?5Z0irAb*ES=-I97D?49GlUBK#!UMN+fp.e)&5
%\,_2:eP/sCmVnku%7L^6HSSh0"4\M)6O7qH=-1HOb(-%)^*aO-j]$CC*J;D"8@lC2*jC32M40PbkSC\4/"SB?k_+kmJZ"nEQh)E)
%J=?J3MnT3,gS:RD'+=C7O/O`42;<'a)mALF<D.<?"5k+bORZ`l=61+_c@T86,Ya'>:Jq7kK<"I08$`RJ>\m?_0(BDc0pck_q(k3O
%_O?^bCE+aRiF'=#854Pc+)f\MbbuM#`A8!"=>PL#G?f<cpZj'!/isqt"2h_WD=sHq*.Mm!)Fb?Lft*2'2>O<FnC;/nQH-F%@U1<3
%3h.<#%O=KjYsD6rVO3jW1')!l1ij6+,B`d^.d(X/"b?b/<`;pEAu_B!b5'jDk9*`k%8/39Dno>,Y9e<C'9k<\Q8:3Q/qXcKKHDZI
%)JKFue\$_^r\f71U^K3oj$sXL%;MnOMg%]Yj#lh&\XHtgr*Dt8eECIhL9C&K4e@GOVLeK.=c-rk3DdpNMaC,?0r\<S8mBqY<-6^g
%^q#sK!*JD>[W`\,JrCce5RW44T_W=bSi=mCCrNUu4bMbqb)O6@ha*OPeM7PT<%928p`2LO*'1j[1+W_+%Q#!_aBl,dOD4!;mGck[
%_mV,/P1,51.W[(-/I>]Z0Yfu_FpZXTFY.Vr--O0p=`^m?jf#aZnAdLO3kS;Hl+>-^BW>t+n;bI,+,I3[DY0,Aii"W;/eY`bDqj3h
%q@^*dBYKLDDoL)=lj6N5P&j(sSO=?X"#d0m4p<KD$k!pHWHU1!^et@&:)0uPW#hX;],6W9,,'c)D]gc+aPE_]H)j:"p4?fpeO])N
%<4o'em>f0?[4P$Wj6%J"nJ3oQ=fSN9G]6M]<>0<L5i]l"$Yj>c#f#pDOgmo6jht(jl`2Vc2SFN:U`<I4(*g5l)ppSDb0N]b4nC3*
%=\q0]p[@T'RrNi!K>MMZ\ML7frc<srDtsnrqRUE1B*G+_6bJ@aF)CH5q*iObK3;WO@TJlU^%UHbAbXfRF>,4iat^lYm%^uYNZHM*
%Ic]/dKKWh2J1RW>JNGTi]oP0(ik4tKSJ?Wda$m=[gndRqk*.;hllBiL+nksoI+PqhTjiiTc7E8h*n"!B%ZJsSBmNdI87<Oq@^NRT
%#Am\RQtg'Ur$aoIedgY6bQam1=LY[=Bj#U?*H!bU(k7UJfM0s<>pS!4K$e!V.b9q?-WkT%p^U@>kJ&m_fWrtf^!pdiXgU=!g+:Kh
%'rJMM"cMLmNhu(6dT)2S4BaD^?LQ'<8Ie0.(m5W9I$;01<R`Wq&:1TlPm(b=W7^I&"I>nl,[s:rQ^RbDXOQ3nMQTp#h6"T:FrW9>
%_6.qU-*md]$HqA$NeVGE@BJOKZY36=d\O)k6!UR1Jn!%[&=C!D#VC@*-E'q)U6<)&jJ2LVFB@F-mXE8iBe!$i(SbZ]r;)6Ca%F5+
%r\j&(9u6>1l9LB4Jitp(]<Q:L^:SVh"0\q/0m&c@.nN#4>P)Y@$pJ8=?]&YeEGZ(jZbcE0^iVqP(bHr[Wd%;s:['Lg@HLrs0u%cH
%^Z#(.0^)S<`E*B_GJS+7Qkjut,L'e:SdsJOPcfj(OkPc7S+F(V$q9@2@ql43:JDY88]S>]`pgC<(=NjX?*OB*C_p2IF6U+jJWpR7
%+#Z;m[tUt)CqPi$<ASQo0HK6JrZ`J.;oC%fj9l'[>k36p#1D-Y@$u1o(Mjg6//$dU1>E[r1KRXp`ummWiKt)`R&t@F_c7,'nI%&\
%i$_%%2(+i2nGCII$r(1\9PBgeDDY:9@D&7;&^DH>a(t<@$m?.Ne^<UbXC,Q_0SGiVU0Y/@=$oT5q)J(mLql8A[>:Ld83nTnD*/'>
%?W;fCk9.Ajc<aKf!.^I;ObFj!*rG<^%@E5k4,WH`;\HkVb[ro^``lYiN%0$n$qKKKn<I-/#$0J2^*V2=>rd/C.1^>%<1%)tK-4A8
%!2OCs:pF9Pm$PmS.ZRukN^\Nh.PRR6iBn[);\;jW`"N+R#ZDR:Qa^`Lr),le5]TSa&Z=AKB#]T?cN'=b:(D`dX%agI@!%T`H2()k
%6r0Hf\f;<?0uYp@98JsiVAQ2q>ft*2pUGAg>tp\'Y06&AE^2H;at@+OKXZP6,>8q@&8#s=0c5qpq]MLujuU"T_BftVWes)_"L5#[
%]'`nIf.=n\5d<jDoOl"mS"tT;I]bhq$1!agMYE-#o,4-20N"o>RKXi<3+?J&#+:=XQk$37GkGPlT>QC"^fhX@/-E*oRP&!f5X?.\
%"f)_aY0MC4_]Oi@Xh'OZ^cG""]K"P_pq+B3:"$78&AtIAH>&Q[Ah^o'L('h#F"gh*TQ2C-q#.s^kfP^k6SOIMQ`^icChn:M4==oO
%^?+&k>5:`4r[)<K99dcl1^AN4RDoqg+fc'Fl*a&X+A*%i+?TcUVXmKoldhkA/2i`Cl-)YLl&*@iBq+'tFa9a,!AXp"4?rsie2Y5,
%5Z1Z``Q9@R<H')u!#SMf0ZUks&&fDn;F7ZuYbXYTAd]J!RMk4QBR[a#O]DQ*N'\XC$fW-=E.^'ia>O;NBS-ahLg_L"Q7`o=()TB*
%q?*9qnC>uWR<khS$P9O=n-nr!_eNuAk+rAEXF9C6dJe!9Q&8#f,/6$d/Q:t$b+QWRU1AaGPl*ZL$2AeTGS^'kg"pVJlRG3dR<8'\
%[CK5*412V;Aoeo9")]NfCtjoi.S:T<X<a(t:]4U&AWM58arSU(Ql@!IUSf%MWME-4eX];^Ej\G0j_@YpMGhk]67)M-^K4=D'/$N&
%F\*>>@-0ihRS'SZ;PfQA`qpT34Tjg:TN.=b.nL&f&J9DN/].)"6#G?gn$Q_`E'VS))]iE^9"O)"Pd)S[nh7)dnAX_+<W3GbL->)I
%%Sp1_KJbL#JZeFZ3?]4e37,%Q#$.SJ:iYX8mI(QG3e&`I`]Z\RE#aZ$T<VZlYr-Q.")j&'6?.XdTnuEWkS`7a#]%l.JAtq2-5,N1
%_T!cW?-<tbi\rD,p4t^13*A%jolj(@9o\ZE.p#g4]DuSD>Nl:$PBU'`GhFc.;ag"XL]h\-au?IPTj,$lbr<md4&2!/SAAr,mg'U6
%W2JkueY!nkY8(,^!4DTGfAW!"Jq?i9@2#lZ_#,L6/FA6K7hl?WbtVAiaMAF^,$`%;M(l@X]OuAL)9h"`U=194`lR+Ri]U<>3VPC#
%F796`H8KJ($/Da@*F7&D*\`9p"n#1i4qen?eIBte'H!IgE2/KW\@>>_f3Xh3)^.N$E#ER:86_SloLu&P`%1$`':"$:C$5VZ[\;]]
%+lS=hdYQ(Vh/kMoR`AB5/rU7+G&@%&5IFl13#'S/$(E@JIifi_'[q(*Hl64RhtX/PLC-n=k4I1<8Q%5jJ_O5<Yt.SfQ`]7+4M_^)
%aIa>u2+(JqLT$4(Wb^40DX$QUJ8Q9lI7#(XG7t6_((&*E(sWe'AWf`=Q'oUcXN\ofR\guY*@1cAN7:7=V,daM7s`)nJg[K7_YP(S
%1)kRG>0>!;7]C"22#8hV7)7ku^oSGHH<1j=:aXotPOiEf?VQY.7](h[aQp(-Y00jg0g3Ap0o+ZnC5/r>ApP<'-gA[[PYR:]e"_+K
%=4(tmQ0I'5,8.$':!arGlj4$&XikWr&#t0^K/n%cCf"%UF^A#mA7Lajb`o4b1U(.RO8PF!?djt@RZ%P]`Oi#sNY?#@9Bh+s4<]GJ
%F5Bq/Vlm&p6>rPZJO/A^(7fCcP$dC<!IqSg*mN;AgAj;I090OsWDcW$?RFf1D;p94@D3*ENdNp91`u'Z9fK>>YWE9\@i,FfKe:BI
%oYV[0fD1?ZnQ'*?q&O/PX:\O?U:j"e,\6PEAsjY^;X_qt84U9!L1f^P<^bHe/\)DkJ+h`pa3pJZ'Dj;bCg8(n1_35(]F=GLJ.4=D
%_lsfgL4MlPd,!U=p9-Cs%MJHSM6*Y5W;<grSjd2oH!X>]78X[&WZ2>+P8I@[>jpr?8gE$[X4-<sNq8\tGMt=sdEO$59a<#hFLK]f
%H_dDe>D+:`VM6hQ1&>\Z^rCAi/X$B[ib5]6:K%JFi<+\j`W"qtdR!F>.Q-F-=.](3i=ce:,M],9j'0D(F#4r1/iVdY-:T,+E23TO
%>=cNi^831M^-_3%fN<*^_'ZEAhWRY&T=AO`Y')#H[-%72ir=<>Z"E_;RtMlkErr0e3L/^L'DfsTfFPO%IPc6Y!q^rdlRM9$54Z9g
%kJLp!n\4jE?i@=g=$I;f<R-RN^CF+hMK/Be81Z.1EBF^U]IVUg`Am9:HJ'Db>W,KBbn==rK9[^Fq!_Y4Z7gA\Dfn,67QMV67Gr`m
%1I196HOA[!1df`;8.rlcO3=@DW%9G<N-\nHni$se^sq>A_L</d[`"=[i'p#2%2Y,$'Nf_6DW*WKksQ>M>!8"rEM!_pJLb6>-B;hR
%<Th17!aSYLEu^Z!VkUo`,\7-o1?o&Y^*0/l*3D\c%'9hc5-If`oYP4n;+g)^NJ$2+=pemo.m\KEZrs*Q7RrC6YfHY:fUY7/YE^7s
%:5[6K^sL9IOHO^%pra>V0E72SWH5cmhXo,&QeFV?/iE?X=k$s9IVdcRlF*h#X\$MpQ!Z,uO_4?`TRHWmA&m3DYHNk;HB%goOB`=<
%ooNEc/\.0?i+KaZ>9qa\!ruF;aO6_?Nn+o`qY*[Z-,[3V;+752oqkiD]+u*9?&jY(87.?Z4ebC,$ON.gn693u'.bV<`=+sQc!qG<
%[n(aE3#mO7.OS5I=2iMJijbKPZ;IY-S#Z,M1+m`IpN[4YeU2.qb_1%p;8]kAAt6r[%+jjr`Y@Vr<,3SUfir1):S^0Koqi6Y<p0j^
%)t'#37$n(emU/s.W&lfek`Kl%k?Tlt*-gO;CimsDAE1o(7P2IWhs#\V8'k[]hF_12p5JKr\B+TQnJfaIfX57)7UVFu7'kH`=?DVo
%;>@F]3<D%p\'W($^K*C)k/;W\`WVq*eU).(1+;Z.!hK;bEjrK5'JOJYp;ka$4`ZGs"].ZBJK1(E/EPIA43a"PFKoi$%bfQR*L<0"
%P(Pe,Ob:O/$i(r_Y45!8`A'iT9LlVIS8]KD3Hr$4`_Gr>"E(P5hAPFIk"tl.E&KT"nHGhg(i&<E8LsR'3_6'AHC1Uak<#,'7<jIZ
%5!3-0BV\OU03m+SS>lU3o?UXQ1m@t7TE!)qs6K>R<(pJlq5Wle%spf0q)ti`qu?]gJ,e.#r;)KSG27Lo;`u9^ltO0m&+:nq^ULN<
%8%P#d8>5e`#!Vs9U%mI?b3p@V5<RNsA;t0>Ag.NtB`"/J[o+Q0=dk!GN-mY*gB35^#UE?RDEGV)&sD<]O4XYKVfUR*/.P7i_Zp)X
%']8sXnltW?[/gW*lEG2>V4T7CjW,Ko'&o-eE^WYPI_5`Np89P#(;;X?,e/Vl<)Y\cP)$2tO=#AN`b88dn1FK@7&!Tr81TT`Q<WIT
%-/@1)i$.&Yr"f[A"+89(?%A2Z0/bQhd;9/Ge66!pYpO;g!Gm^gUPMHuN3&O>Q]R1@JXcns/+.'g8NT;';5>O(\R@T%%1[8/D=kO5
%-uccP'VFg=UaQ;OTd""cJn!,^9&E:[a+h4c_9P;&GW.[1-eXT.iDC+VXP4Ds9uLkITdd;,h39j/=>u.-6g+SOQZ3atO<P9+T91#]
%>m-SC;'li$.Ee_Ack]jk[X[;Bgj3$Il[9N<?Ut4&-B(&I)N*OlnG!g>,KrjLg1=.rd5ck68qLif5g5%]749*h.iVCmdhl+/*!;d\
%EtcE9=#aoR/A*A_#9CW*UKWfMTS]!fncW)_Eo_s#l>%$/ER:NAh3Q*;is)WWbYCb7cY,tO,/M3fFR)$;//lSmgCCo-((60f@QI;[
%!o97@'s%7(>Xc5AK3jW6n2(PrdP*Xc)d#tUY-*/Rd%0I[-.BBc;r.h$`p>oic;YhFD8C15:ln"VGoD@P+1Sm%DRITOhsEr0>o+rX
%OdkalZuPj:s-G0^+#LhY-$dcN_=&bK=EIl_]UHTJN:eui??(p4pA@jP&$)ehEO5/rL)S#+KB*lQ^Ib=F2VuHVd'7/%lBTcTd=tA(
%j#F,?m-o)LjWVnD:TPXkM;p7&?09)E8>%o8jD]4PPtKBnoJ^WoSD7]+j`%7p^AM_1bE#X>S]MN]F)BX@Hi<ti2YO=:Y^L3`da@rX
%Ykrk)qY_kba85c"ot,j1%GjZddZmEU)618K%G%k"4]h<Y+uO_+U]G6e?h_XZ7NL$PQN\Ok)W0cC[o[g'qJda70g><B0to1G)!QS>
%<I&kYc/\N6MhK+aa5`$:n\jsa5L.[hc-*=Y.[eMtI6RtfQ>`tr=3.WA)_#^??A<S`O+'cWd:)]V@.KCf%iP'gbHO3If\aPf1@15t
%$E:"tIX+8p-,7/L.;pJGneXs1<'Fn`(])#djWW_,;XVk[gA)EMMcpTj?N9,QQ_B4ks0IrfQJcd!33N;`\295f_1-psr)!6\rlS*_
%?"njgdB<_B9$s!NH-sX(Hsa6rk$PNeX7U<(?P6XYgqSu]]RT+*353*slaWgKO/O.m>qu)F8,fd,?bcU*Q!YFi9CIoN"_I7.].l-(
%9&Kkl]2;OP8B>7rC70./<k.GH%,ids.JhK^IT+rp(5K)]J!H>ed_">MbYm`$I+_C)p#/@=-S2)YD]MPIbbSI+5tM/(e1iL<#[8Y,
%+V$/geY838ej'T=CUoZ^@;d(h23"GOPjY#af<8K)pf1P,9(-s'.\R\C\0HDE'Edp24bAlFDAC]*rIpY)@joON]&J**n=9pV+T^_?
%>nKEa=0WRtV9:o]ncg76</1(BB3qt8-e$p0bHLS:\iSQ[#%M#G*IigK+5=]2Dd_)Y,i%D;b^B%Q+1ZKZl*MJHcD9fBABk6@'<tVU
%I!@%KG,(Q./riEYjX_05iRYRCOeAh*hF8+[%KlkRYm[.FT2mqL>+GOl67md2POt=q(@5j;SXtXQ&hIDEM0(=($63lX+NYm<5,O.S
%B;HbVM*k06@Gpg#[kB8s`#l^$a0jGVN9G,%M.E#8[CO)+.ZT1@Dm[X#Z;\&T#Lb*?>Ac;^AY]tRe,"WLS6C6]IGA!;YsO5L(aP&W
%aW1\Z:t_XmmF>r8JCTT[maj[PmsJb3Yee[WU5Y(?::`]%CoF9Ei[g#l:Nd(!W+l#8J]dht/]V(OYKYB:9t4cjqtp4I?:m__br+ah
%'"pUTVSM)D>n_gb7?O"4HfWh&:&Jci9.O9"ksD)K]YPJceuH6NM4pa+.'of0;e&oenZQsP\P"I.V,'C:cP$/uV.7Gd[le5a_,c\#
%<:DSs'FR<25G]9TCCp5pRZ]drPN[!@7ff;ek0Pd>,Cska597hF2&m<lBR6O."/E=2*>Y9q>e<$n&,gGP$4:@VTNDbHOb4F1jg8Y6
%4LdEDKD'G[p/B'Q2Nf^Q<bqek?5AbrSd\=nVOua3Bpm9M=LhZr]R.9gIWCt9HbGAG`8OuXnV\SQif1NSIbM`\4nI^*q/OaY-+_lE
%Jn=%9.Stj_FtPK/c9oP)N_ArSU!R4UcE:\<:IOj7W+bf@ZDre.F,uum+ZU[<G!g<'UFm?uj`Nr)0&G);fZ@:J4bBkE&hW-Q44[=L
%U*Sh)hhhCS%FJD^Hkld]5mN^_$J;dS1L*u71tqBK5"_^<,YEt]6(CR?b7i;W5I"E8:\tC7EQ*-SB`1LO,Y,tke[ELfn^o62)oZI7
%/j?E:P+(6GG+JKI_'+ZF6?])ME0<U!8,8b`[/]V)0ss??m0a=W=plFqnqPW:DbIfblS6)Nf3W9++6)`4rZ:(ff+<F]RL>2;?jiA:
%99Q.lJfLAG,C:uY6Vs$fgNZ['\)MD4ibko?@#bW+_eJWE$"GG;#W_oHSrYs]N@ac(Y*Sgf_8T)<!04l'bc#LZXO.j)"502cpmS,^
%(GrVejZp"%N*N;Yh=pOs*8eL\7L5OhndROdZSsi`2mE>sUh([KfQ#Qqoc@ia"hs/F9-KNYp`c3YUiNfX?aU[QOq+!'N!:Q6j&JT3
%O=Fdt;CLgKh<>V/`(:bHg8WAsA>T)Y#IgZ+GI:5Bm$mKNSF#&mU^\Ph1:3HfoEDn';SJ,%qNGGU/"'<U@H3FZ%/-q?O'.O0kV*a<
%_/t9dn"@$Ack@R"G`l?$1D/qQG1PMERMj^Cgs=Mm<)5$bL>-p[JKndcXrcUYqn0=H'H&tlU.7D%HrB'/B6$]VXsKR0_rlBZnm]**
%Ite1M[4h1GZr;9Z^rhmH>0;OT"aHMXUB^YW,>B:<]k_g9r=q$8%?BmuGU,Lc@rrueV#)"\]8\tg2pnrl?P]Dl%e[c(KB!Q"qBqX?
%hscr#KT@JRaW5bTU*U()c"?G/Q>d"i@4Quo0SDesYLGO!&)=,r%D5bO\Xn(<jdPKe_!eP+8<'-/FHFQFT=;rAfShDq^p.n;j%4+P
%Ep[%6]CBqPTo7bT(Xbc7qk85&**VEoE+MT?^@_aZopN>o)f=PA$bs-I]9lT_d@j3o>qHr1Z-d(5RQQ5pGW5P'mo$[=7kYH1!Ip^d
%P$='#Hhc[EGtK)pUbad'Te1.O1-uhOfmE:]mDAji:<"h[O=I?q"`:Z+P[pk$CBfA<@8:(F_<*k.cb>a@B:8%O@mhG`K!f;%+.gWB
%M$.Z?4aIZgF#--ES+*8D4B`H9_U$8m:5L1\38lH$'kR$s/m$6U6J%[FYcHa/#C$&OY*EsbaBgc?p]PFaCle3pM0h_cU0WuWr+<XW
%r7M\JMjtNe,DpRt`#q+2g8G\uJSb$FEpEotQ7j*OcI5eTg\""FdKluk/g?)`MpQW(3*-'Z73F4gg0n?q.ue`'nk7VCoPhJGr8Ufp
%USNZHo%+jQ9#:+CAIb!cK4:4kADJ'_TT^[J6*"Pl<b^N:aKu"7.'((&L_L!fc9io$[n?6-F^H^HM.HF:gYo<I#SBn\ndTD?AB-,1
%gENL%[:SR98naJ@KLRXYP3\o"WaoPL$1bjlXE&u5Uc7VRlI!0"1q#A.g8F[a<ZL<[Fmj?.V4i7+CD!;8al]fGO4k2-?$6k<;rmW0
%?0<&i<-2'q6RZX(^YNS$UAMTmQ'>8pfFs&Vi+."+WF1Z(\;FSa5jqkf9HN6]>;MCm-$*k'i@Rm`F`6*L6l>Ql4,Fo="p(`@g;DN]
%XOFl5NHCpB#4S.P&^]q'9fI>gV`Jp<p#qf[SejWH`E@1M0.q<'/T0>qg5NW^s*Sdrn*+!fa/J@dZ\D9lb$&Lp[,$UEZf2b(:#PW4
%FoV$O1$;-3^_VS.U`U'tC0*s$Wga_X.DR@HM`4-lRNU8dq:@GUV%'+i"UlAcQfuUg7sul[>rVdeY,.&Sr_%(!e?1I1b_8H2Cn4pU
%S+kT4^N;*s[t^s[D\B'd9Sr7i>:_qj&S!#Qf(@khj\6XPAoYaU7-I^4UIHU@a;U5[L`BHXkIGSW<d[Y"kq*L<%M2oHPXNHuXeR'q
%*?q?>?=;4P;1nQka*7_36#=m.5JXP=AmA%JSJDc)'e-kW)B5E1[K)dLCKj1(gMq>nc=hUY"[Wq]+j1T,cH$1*>Ci`#$W:q2<i85m
%f;/J<X==:Sm:$aJ7.JV7WSdJ?IqhKYjsda6Z;iG/MV7Dlrd6Z`0,.:5PHV9smce.irAb27pn#pDI1FTjZ[2lj89n,6A(t:J=B[-\
%[l5Qf>hn1&G/Y/1qI+Q4\RKh]r--KSF$@,4Zc3/u+Ef()1UZs_BA\EDqb/iPWr6#+Wr90LeoMV.lri]\:=!Ep4(5N=#3GaSMs[rF
%JA&M>Gp(7U5KpCaRBTIeqr(P]:VV=Vg(1Q^20%0bC;8-W1MQ=55peYel.;\gSojKN73-al2tuPQf>QHY?W5BJq\DWfZthc<K!)dN
%HJ5CsH&bK9>0[R#UU:Ffg*"R5EO4*)[b=Fu>/7U[kG0`cgufkgr'4I\M1h'$qJK/^_&uP!DL;e2T7C!=',2cTlg7Om-#oI`pCJ\(
%)qkUCO#E\snb0%<?"VGHJV;c*@#'b.:V3)Dmc%8ek!%f^=4?/"f:p6s]CF4=dsY$DW]3IZ0;1O^N4.9F7shG^4Y(s^c[>kDZi7`7
%%,AhV6QW9BW0S43D\p!Z=h4@3n!KI/Hri/8[k!l*.R"ST>&s(311=s0Wr*Ys>rBcCj"*21eR.=S4&Ys][,=/k%Y*iK+5("`14.q=
%)bNh@C`G2^LWnL(/c-frC;&-,cb/])`S%:kB>QU[#<L!n[mpt1cX+?6S/TF"3bqJ"DLe!D.kAj_(%[<j8gi7J$o9^`,\!OhC#EYk
%kIYm]p9Zo$!peUmKe[%a7./HkF(sH+"%duNg;W@bH.PISCXXp0%iHeh2\Ba'R0JO;-g5cB.K6/86@Pi#iZCo+o#L)2s%%U#h_XC*
%A&YX-=5<<-/=n_a1t!6Sq\'p_HMf;_Ujbo+O,]28*n>Z2Qk>e%(H>3;A1"u.feVJJmI3-4>HB]?$$WR3puMDW^Z`=:n>k!W\[0H+
%m(7]DSFY,g=[`6s$:rf'Nd!(cIs:7mMM*#=#1bjLd!'^B@i,/FKPJ*k);hibIgFRh6`BRC^Des*+]Nq[#FO*+`*_3U)E)B;aR^kd
%k6d`&DW>),WZp+;*aL[q1ik]\8%&oP8Dua%5*7%%-)cO<LVDkg%iK!!l">79o6S6V9%taQ5/4_\h<X'-.@)266f8%-CZI7PnD7Ma
%Vc^t#;lJXk'?_I2&J)/EQ"'Q!>N%q#s%6)_U;@*MQ1/"G1GnW"UcC"A(VgtcIhWNUm,J.c"=+e+\3qf`bpJ%GBQ[oLd65adBMj[.
%G*!i,,<kpHZ)E\255@r),T;5hDpkm$r6'q(SU5Wp0OBh;eZZS^.VZDs-t:&*+\i_<E0Q^^jU$?!(s5P:02DED^9?b>\T9s)49(81
%jPenifL*AP[4eNP>EV+J;;AYgd\jE,+K/@4ZT]PQPG1Zc/C,YdX#Ll2Zs`:"-l%LthLY%bf8WrJPPq=8?J>38ebm=:PP1(kP+3W+
%F<8!k8sdhaqiQXXr]e%,rHc.29,'cra!9@c.u+4Ua(h:l>%!"("D9#m</LOC2bA?C@@e5s&iHJBpO]+&]MAJ4PotZ98O-*BQ,=>+
%KICuNDre5^FJD+)`'d*-0k;-gQ84RP;!1_gVe<qiKH'J\WPb<%6&MAg<Ptp^,7Sd\aH*e=%pgFh_dUj.#oe[okFJO:=?S`O]hE=8
%l.8k.>\C$E$kM_YJ#6*CmT3Ve],jH7cDr'aVS:gMF]Uj5:OT_V8m3.Vd)T1@CY2FlL+9>^="*Fe>=ECd(b^<PPo@tlr`'K=F+3V%
%l_!`ugZPcIQTcI0*tPm]?M;fC?Y\hc<Tai[D`_17]3i"iIbEcjU8W+5A^nD#$>S'(`Oi-@oOCt):TeTk/PCJ3D;<5$QX,kQ02!NL
%C3:q?gT_QPUZH&,?7i2M:@7pK_fk2oRGt)3\lPbFT`1J%Z4q*pFh$+sn-.-Lfa>m*q,06mmI)R"E=Wtdhj9)6P1%@Br:R3qI[uhR
%e'\/aRI>>tXhMjk4oa"fmpTMsgX>@7l!et;]jiq-O9Wn16L1%8"UM6&Z/TemK`e&i(jR).9&e;#)u3Pinq@E&(5Id?,sk+Yp,!].
%3Tk3Kq*oK9%MpdJ_mg5>J5RoppXr=D$;1gVTa4[.)o>htKnQ*;>(cg6moKn`GAZ=`E:i+mdO@DJSGp5Ql00]sH:Q/.HbI*[mBG^n
%5IClJXLF7*#Ju04c3^d1$LPHZ@sf_G,_X.Q=*;sR83^r"HX+IEIUS=V5"PH"KE)sIm?L&4o-tcL#D2*6%.gV=A-$5O4lhE*]er(u
%r`>W=Q/pk1a]Ca8DWFVAQ&W&Wc9MWu$Fc#F+5c,ImXQ8277\94ei7\0+$r:L3@l<sfa"%/+;O/a@.7@:L9NPL.B!f6it)j8"nm:)
%KuDZ"J+#]*iPls+iq#K'\8Vh4=Kb&C<9oI(fGG87)rlT>/6<u\.]a9r>dXnF3WV2`Oj[6#cp)H&`($2WfGJC>MH:s@o_=H.5`i*8
%8<!7380G6rOj^uT+e^l\!K2KEr?<Ku$1T2bfK7AnQu@\3rN8j7Vi]Ogr69m_O6n)9ISCu:S5sQ]KHZZ^J5>;V,\Fdu#opqA#`1S!
%#`2*-9&5:j\;1I2/30sB0*/<Bn8^jaioS*nmZnNe9>8k]:8kV8jb+f2RhLS"!S0oPSCm!.qgG&V_Vfl'ENEa>.*R,!fQ+j:@/:PW
%-;Ye)ic3uQ;be<-:@&XL+kLF;/\I)-f+Wq+'C3TAQMNdbYUkl7]ul1[k$ZCoFKE@F1u[Q77eZ/A@l8HP3`_UD4*'=2N(1gG@.S:O
%=U%=KCg;SH3`T?QT?(II>a2KDUH&U(V5&cLj]m<4S'81S'/GMI`ruoR.t"_oeL&hBgKIleKA`6+^9Mj"6C6R-'s>Y0pc]7L.n=L*
%D[VqV#p)CCINIA3+_!Vb@[,@(]JU.Q:CN-E=WIFdct*=_=ll$"@.$_'H<b$I`bW.QJknauB*8NIM]gUk"TlE\AX%QMZQR'60UBad
%bjL9m+(0TA^J0^gN5uC=pe1rcQ[DNRr5u_"d]/WI\XSXVmZGCDmVX(uiIt'#=];$4W+sIAiC\[oN0_o'P_as-Dk,h8+N4#*Od]TM
%fJdfI$R*E$D()ki.>uL1.A`P?D$k9"]1)$)lcCJqp?f$p)]qpLi;W:Y8kFu."H3kRnHVL;0j0F3QS^hukq.[a>ASJ<Onbo;IW`.?
%P@u<KDD(m``NBP?6<%r*12$u]MS^,bg5qhie[$\RqJ0(_`DK1N/i6U?*8&9)22I1.mImH`DEh/dcdD5;UK350)/D!qYu*fRHEDHu
%Kbc[RB_Lr$NZY[KFe-+XOZ;!bOC=<Sif2*le30X3ZE$\C0""oj^9M9g6>,2)'q*G]qshj?`Zo^'(Wd(qZG'j=-#H[o`^3aeXj765
%3d&\-*,T:31Ci3+)&31F=_>U<Fi@EaUZo#f%dhs]%2Mj0^ZAiJ^G_>pSjHLEYU`'[4Bc<N_sR.rN@H`-5L7aPD@nsE8.qM(>G%$V
%=#O.]i@mVhQr:Q7m=4sCs82ies89Y3hgbTCs+P+\s%rU;rsnA6W,ES[KCTiR0dZ,/6C)*,Y62Phi\7HB5lEGH;Ao+(82G:.-==']
%\cbF#Re5qE9mT/S?0b[]eK.4NgO/_<bLhJid\q]&OpWo&XWrfkRPj!Ni#M-o4eA1Q>R!<qq$k'dhsso*.olCEb\Vru/"(ud9gPb]
%)WeGOQ>E&U04b*F58(]8I)u<I*E$4BG,.QVaOJPWe6Ik6SX6u.%!6(:>dCUWic4-*pBm4)_cTuhMeC/1<97$_P]_Dr\Yr9"\ngBa
%b#u#dWdct)+8q+bI[#U3nO]TJehSW;_]c4'60TZn(f&N>;Vjuk%ajZ9FslMh0R:?)Z8<Z@8bu_f8G[9tqXBU=s!R5H+&)\pVB<c3
%]`=OEo?$XH1OVBR5+X'qBDQj.I6<o]H)AmmdqduEamrhc*'bT>s#Hr@T5/pm`-TaXoAFt@&:X4YI!nl+51dMoc[GECH[-0Oo3cro
%;8,4Sru/?kO([<VMpicff)Kj@LPN/-YI,\uAqU-]2=W@>r3b+oBat)P,F6%AeXlbTDu[fus(\cf[>'0@0)rq_raKeq[E$$#m(]gh
%It(1?qod:k%tjbohkKn4Ik5s#VuKnZj[N'(.c*d/!?GPn2fHAQZ323Ra/Gf@i0>u@(;`W0(/g9=i7a:]AoK*->76(iB#)&i<]hli
%c7)&U&2^q^OsN%kUC&uEa_73QPH%!9H[_2#obJcbU.k)8&\bc[QRHM;j=DU>:p^RB60pNUUmoHVnQkEKloImNfigpB%EUd8-gQ^F
%E9l#:>&Kj/1\TS=CF'>9.6U(@%]M41NV07\2:VNS6[5VUd-+rm="9A.(P17,'e`pJ`f:)33QBs1o4R'67Z25+/C;6UGYY#;!bZT5
%CfNLOHKGXC,YJ1[k0Vg9g4[jY]QFK$[$S@X9\I5,)`ulMn$1doXsTUC1*[<-+,FuqYA174"umfZ+&euo,2uB(OuahZO(bV4`?qJt
%KE36b2oJ0O;4>F&)Q2&\&p"hkFsLVQl4H$Mq\-;(^fVB55n=USV!!Q<,RD>GU7j99oEKmb*Ccf>Oo-i.iK:HsUKT(9hPI*dM.pZ\
%0`TI^*/7sS+>%F]Kp*(aP-<gnbb1i$8bbcG3YIPVJS$2<jqDus7K!=gHe)!RQf^pIe5XEMRL1boP.r-n/B3h>(d!?.@Z?Vl/Z*M5
%Q=mO%i]-!WV!\iTdo,EDGmr(T)X/3q;K\K=`e8sO&id[+JkOhWbCLKP\YibAVJ<.Gfgd86E%b]\R#;WJllD:7MbZ$+&<fJ]OE>*!
%5iS!PIq(!eJYmRVMU@G^;2,'NiY+fN!3];6DgLtuaZ#Y*RS$NcEUjRY+pej&0aK=*^81jo[k`qM8jc9+AAQNiB?OQpAf9T^'>Pse
%+8m0+;j=\T1hS<jS^EqVo`V]r*5<<sI!`s+.AoH5L8.Zk'N:@"8L-r>KQhcLE06JtKQk>_oK<j9l2.A#%@Frt0bcK4`\8`(L<%*A
%)*+R/(Vqqc"-]_F6X%?_P_6>`o*2<>l-<lbR/[=p:a3O\0@uVZ[5*\R6e;Im1"'Fq\W6nR8B;(0P)dcu",UlX=1]UG$R:nae#i^u
%"A'He3AC5F@d/)?5%.JM8AMV+$8Kp?nej+U$!Ds;X8s71*,!tP&hT*kCR/]_6:,)>W9V_A568l`#JrnW8N!(/9Q!\-CPlNmbCUio
%>PFE&4P:hO/t&g!?c#Yi3-tK]m9KgqMU^*S"-3gi:?8$TCK3/;%[d`G/t=$l]KtrIN<_0`BZgJW[=Z\H"I5"(p(^,0(i+Wef\qo`
%M9FV#XrSB)\0cZAh4$4)\')lE>SrQHrI>!CA&&ru"4$Up!GT-)SV-F<j)e[RN)r;ria*b3=CkXCf@FV(,hcRXYi'0AV`[m66?DeH
%8OlMq(CNMSBWR=Q2T(cF=J\hI)@u-fTeL#K^bE.hM]f6touo:+&gN38$c*Jpp/0>%7M'RHK[a`I[]_"%<l8(qXe,4"q^d6OBK5N"
%Q=SNSF@$e2H&VcF'/P[egVnCmqjqEPb-8b'\U<KNHm%QNNWO9J+ZcYH1V*Y!ERNu6#<&/GgNl5c&el=UriK4)#j=+mV(q"q<tV>U
%G@he'?d@EL8-B#6Qj=8gQ"7Bi\tN`nJ0b/]VHKCb+5!9&7Js9@PiWa0G4Q!d&9nk%&5]__PKGaEIorK;c*#6ABOD3>O@t=uUe;J6
%h:uOSUe,LdO/tP3a3]Yg"l=pd6T*n)E:?DpBm%[C+%Y`]obSZ+c=sbF^?sCUFI'I(E_&nQCMN!&/ZfY;N?gqoaS'QO44B=ScAbU5
%b4an(2R)SeS'AkqM;0>3;(/('H.!gkfG&Eon5a]hBpp9iO'pZd=KqN8rrl,&:RlIOaH0Xq4Ip`J#HRS=39I+r9G2JNb6>0ld.\;O
%CA\<t`#9lZ%oE>((sLAYOWlghd:aHHjKpMCQD-1U;icb)JH0p7MfWXe8/e.),%m#!r/7Y%Y_!(E4r-`O=;rdh)9SEtom/lRap8:T
%R,ieaT3RPg`^6.CDmWCC[RLN]0EslBEFW*(JT.AJE!ed2hq!MfIgsS+qQtRL#$t0Im"bSR`[hliAg4Tnb\2'<I$L-R`K9=@c-K.b
%Dto4bi!s+6M3G.$k]lZ`>`<L5Jp6D"=#%JKX-i>F'e*$^^62?uQEN$k+Y3<J$0$eKj@O/hGp9BIng&pi4A#(&4Fo]d<h>EPHBfkf
%*SU'PlC.$NC<MgnhT1mBI1gfLMG9A6nS1CV@%LU=bd8T?GL2Je4&4VaQ)RFX9W\aLcS=Mfkr0G:9:%(42W+_afU=UG(l>u$TWg.C
%>e#=4J6K_mK\B:\GV_!4C)6].%^^gS#sjQ:NR^#Gr+\o/]*]ti$>I8\mr5_;YaY,aht"hSp\87L2uJ4pZ.j]9gu/c2DZ3aK2Lhh)
%%fVjU%=]L^RFF)Hr5$-!rn'Zsp1a&P/n%jnnrik.Qgd[eQ7s9tGA#s,-+pro96cTP96f!2/7FLd?Ga?DXX1%u&H=oI)_jj_TPD(6
%,3FD`[U,dI1<m3%R^SSf9t<&Lc[4gm)ShRAI3QT\,;Mtna0CEl0pkLU3[PRm+UEF.oHd&Fg:]5J$,_rMY$c#Mkqk/<i^dWB9Xjnp
%Y4kN?Pk[kDF8#2pk:Q0/9$TaqU24^pRR.a24CRmur)M-21ab,Z\2?[:_a/m!'!&LY!'U!%h-(i5C1_pkCs?e$pt!Z**Jaf5\YGQ1
%Ebf9Fbgt!#(N7Q7Z2<+rYTBUCERE#*Qhk<jh!("rp/[pc9%chd@e$QgffG3!`&gT@qBEUU.9hZ">dous`La.\/cHJ5DC'&fr)TOG
%K;7n#Z5$(V=Ii]n(p_%LoegSTF#E()(s1_7bQ!IMP,K-M.W-/'.ns7g!`d0oAAc9"7R-5Z5;@L!+uS;Zn*K%A=JRoF^<ma"&;g3Y
%m[Zq=_^R_Y/2F_\,7i;D"L*F3YqBSS6#NJKXbTZ0)-6eQ[sAX%J@^_]l9\>i@?+^DaDr6Q86S49p,97(Aq_?&7'/^3/@p^[/QOs5
%h:SYt_rZrRGJKVYie^=DU26T$Q4C1+\*-';B!ppGD3V5J@l$3%_N+e:Xbf-+j[0H-IUspn3Wo-Taa_t#P3[>Xh:ODp^o:+pQ=[*n
%+E2fo4&@bZI"BO$caen0m][]JUbl;Z#8W2=XdCHjoaedtlLJ@Xe%RRO=p*Z`M'M3_0YShLhpfh*\(aF]3//uUZut3#9e;DmdX+\C
%/p9S,*p(D]@;-s\3MlP)Ip1oWL2K,`H,3<>T*ap?XE"p5Vo4TQUom#!J[]u==.O].^Q=S27%8mc5D@a$c*W@kMt7aBa.Q@.lqI:D
%g4\I%fot/=?gY_YRNt0Y&Peh6rfHjEB4XR0`_\cmM'NON]'g1,>@RP;XU^g[>p`8Ma)8\f%#GaFhEntN\BsaR2kA:CgP[2#4g7Rg
%n[erWqR9^V.fa-&rKi#to3;X8_<Q"M@FZ6?!J!ZMp+6=M@4L@OODtV>$$jDga.RZs&<<<l5<2&NS&_r+T?l'gL0b_F;L5qkfK!Wm
%>&]S/7<ai["]tjIV88Luf$EN-<L$AaDp-p]^,qP*\H:,i/X0bY!;`,O1M\h(/#uqOJKS];!!EO5empV"*Y9OZgZXMnE,b+G=JKSl
%NTMR`GG?VRd?FjfBZA0'ibLC2N0frh@?79NA*>0nYSt##8b9'VDDWRCQ+,/ZXK9f[!+fL'ZNGGj1jd\)g"^7#)Qb[LjPq[b?*M=,
%]+KJR:H`V7A0\;baU#<5GZ,Nb7^KRV2e2=>bSVo(G#?)O=ohY+2^NA@lDG`K?6!nWi-81NU]>mf!:PlD7!MShX]ca)>)];.M>ZKt
%ZSbe!,/%GnNM]!"!h5:1&D+3W;d;"n1g<.hZX'@r/"S[;RRJTdJ^qP1M4;9Vksr'Ka.#&\YL+%LPL7Kb#B5/L;a`?$nVGj/Sf51s
%Y[N12=b:)IH\s/9(sFJE\f8lt/Qk#md?Ih#guJYj\I"0;0/qoN7WZCD010#c>puoq\1)Fh=$OCRN-11nMIDRC!+<\\qs4=.d7bFJ
%>f?4n+]]'Tpc:iJQ[F$QR#5A5U#;0\0Mkb1.q%2iA2)8+L#(%M`A[9k3D1-ab#L,,ZtZ:A!:)asFoW(4)ec;NX6N`f=nq=[d<#+8
%SgC.0>s2Q]P>:*)#RO/"j@#IGrF2B=c>?X7WGbrE9>(aBpg4f@VIicdM-De6lk?Y*Le.=[lUaGrq7oU3\#)H!Q=66ncX^Ca5Ym;q
%@Ib_c;c2gMO=+pu`H\]X#tKe!rF3`e>#\aV^AgOIS^PiCfcH9Hri(Wl/]&QZ)(Y;9GtAXUL!Tk0*T&imFJt!WKYqQC)(h$pBb:\/
%ro1D!k^NS=%7lXOLk&$/`Q7k;$4I($LeB+/U<0I(%SESe<<_\Vngn&A6$a;(,cR?B902pblV^#+I1\_[-G`h*d(:@aJZ607Qm3Bu
%--"'Wr9?Ee.&YnR:H5QZc)5D>/WIkX#lucZ)TQ$<OueJS(*0V7cC3/Ag34#jA'c_n!sr6'/hdl"L<aCY95:7IO@A>E2<4T4.=9b&
%,+X[8FFG(BTqgi8>mKqTk:@-O3oV(E@V.[:Ku(N8=:.kX-3O\D,eg+*492nXR+%$X"#eq>eH)IXqeUtsfRSs>D:fSh/%Mt]QY]GY
%P9)-7m61Zh!Nj`7P16A,,$i3t;@r+H9EUbi%gTX3@;D4P&"mCfJkME$oe3kB=Z/#4gGhh97ob(>@rF&;:.M(hldkXi2)*`;));`t
%:<rjIP8kEK="0e#7tB.>3IE4=m(YVRld0j]L$D;\fQ8iL?XjK>9daM/]2#@+OFFT>bbWZ@$0J<CH8Nn-_@ap;4>!BXmh-il[V@<T
%&)8X>Gii\$c&)LRTD<lFDGsiP8W+pmV>=CW$78P)*S'OtA^OaYnM8PHmM;O8[gnZ9;Q)UTC"<*$h.G!e4m141@2s(WoR&<B[G-rs
%Mrnb5?Ve/F:Lk#mlU8_nDnlC4W3uI(R=ZX^%8`nE's.("Bi^)9,IPYHVDd)-c)BOiMVUZ7FK9[g^'gZHWs;tE';e%j,mU8/Z(/$(
%q^OB&T$E`DMm/8Kr0GWkagF_Aol9[Ol_7RJlE7B11V8fm;uP2<[ZC2G'@2&gcZ9NnV[D?LC&;bDNT7.:W%hui0Md)$3G#[H]F_D(
%^*OH<A%CpsDrW7FTWl*2k/6X\Q:4djeCRe^AXP3^g\Ru?no)HJq&R+QBilFXr7OUm:Z"-glAl)c6`.+t<^;42HkTN)>%,COi8<6k
%Z5HXuCuAu[&phE[/;n8jp_LJ2r&2lado$(5"g.QZ:_UU!l-mOeq6Nbe4k&SXFjnJ)d5-21R6I,eK4k%"Z>MXi5'j)%-e%7bA:?3q
%R/R[/pp7^2h(cSE`k$+GG"g4`8]LD-*)%Ht=gC$\<5;VfQRn&p0YOY%^\+pDIkX%`Nm!(>^[uh02h%7G#J/b+^l(XblX9p7*HG#d
%hS03C#<DnPKuG0]'lep%eYKAr\`_KCI::7"*"R/%S[9.PUoZH5AHC@I:PfB\5Q([i+*tbZ8<b\Tn7"X\P6q6T!;*UI2:ruGjNH\"
%GebB6qV132/@q?6nn%J2OJ4J2#>W.s^pXXEP,+bJr)LO%CR9]KP#0,)cW4D9pGi<A3Jp&Fi?4ngjp;Mfot)J.DY6>N3S3D><@k?t
%W[uo#!!UOUC^@>c"ZA3QR^5Y-@uCLKI(&mQ=1''^Wr;.HJl7:&X86+b)n1-e]o$dJ8lHfY3Oi@p\'Tak8%r(64'95?"6DKa.#0r^
%I^^/;S/[(3M^pe5L7OGBB1$&)d.tQ\JQiq#12BgHTRkNi!SX!W?*]&NNh3rKDD0W0g:R#q1bd@S?B=OJk.80@4+,/!FLV![GC.)J
%[s.0+,&!Y8mV7P2=cVnOI+)@Y+a7cY/#qE=[UJ>ONH0,b<7fr'hf]f3W1J+CG#sZt>bck4/hMYZ]'c_UplbI:Y*u/Wh:4Sff-\1E
%Fc?Sp]!O(O'eHN"l]TbaX@IL-^=?:lYMB@O]!M_]kdnAEi_-/D]DM#=RAOMXiO:Q2U'5>[hV/alHU1TZ8Z[YNm$XEn'_cO-[dZ#C
%kZ]A<S#n"5'OJU)/_l<#V-AK;i@`EmRZ9YD?n>>QYIJU<"rF_$L\;MrYrr=;67M9u$+GfC$K6$9("E&=eA>E^Okg6V%A.2t-PT(^
%"5'c_3Pp:*4TuVR*:-!#'PMR'>7'&0=LhM+@6<1&TE=J:&P46<\F`B)Aa$%SNo0S#e*XLr\#0#+n`(JeiuDIn)7]o*hnkI[4#GIV
%c%bC45(%WSo]<3;;._2daO=(1s6Q7(]EooP\(2(Ui,^lCN#Mm!o%+7]mAZ"cjX%>"<i^r`K9E_u+N'dMF]]7L.[LZT`3a-;K)r(e
%g,P*VoQoFN<K'$U:QBggoj[T,\_=fWO*cc/Gj=s%r&A]OPh-R-&Mg-q;l+?s*0+e,6'%>h)Elo<2^[;![2V37W^Si;<jlbg'<qjW
%A\DgNo@BYob_&DXWUgA\/+EBGMW#HXi^?1Kf.G6PSetN5S*O_\9pe^WEXIhmj\uCs&]ALs)@;(!aIQ@>N&KK0aV<fgW3;U!=%oaM
%QnHX*R&[?eN\k4p\@OPP:!VE1#7Qfi"[$Qo<[81P5[Cub9'cR@-7G.5a\uO6*+>G;?#q&ZV-E8%DW*n)5"g\3dKAP7:deT6o9L!`
%7glaT3)]J1Q!QU(X?,hrr]/&Z/qgL`goCqC`i4Tpa$esKKs;ION\lEN+(j%Zgf-*NZJ'5Ljg,Y8CH>\K&SupAR7d'unTr"[SZbJL
%(Z*:)VK\NY]C+h`XK>a7k@n.G%`_VA`?n];.[J?a*;d=7$r.2;>fAT[910DlO(N7^%jJ_O5N=:M#3m$\@)g^1,h/D#kN(<J8_9hF
%!g&TprDu6KPCp^RefdAC$1t!-!J`aclmB?-duGO$EuoMj3<qY!4g4H"US&T;)9?7jX[$!$O[UTk42n#k7\AZ46G1IQla4E6i)qF'
%h$iW.<I5jM%&ob:7D4u$m/Uu+kQDlspmj!p_'`=+!0rsX?bGL,PJg_UT.R-AOboH<M\[%FmI$/s;Wb<*);7pi?4<cAd35,&J:=r>
%o<WYeDo'ij!.X_%bA81emL4%BLj.0S!.@\L=r8rf8BMoV1CC/HU]>#ml3cP<;J:qj\^jg2@V+ao!?p&6MhltRHnQS,]7SP<h#ePS
%0jTj[]'Fjn-mboa_d2pk-b9,riNE$n5J(=N+<oA]X\F+pE2:*9*3s2j;,@@.Kqh/@+Bg\L*j$/TP6?SU=f.b@E<p\:k*=aDL`i4X
%(_]JB>T]>#O2D\A27YD>G&EAG[HgB$rl*DN700X49p,<ll/J?rN2YF(;(B,1;!T&(dA0hK>,sS>oZN;J?WV;m9m$$-5qe_kh$,'"
%/.Pf9'%\X7\B!%k8q.%+R(S%Hdk0#1#rK*;8]j35W_M'K#hNt%(YSnh5IiLa$q,&-&j7ADX*<L/:B=nWE!.E)B5g:f+QsW%Ta:3<
%G=pMIi^cXI<uF.:3[2H)l5L^Vo,rbIhqiHXA]$tMT2AC*O^/Ye$g$dcQ=gIm_Ij!4]L]IYpmQ3F(_)E,Ii^X#+;c8=i_=g+"sW:X
%;'ek/Us1'G;4Po/M,rGN1"I7WVbP3J.XdbU-!&DE#s"4#3d"drX`X1T3YlfiSIe?]<U]i7Ru8$p6le#:(e$JhR,Z;&[3jPKC?dS+
%P'c@J;G\"3).W*mjkVt5jp:_b?V#s,H[`!MgQ#9uHTQ1'TTN2NhNf0#Y5G7Bin5O/&1\3fUKtF(=R/Vh5'UblLI$mJ*OUUkeLoot
%hkmgYEMq";h7:`-*2WKR]^ZZE1+sM'\(sWEU(1+*O7Ng%k^qFjU2qlCohO!$DAjt``2bU7T4[ET,+.g.a[3-W3b%X(4;c5/pi.(l
%OS;Bf""tik7JQq8+3Y9Vd!W"Wk#^Ec'NgAmWusOpKViED>+=^t24</2<m8EL`'BI3!a+Qe+9F6u*f*4dRQ/pl.#pr]J<3gPH1WKg
%f:s&:oI*/oOiF2]g/>TU#RG/;,%@52dAhR17*B`ae7_]?+m+[/j9/jrHBj+/<o)>-XQOmKY.F#4=Nt.U@JlD80^O)8VLF)CaQtL%
%'2_T`>6W+D3b6X0<;E_-N`:;)F]SiO\gq;3CfdR..W=G4XXa\=Xk$dOeg<cHL:V'JOA/,/[J%g7jfT`6D"ka>.(-:i0"&k6!hl.7
%NZh*P%:L/nL+l=@_DGPZd_,3#:$YXp7upPl4^+,_K$AUp^V$O^TnD.&<]IeA@8Dgj4j%d`,#H?4pV[)"W>^B+Xg1G&_jE,KX4D6D
%U7WRTbKqGkN^J\mGG$K_i^'YOl>'RqCD)-Vg:ca@rVKS''5.5W[_qcYT+Io4r3ge`L5UiMnV7&mCKlT4@@,d9m-.>4D8?VJYCuX*
%PWsbZ4gV"M/0u/=lR1*4gs^76Z%4o4C*i;)_7eLQf1]N=-HRXL.uV^+^L(S5bjZdFo8bL/%+euLI!RdUh'9-_0b\%[E29k_+dhZP
%K9q9'EB4Y3:FY!Fbj&W.39Bc7,o7#^'Q^O[XiXM:2Q+YcABFN^Y6?]Y!A8[&lBWTT[E4]qG41Gt/iX2n4NR@)7OM]!D<@5H5a<c1
%Wfpm,%eBHB&2be+,^rfU+ipq8k!/AnU>D)IR.b;?EA0D-<U,AZh<95hC2Z$@J<gC%LGZ4R>T,t'ngUV4aK/'>+WWJIdGp;p8Y[f&
%R&t6i^BVBrf5Cc#Hl1FB\_RfF2po5GCAJM%BOt:@8534r/Yj+aN@_#fk+F'Yipt[L;HVF3Kb,RK&YMuB=Um22j(.lP/;<4%8Js:=
%6C0^d1['jWKgW]G9`8'iMW%#56h?-"#lY4^D&UN.$=Ooo(F-[=q82Jr,CJ@j6r&E,DP_<f;c;LjXcG**^r6H^c_ld["<O&"X,cpD
%NdHdVaOW(sV:3aAq@Q)`'.0rrYD=B/\b]EHWQY5D._EsD>=5+e1u:7fjp7*;3.)H`:qnE7HTi+X!Q%Pa+KRLF&K>S-&:HUE`usUk
%$::Z>Lk5[\h&6d&V=:QT`,.r/(PRkA$R1(%%XUF&IA12sWsu8\NE%uB'Y-L%QUNU&qRj"_B9Z(`6D1hN^sm_bA2:./oellS$8Qak
%.[j'imu>qsk7]_kmB.-5X.K*k/7\:IV.:[Ims^cB><hHFF!:Os:!$MQV'8dA:DW0s.DrGge0esq7n%\.FQ>I+\n_>a4MWccFg/6?
%ne>>jG'Pj`ESBq:-L2NT?JRTM!g-::-Qr@m0bcW:`L'I^&;ulr.E"sr,DoshJ737%QP%h*QHV(XR/Z<nU_ut>\9d5P7YnKTASE>m
%7#IY-7=*@%KI8H!)Cas\OBF<S-"Y<.9<7JSXPAID%dq23iJ3&%fO7aqTjKVBX\@YPSP'Pa<MqRnJEs*feq9.%3d8t^i9Q,\c'V?@
%[MA%A9J)EOaBN=Dkd&@Z6b][%?Us$2O<`k)nkqaVbp#e,+hCkiiK95kKo9Dk7@'?th;%\q1N%j!0C*rnBi*E'!A^\@jU92O1,u3T
%O-)h&8dL^Gej.Y3Nh->Cf>276.('cKY1b8P2@bM4[KamZ/7(!.ZM'DL5N=os=GE7G__5$s4]((Vh`..)PcA^VqF0*_[8d]*1*(SF
%7<b\<@Qi6+:qHU2De=-m:m7Ed!J@[]foWj&j&&8\%N(H+nJYSfJmtLQON)9COD6_7&oX:<O);2N#2<[8fSU<B*Ut7`T^8obBeUNZ
%XFZBE[t"/&4aN>NCrQ@7bu17%"f[';IX+7sg!cJOb5@[6>lPQ4Qd=?2BK%#b.NI"hZWRGjS&#`ELCDkG)J"K*.EP]blGdrdb0*oL
%d.6S&#:TbOekrOY0+1qmFHj<6]<?Zg3SrI.f04g+=+NunQDM(;HfN9=k#d[Q749(-Ot1F;.QSPs/a$rp(/VCpJS\R#d_TmeGc[\^
%)cpa+NU,pY^PYq&8Ia"L!bKnN's\$)9&0F%fB5)mTT/82SmMZD#1^3046+IAh&4mf3]*iY$^20#Z\bMZdMN?P=c*m,Z"<='U9anR
%4)kIn);^bFe$mQ+mD[pJ_qql!KCa$C.&il:q^tBu#q<iHl_RH=Mu0<Y>Z-h8`d5\7TlaNI9f1KrRoBu(#e%05XUCdk3C?PGGX3W5
%QB_jjlti4UN>Wk*kqKpq$)WHPUjs46+o(>1!SJjdkc6k53H70SK;\7TVCDRtO]$#:%L]&iB1)d*,')d))`lGQRF3t+RJtcuK&+aC
%pXQfpS@<pS;q0\]SOc9XJ`2sXK*QBW,jGF,`a/k3[_OSBEtgDJBOCZgSCK"oNnt@>CL*p`),?KhZn#,s*:](M94$35qiNjnkU"3P
%V+3o6Heutd>,F*<"?OkbV:-%:8O/h?"d$%sQE-..$ZYb!5f(?@b_V^Jj@Hp1ME8ur"(!ed!%u)*O^nhj.VBKTgNPWD@.?=&_4Ui#
%D=;HB.MdgO(6h,7ha.4XFODV=MPVlYK*`VnbpJ\e@AP@V+jjr\J2jU>)pYaZEd!GPfB1Ze7c\m&?,=%CL3B1p6!,]s2fPQVclo?u
%dDPK`E+ZpLi,#d.k<qU9&Gn2K&keTLrAECI2L0a%1HC4%Y7DJmN4&5-@A>0ZgB^]YT;E$s!5f:E]-L`q8;]==A`<9;U5o@#^+HC]
%J4`hChH#WJ,e%Eqe_M]3(d\qnjUb:g"Fc#A*LS&G"?']P9I&,n*%G<#KS$_\f$4_RQP;fn+>`(J_nI8!=Bi^O?I11jE`O^WJ7(0>
%p]-'/A,o!V2*"[N.2Em9)SU'p9T>"c&3mUS5i]6_`J>6FeGN(rTRo'@<VhgidAf@S*0A%"]*_1oA>Xp#;:X0FaB!pPs(@a?=p!nY
%i(S,]J<LQsS+Z=`c]O*3Ul\?23\``8'/gb9E@bkGg/^%KS?!K02VA2J[8BX&XW%[$esJu%Onc&FP]Um<^jU]fa(_GJdr8K#36!Q"
%&3D,"%D]jmb7JdZSd=Bc^/3T%SC\8jX\k5Ale6rjB($as2`[@erZ'?hh@RDaKsR(].ah;R'=S1QDNIV&KRnf@Q,AJ1/2t'p$8Jd$
%VAjZ"F^sqO84U1f9ob]t7![K#"4;E_81aT3#jkF`+LP(\k6nm?\&ka)>l&_YW[1bR;#^h)VGhB^84Zl=O$^io=/IPSL1\Nm_cCW-
%*]GR"YXl!oTDU-9^NPW\%[.f6<YMMpch.p@"0@9^^0^/CGVlaXA(K._#A%'o"MH"f^Xf0&(Gg,clt^n`4X?<LVD>4Sea*q0nZ-DM
%#R/:LC_Ai1HZ5Jn-MF+-D&^n+K.g8/A%"@0]X6\ple*fu7^TL`lG\^]i?4ng**G^A$rLm3"<_,FD8h8U#["*IO=m>2"KmZ;(Ke>Y
%Pn8N-1s[aoaNhpQT-;K^B*elJ<g\JM[tq,!3:/gOa'UJDjPXUG,:C<cAY:kfneqYNLmAa,*X$#lV?ZWu@sR6ZJqPB(H70.'NYoE+
%+oH_Ri/*>&#,3!r$^H[`08Sfk.X_eJb-`6BOq;DjfWKEYDIHUt*aW7na(`?Bfq9/?/u6ABA-+$aES$U(S]/Io'\l$r7:Ir'/2C#+
%2!+q_eW,i<.a]2T4ZBk\2IU%4T<)$,gAu_Se"/Xi)e4#sC8"2:JIJoB19#t\=Vk^dfu.agmL6A\FBm1aQ2U2CimuUgH:!;)&@/;-
%^/qU\I*YfoOE`=XAMjrY[`6U+3gA1nbcqr8K]'AYY%&N0FJlHbkq\!"@?G/)-!/mg<<@q"cE/A&7:JZpfjX0.k:LYq\&JWPU0e_t
%]@C^[cpr\$]`krFOTlb:nnd7(3"-s($V>)%LO)/;\LbaCK4igo_MFsWS2qY0-M[Dnm-HSTp,]F6ju:\f!5D'nfaSL%`\b[j@g_Wb
%<<0XHEWqpN[[Vrug9)2]@p'e2e)G'&VlIIO=)_:^NO]IL\qpm_;bM_KXAUQf7S#eKBeCY<\pWFMRa6O8==ja1XKG("??ua-[!E<]
%YdkgWb$Dhl4]9+/R3hZ8nV<S.gEe'k<"D8.)5Q=T1ZN+e"j^^%Rect5L`9it=XC&"e5jPH@9Aa\7^1kL-DFnp1f2"i^'gZH]*I%7
%hUaWqWRa6c4T[rS4jG*Cf:s,<oVe2,!rqq0[5E))a?#ZH)!)kaTN7_9<PAi]VUO(Jb7f5c46E9J0\-F59U%?1?!Jg,(F9,6#=)?'
%mk$k+TCC9$HnN1AUSOL]kK]0tCNLlMT&!GFnS2&i,P#(.9u\HhTsBTJi+it@/p_\$%UZrQiP00t-;ci][(.iW4jA@R\'&bqU1<XN
%pQ]b`Vh$pEos5bWO)%E'oTt`q%<IkH:JJCadtcFLr%+(SPS?rn.aXL[61M:cgZiB:X&9ba*rRYRAVYR.2;`i`lum<6_anEiBur,I
%cN6bP?#Y+Yo;HPnj0jp9r[bG80&mZpb(2],#)BaHUeOiZlWt?rno+IX\ZWW\gEfKN@]j5[7Q$$lSuWG?D3#ia>Q*fi\.0pKjZU'8
%`JqC1fCmDJ.dfZGh"eF('TBd%!^uSQo]>),W>V[@IJBoa"j>ToAMR%0ER[k$N4b>\b@ENufcjlY0ulMDZWo5Rc^]Xs5h831_#oTb
%k")cPbP^B0[(+-V//=3r)"]j>CZ#u19oK2>](4a/KkB!Y^r<VO9s9q.\+uqHQA\6(H&\0A(;^9u>XK>&Q-?^E6%+D,8&&?GCfgWc
%='(k$hO:nib?h](E10'T,Gr3;C(1B)lXdJNg)'G">_%)r1.#k&PBi];\5S^VA59>2+OO,Vi\@.7WQ1k92)rCA,'F4<?0PSA>_]5g
%!Li7(Q]*8+9>3<2"q_B^jqq<EP1>!bV/HPHdq)QG$qdbog9p2',o^>!f\!;9nDpZrqsFmC-*,>&'Mt_t$S#d)Y%$NFWH6;C4"bka
%rO'qW[),P.6PNFU8*Ra%GB6[;20[7Cj%Caiqem6WDB`c0Qc,5+mAC0&%qFB*"BFMN;/6=`[!B0Q/"fqX![KLd>64Ot3ZfjpT02I5
%pJ#uT1=$\Cm9HLB@g13dTL!t,J5<=uE3+S/nh=k5D?Z9h=+Fh;g+,FkZ!HV^=+ETV_nL6MZulQIRX#'ib6eN9'gO8Lq2ugMi!X%R
%8p3">MnsunhO$MC;q`*&ft99:jUWm2:lC(6XT)THAH&il']5<O4_D)JD(r"B8\[0M&PkS>/_K0)j#4P$BXMfCiXWK4qPU'n??gp$
%2EZ<e;Fp2Loue#s0E9Q6Aj^&MkC\kOm%3$uF-jdRYHAA#P'iIe(ClI6SuaJu]%A'+*(>K[%N/e5i<jeP!6TdTmom?c?>]!h)5#3'
%;OZFnUX3b0.pOW80)mA10=h"^K9BEc3gc!1BQl.!VeU1"8$?YYa;Di1QM[ki4(u$FSVQPn-n,WH-%e)EGr[qL$Q$u\kW1+9S)4?/
%R;@"!KTRKIcD[,O&bLl@m7s*YZOnn4DF8VV\[!:,5M!qGU"A_;f\&k\Ps&bY.c(q,+P2KN=;naIj(H`AP(f%b/pVLU@tY0_Ks&6q
%Z'rt@MK`JKPa&K1-u5r2V7\1,0eu7gP/:C`6.QBE(l`Y93G5R3#N\BZ"^GDY*Pb5"g)Si3K"tAJ-r=(&hhBbX>ppLJK+&bV.%fcE
%Q"(#"4USSY1YDF1pAJ=(*ZTX!F-cNiV9>B?5A.C:SMR5<7Tkq9#._%Ko[E[u^BVr<]dXi#([_X$3O.2BLf$o"@BhtgXFl#b8FNu"
%%C.4(?HHhj-"M"Fdm]C#_AiA0?:m__/RJm]C7?_*n*s)@s5^@bc2)4dPV/!iYMj&^5NZPSgT'%b57KaT;!!.1Pp9"VDcid2_dUW,
%GGHr0G=C/V%TYW"cqqN+EMiZf0;Z;.QEM13g`K&N]P2#Tm:sq:)!<H`g\o=bFnoakNo.\)*FY?WI/TmU&6O(4&fE;\]JFPN=%H7l
%KFYri>0[=,7DS"#)B6?+pas:KrAt6;PJ&gcM:TWQHKj[t)m\iXo94n5GYG?)jo^cmTOjKu`IM#77_NItiEV8/E$Bm8Ohdf0j;.MA
%1(d3&;R>lp@V0[#M$Rn\Pu<tbgT$spA_/6/cMTnL9hOp%A1MtM`Sg)aF?n36+HaN=YA->a#47]GbIn%2M]<B!@7u%R,dG:N!.DC/
%#luO&fN'$U\3L-GR3tP5(,IFnn1@)X:RLC3jFo:o.o%!K4(@"L&8qs3O@90adSUZTA.,EPg#p<Z]qtnrlpZoo5qVOV&QCR26*31#
%@PQ^NiJf2EjdjgQ)R:A\TVo:\"cX&5C'U`/.<@apP(FM]`+asI8J.;(+:H6+7EhnXNiX?uWg*c47;UZ(pL00o^'R9aH)'fYY>*1q
%6EAM]-.b-RVa_Xg$BcS-?=>/7@%#%iRq\*3@N]I-1jpj,Dn:X.Q1[)gCf]cV.r@Z,e#d][&jd>!3,C!u]&^(kCRS&s%ObXN)hn=T
%=KF>!GFgZ#F(oX*7>ntN[*k^:h5gFl>\/N@)0%>*c9]^:Z9BG[Z5=mER3o!R95a)-MA3\d.n^4Q<^B&!-NrrY)RL&.pS5q'*$$qO
%NH/S$/r&NoP,-qOnoTU#mmL>I"ergl2BnA(g$DDAh1Pcb=>:a0`=^^p[NrjthLrhMCR8sGK+ND0[P`kaa;]L+<J[OZH$a+.p"O"Y
%!1ip>KW4,IhP%e_ZqBid62Y*Oq?K=X40/_@Z<HjWF13Oo:Pf6-amKJmM!rB[m7W`jH*Do`nE/(+@\-[6N^Yr=@k6^ZI"Tt!C[>O3
%B7=![jk(-qM>l2nAV__-D8FJ754,"SY\&#6a=\obBl9j7e$H4Rl)YK&\umKoVR[$9Q.<iE*IJ8pb<1LN.JbG#UHYNU;3SCg2?,18
%%46SJGs4/9"goD*X:`/tg:7$TpCPb_dgt(Vd_n<'CDmSu=fI3-j)S^/=T+a(>#%o.1jl*`[bQ+2]mBG:k(+7^RAWKs?ra-?>&Ilb
%1onj$:Ice_V+DV8\TD(4-0pS5@jgB;AmaLX\^UAa:3*e8@dDTfZ<pa7]a1GRj()/25W%[7X,:9ElI3_8:V:6j@!3EONN'L`b!9'q
%J><Mt!Rn0uc4;1X</tTBE_oR]W?W<In8@/tFrB$nqc4AnF:(<GR.eD&">6Vb!TaVZ3Y>(1dmI4H`?U`ij'N[2&Qh?9E0KdG6<%>L
%*8-QYOX0W,8NYO3m;Pp1atNr7r2Pl.%n)dtb1\rh)=0(3G=RfW1NQoqc$ajJ`p5sV?K$!]pa6O=XVT19NOZS>(XHXWYm)eK#/+io
%q_2BNPsn>1DR&UX3=N$N/OH=^Gs_5d-FA(Gbpj!=_-MV_3?.fhfFP:JTHIY`DU%`7U8W2+l%JDED#o\sK(PN](?l@/@9mKEBV,VU
%^.+/DMn,m;53g3ufstrQ.;Gc7,Lg7qP62S)VU&tm&ae1CQI+mFEZ2:ue[j1?e(1$T^?/mFc'S.WF8oi*P@'[TOOV[uZ2\mcr[c0$
%>IRQj$sESklk7Vg*k8#4i]gR)fdU^uf5N/ZN4+,YOQCCE9$^492b[R7s-bU;Z_RJC>64>nq3c`YL$g2MmAF$9GjH]`SQEn.1OFW9
%6Uf.p7.[%Penl?nr`'qPG%lYg-F4<*AG]68D;)S4I*MS)\s,sMp>9ZiN;Be=\fY#Tj^FkX,u5F`$bGCMh[^*hkD\B-T`$:4^\1<7
%T;UA8r:W]LoGj]5Y"ot9"^Nm\mrna0<koMd6'''I:To:Gr!F;&_Sc2T!n+=Tiai;39Bg]&J9Y2tnZi5EYlaL,!_0_b/rpb:S!4sE
%i"%sMATnrd$-G,RRSR9#PbpBH)9WH>`,o9_L0:g$JX5-6VSu]dUaAa4-EXM"C+b&tUZ@DKdkWmu)YMX<QOPMWB9s%?0Wil4G8$_h
%cth6;ggSRQJi&+Kj[q`[rGq!f[hN[>q]'G[l,WY^$10QdMEj).9h9?3)2)5j-6Xp\:AR9r)sN?g,B6[XEcMKmAMk9?%\X=(SX?aN
%(El]3B[T3GP:rF0@S_T<[2&4$/X!b,lBG'R6%n=E.=q7T3?`2@@brf_Qhc'biZ.Xu^BRLbC5J+i#BtDKiDKmK:n5.5+D5U2FreH9
%PsBo(:b0D^EEU!i$lo3t+po#W=H7dXOE-7d&L-T5C(6UeQsJQWn:e(_d[!5l.c2f:;&Go%r,@=Z`D^epdI:%T#`m.K,c9RSlo5Bs
%=e=7I0ZaE#kXoZZ0.$JaeduHfAYX4j=GFK@8WspIX#<I$LY"Hq:'fTH>B"<IqfdC-Z+PM%;(#loori.cm='RA:q!>?>m&?aBGE@!
%;TP#CY+e'q517Zb*8M%4`;3t,Mq3Mu4Y'f,V+I`$hmEP(O_Y;:NiT[FD,Il2//Tbt?c$n2S>801D%u-'-/ES[RNf/tEYq>V0k(.F
%&k)JX!+/,AglT_^\VE6j:iUUY@D\+t2l58&P3X_Dk%tr%+Jp*#ZLbR$2K0J'j-YWp_V*!W8!o.'A!oQuEn8*Z)I4"4$WM:k8TP<#
%A(eZfT?M?!2-><m-*U#mgtabjS5g@2F!L8=+ndqc[#f$3#02m"ge@q!lWC:\=IFQG3=rMYEZR)s#0t=aY@j.+#jG(,kin07Q4VTg
%NM6/U8[O`(C"YP^LfFqebjpO]r'soF2WHBMl9uN#s14n?)1_$LAqbu9/2rGt[af'=qI;^IAj=]NXTVGQggbmD-@CS4BP)=e[9phJ
%F?!qA<)uWJ<7e5Fh.iKLA4eb?k]Ttb9@&7!5]K,,B73NC*qdshZOr<J#rtR0GNMrER3^).H]2I_JV),SMb32EPXNk=l/Hug&;"Q'
%31fQ@=++'0[ntB#oj^?q8@%XF4VZ$#>=!#d=,4r*!Fc.e)=&4P9NZYD6B&oXZ91[h.[&P]86g4mbnW6@*0R%=UnHmPHt6r0Q15%B
%hIDo>Ag5nJm5Z&8^VJ>j94;U$3:J\GOd0/57t?8On"fC;9#DN+F'/3.bJ,3K+bqp+)3P4jh5N[pW_mR>6^'YsgHMoSKMIF4c598p
%MSp&4;4WuR/:_J)ZE@m2S0d25e<in&V3T$*1d'iYb=@RR:+3;,Sc%1pV-!)smn:gJ;GH<0<%Pp2$L=57%ic;n7mbD%TkAAsd&XP]
%XnkpT>FV@*D+\GV;neLA^9quM4Z3+Zb,_qG;K6JNh5piU>2-+mdqD6egSMW-Bl-(<4"dY+QdYJ=/PBj'[Rt+F-*XZV*tu#eYct^d
%W#N%_][Y'feOR-!cuPUjm6D'tq;r?Ioi``JnLF4f88rN_\;=9km(^soXB*"4\HT/L+A>^>IOlm)\(i9BhAoQRX/"pPV;Nnfq,E\e
%2em&+\M!3dX`d8[^BO)"3/!Eg!ir_\+a&@cHQF22$M6WM8kCYU'KN@&_^7C%<C2HCUb:J2F_[&`T0`WOFuaOgdHbpqB%;I^VGWHZ
%=_KXSDO,NpHnV&&A54Ek'B-^Z6@h=d%(u'[6f>RSh?s)f`gN=sQT2]::*u!S-60gW\-E4IlY[^!!sj'0[f&hbS,c@<#J3aTPEV^b
%)+Mli2OFsnQ.!:\VB@@q%lb."CeEqf6,Oe1T!uEPr"8@I((]MMndlk,Fo>;2GDHIn-FDd11J4$RVe\1mpKiPS_FS#P$A[%FcP<Li
%Qu17!0DO:L-B0qYcldKnI-G;W_e"joh!Rk(Xmhd_]!eq[Ncj?]<nJ$lp9SL@)HA;)WS6XfiS4b&jkJe_S6*#m<E!m]c=a_7C$4p5
%ZWTQi-W,Rkd^gGl*^+#@-W(jFa+@Xm,&pW5g:G"6gKLej7neP/C*09"8lp?^jh6(.0?67+c_]@\EU9J"=<ofVam?LJ]k[*42KuA^
%q^m6Hipj/M<D0$s`n-Jn2ER5@dd#A9bdFT*MSGDfcC:-:>*D:R*POAa\bdX.#q%ong^0Z08He^(IXtI[cWH_oJWg/Y8[rJP7+./d
%=Qn\^821L4*)[TNM=7+AnI7f#5sn537dd91A>CO&.((5IECXW\OA)?l(sqpHA(l+*d20)-H+(QJ,PHqH##>@^k;-&d0X>e</Gm?!
%#u"!9FaP1t;"[B:"G^p&XCe)0SJpWYUtViUB6(lU;@q):,!c`K4j+[YFFpo>A)6(]dqKuA!>DoXM/B.%2Ntn80M8Y^%EX:fYSo%\
%)XcX+LMD+h![cjp8E>IDH>Zk8Y_l)bQZQ>a`t:3ccrA<9Pf#SQj7!qAIVp'E?I[+R;3b!Ak:EFQ4#ShH9e0,)cRa^?>F-oVp1p<$
%,TB-?GWKqWk2KNJB_XW-&8];?egS$?6+[5NG5Ls=O>8j31""&;0bR9%(,Sg1,EF0rr4r$]YQA6d?0lYd+%J^c?XF"-!TVg*3Blm&
%%U"kbD/a`eYEP99V%&6eMLuFkZZ\/+pR'<)T^)`;fIC.7nUjfq,)N9or4Ga%JO'DdjiWh@3ZeqGTfUknL6RC#Tq2/&iuZnD[LL5%
%L8UJ#X6(q9=>aUo5*BC4_)uut6u#7l*^/rPSW-)kFZRr+4-^u5Rl9lP'tkE9e&[*p,7CR'OLV#\M%UO7SX<,G&_%XYYs`d[;@#lV
%l@LV<\Qi3tqD).U+gP@kN?4,:k3L9A@\Z@[B`:b'ilo,0/$-)m68U-gkXtHc][5e*ARg6`;:rX89`n$Zj?sBg/j%s,nSJPg?Q'#D
%5pMnN9'"_@A8S?VHD*Nd$=4>ahSRIF%=>,MY&UNS]ifidC64o&BjfOiP.OS%*%ROASf"?U-:0?C%KmrcmS&Lb'@H6JSr<*[\'/<E
%h`bN]bL$g=hnV+2EaL[:QZ,B5BMl@iU4XY05\p('91Mh[D=SE.P]#>o=rOo59Ib>:`#;)FjZ6p%H$?68jG7bYlQQJ)/QL*0K&d#&
%Xsan$(^G1MdU&,aA9D_8Z5kFAOg-[A3"?#q=bI<L(R'M7DP8Z7=tH"^Xf`@!Q9gK@r\bN-jFP6@Y/u-hja^2,]E_kXB<<d08V.?f
%ZJ(!Z^3>75kQsm&`3J\IED/qk.nRZ?Sks+J'9[*EW=+jl"77;p$P'Wa^/(<0\V1+kY-(;+j4sc<k(tNt)Dt:?MVH>/e<;=%he<c;
%0*0:)//^bV@DR$El-Hubg#?Z.#,8j>cXTmKn>B?4%AuH&1UnCdl)C2dOCj07*'*(68MT!l@.m,4i_N]t81l'#"g-*=C*+4.5kfL4
%AG?/P=Rf3fThpO"D`k'i^boMjAZ;#">,3aUph\@A3h0#!-8R&HHokG)"W>B)%;(\nKGI$^&#@DRk+5RHa?hqV_g.m(=jm/EXoeTd
%Y9uj-,*fLI:'a?H,^3ZRDTX3<-/C&J+gi%&@mUC\'+kD&`+`)H*dJ&2,"a*e!ll=\D;(E#qHHoGQ7U4pISEt2$/d@mL\ZbX'Tc6o
%)NQO(,80I7aLP+Y-'UB/aATu3%lYH7]1(f6j`M#COO_Vj@M^0f+dGJQi9FXeKh*gDf&V?l@b(TtE7>5D/OG0n'&+CD5o^e>+7`uP
%gQ^=@g0JLtP(s_>PUM]Qr$;S7X[MPjM:Y;\F4q[%7D'WeCimU=3JlTcB4P9,k^L#%3`pau,"K[pcRSEt&>O)1]0FUX/,0<XfGf:l
%hc4Mkg+X1."HD?$YuT@[lXm`L^U0b8;gS5!s6aX*i_!?Ag+)usWsQPbUX\)kran&@%0?1;`5\XjD<,-cngQ)m+NL7STtU[cXsLnt
%/BAb<_8.QR_'71XYN8Zn)"$c-5_W7RfkL91A()JkgXXN_p.OZ<B`H=X^^+;T!daWU7(^JHq!Ae=aeG\F$PgJD%nd5KKh1Z8OIqR5
%qMs>Je+f8Z@jQ&['N!8Z$Xaa-^1:AG2(,`2Oai9ZajntW+4J]$m>I?\_J/qaoUg2E$;Zgbn](^TodIiq1l(ZW8k+qNT!T8NLJpdi
%UL[OWHbWc/ca%'Jm#lWk<L4;!@qM>^?ZNXKn&P(,IoSHM:;?U4qTgk/f^^53oI[,1ZK<\h8@R+$'M!*qlqBQ[0rAA=F.@qo00:dB
%(c<P3Joi're:Oh[?LC[:<?[1]UFCd^[3HkK'q9nL6$WcDK_8d/WYKJ1C7!L@?[M[O^;I>&b_BV-1>d7Qa$N75.uhYI#0taF.]2-L
%a$-^a:Ca9/llF(i:O#2.KQ^(YZIcKRF8!IQ0%HX4)Vf-N/?033C^Lqi[EoLpn+*72Qcn!ti=Rr-U]@OT!K:d2l'h&TOWe$NqRahe
%13;Mpj<l#7<K&(acRBFe*c`(W`:H[-1sHpNE;,&J:J"19@!7Cj:5I1HBm*q_3t"sWC2Cf)=+2(A:]S`e+[%i:MJG,GX?fCQbYN,U
%A*-,?m.)joig:lGU<(gY/1&h--.A!)_HlPod<*YeSMSJH3aQ=G@HH9P;h-Qf\!BMdeOoH[@Ud1(9$t@N[4t3I[9J3!(c*8rEYQen
%K2e]n7gj3rP,*u;<JN-WH;4PA,[&S`FH`@8-8bWc)ja,]4:D\T&F3m?ppWBm&U0;&8^Q*%71q'QIe+tXD1R>2,#*mS@T[>2"Oo7O
%Fh5-DORrbh`El.;9Dhn2c(jEZBH]mr[+7`*[#3:n(mYm^4q'OVMbMKE.k\lX'^I^^VWBUSA0At#NhA7%og,X#D<#QFl'mof?$frO
%dc4mJKa48W^M^i-WN=L$jHY9TI2gK7M'J?]NM(g2gmn1U.+8HL5WI,#PNKGAP"g"@$-=;,6tmr"`b\SqMNkd%-+m?a.K:Fk7"D5+
%?Z6Im/F*M-92-:3+JXY6R#-^.4u\*(qOe's$a0Ec5TWI#]rP9qY.Z'E#4Cs8VmQFY03Uc)ifo#uGE;7e+<9`HS(u^5>Ympsp4I9e
%',E0V>?[^&T@,JG(^Ac[#MaB]WNiUNYjh!_@*h&KU,@X,+<>A)]]A%[=:e)]E"TRKW'qo"MQ@^/K1Mi+:B-Kt0.mqEFu5X2OplSH
%-lVm_2uJfO.1e$=$$H]Z1IoB@`Huf]9;&BU"nJ>&[X@#LB7GV@@^+DV,)5JH,eUlpXZU-aq@RO1HO?L<U"0F!(Cc)RiGY3egTX4s
%c+H$2?%`8(!C82U:#j5k6/+s2?i_N@Zf</M[Gi($YpKJ(1pOc'=SN>,W'!f#U8Ga)"_bPoAJ@WsX-rH0>/r?o$^@2F_+$R.?bu`0
%XlVGu>WE>-:S&<qO`&)Yh7&NMJp0-jZn;]i\rZ#q\[pn==TeES%:h$_16=&&,dPRkIN[6[T[CR:HWLhOHZY$?Te^#A3,>nY1,__\
%p5iu+]-0+rbsE"\M&(q1:p<hU-1#$47?SUa"9mG!EYuF(h@ZjR+Z$Vrd),c]AVYr\^:]Wl#cEWGAD`rtnHlCR2+C$<G]EB-b`F!`
%_:f9&7I[sM/K-9+D"#7Bs$CO*=b,l@CNL4MR_-iQU;X=%[t6YkEgsfJG>Ak_rL+Lm-5mN0J;Y^!E>,H%c8eLu'k>>qrGnX+:SFsF
%8n8?U5/*[CZpedF`*qfQk/R\EQ_A@B92;HELM`_`ipt:d2DrQP9U8205E*64(_q`m%uX;oe!C5;Yn;1JA3]2S;Za@n'R",c8r#Dr
%AYTiX0%%O-&W7QGF,8kt?b4'X\E@Ak(7GI]_X*OtI4bjQYAq".*,9_m)m*rnA\`gRaKkPu-_QJk<MNI6H>PI71WK\M!B`P[Q&r#2
%6o>41j"^6H9QWV^N=M$K:rPmo^?\[-")+*B`75=#6*cUFNVT(+3cB$cWJJLh%2L2%o5Z*&RJi;),Y^,;3@WfU^pf0[D+^VJ!r@U&
%F^]^kAs7+MPFcSk"#eu-Z4u<SeATn:&MOFdlf>5c"_P_ZcQ'A?9ei%KZF%D"L%JO.?J\alXr_$5Vr49E0SXb40N^3,\j\<X;qGCl
%^RLW/%,PCb[cBqg#:4%u'urGR_))L6!9>ZI?f%:)r<0S?A-h,eXTZmBC^uhk.>]9J>&&-_oe`<AU3f4W-)a1or0(uRL+EiIjoslY
%6e3AXco4]#0'XrN*&u$GoS"aFUcG,/_bk_)pl60..7^!&*EH1h`4)Nj9Lq_LgCACA5tK4s&b?B>K8mgsK^iT2.%^\-![ibKK;2g$
%d9C!('-nI[']0`[N(hl\_\'lmf,+8t@8^%F&k_e4pHn@GEQl(Wr-,C<Vl>r?$]kblM+><nNY"i_$8a^S>90Gh@qT7JZBukV&`G!m
%D=C+D;,^S_fN(%5r_5.qWp?4-3[=d.$/QtRqA3ppGIh54$VBIsNq]I99u/JK)1^HiOKj]Ho?Ac0GIbGVY=B=f0IZ0Gq6teem(W/K
%=6I_k7C-+V:T!;3/6sLM;;8J0^rT_G?Um$URlqcGJ7XR94JLkVro/r']Q>KH@c7j\Wc&o4UOh$%J]Cp6=l^OQ.B10l*btF7*8#22
%3eS1`o.1"T*!.60KF?Sm@5APBW=DK>#*4`5/RJ;jho5ll&Qn8$iC5#r6*h''"bmW&E,2F'ENL*\K<7!553m#rK\I@W_H<tNq*FAt
%Dm3D->.tQ\>hMjjlAtg[YQY2j/$Olo\3%M$e)^'jFMoJk]9#?73/_a23>G=S<oIFF='Wni1le4Z[+TG$I`)(NY7oJ&d&(fS;nP^0
%"5$tPm021.A$T[-"f?6n,Hu^,dFZ<eD8`S^=V[?TWO@H&Ds\t*4O&%K\'+G5EuEbcm0cqq+7WLPo,T-0XQi2Y_+]8cP=n]"@r$?7
%<'`Ii]Gb$p?N3W%S/SckU3Z0b-M-.KF$7SMBMWpHBYlCCDh-E*B:&:d_N-,9d?+Norj\UP*?4BF,^!U#\S3F=M"Dod?4.9m3b7FH
%8\IWl*q`)bLXHDs:Q/6>])#=OqKA(`PAuZ/\CUD4Uf-u%Njdj8p(G8R]AE(&Jbe(/9J%bHn;e#]7a>2[H3`O/aMk%]XsL1d7/8]G
%9!@m&o!La&UqUs*Zo-gMY?=b0?V4Biqq'coTBG/1?/,l>`Wp"'!FqUD=(pAtC_kdBHm[>`CW`jF;E=t/apkr&fO6RZGg"`J0t&T<
%_uIM]qn^pWB'd\)'(e_+:c?n+D6Xm07;M";S_fab=r(nrYN8Zn(iB(P+Ce,Q\o-5%BtKi0f7#1)*UR3dZ!72_`eKWLK<`1AZ.&3$
%SbaAHAq`L;cdW-=Rdt7)PV,FP1Nj[\(`RZW7XMjXD#(JG8p<f&f3mtA;`!bFA,irqh;iHF]\!Zc`gSD]\<tdr-J)4;Thng\Er37M
%8iNLs?OLDGkt@@;]-qMt1]KKhV5L*eCG9p-?cLacVr>lBN;[2)cJ::"DKcqe'`qf-;\pEhb-121\f'n[fR/=#ASbIX)"$jJZ/sS_
%.6S^=?\>UfHSG.H_q<4s>qoh.AG7"e=\e#6UM5$)\J8i(G$9>XDab(8&%-fAMB&JIVQG;^^1R:XmBk<Rh*8<kL1=_p1OjseG5N*D
%:ZB8KqhpbjhObWAmOSCoO=6U`rJ>/rq=VBb0mNO@Y\l^d,nTb_#]H%p=A*%ghX1:]/qL4<BmD7\cS'k5Dd!RT]+T^V]9F(d]4ku!
%*qq@J6TD[*$Hm;-JrGP7l+1S1V;2[4Bsi#Irm4B_0=h;#mS5+K8'6[l=TWms@o0qH"BZZV2Do'b0sN,Wi@M,#n4R0FWZ7kuVENff
%!Vs-18q6&"jqh;)?[$kg=9>+%!hm3[)h[MVL#D!?VFdXm]tJ-R+*Te@EWNf#_qhOJaI(VH/t7#]g@_u1=m]IjX/#W;>68/UcP(fr
%gAb7V+'o"pcXTe`ZNOAN&N2LX`A+Xq3\I7a]8Kh=SL&fU*2>[R/-5RS?:n9hqsUrr^@"JSYlm8("N46lm`uJC$),XnXF!Wa&Qs@j
%LED=q(,n@.r;O?H1n.Uu01]p24OLU@2qr>ca_A<?^>@Y!Vbqp"cOEqJb=:mMD0i>mB3/XFfi`^j!GF[M]A`DsSqC'PE81Pg-lmgA
%8KU&lFA_AS!RMd;2#qrTYR2>j"/+#@qIQF&lQ!UoKhGL^T:X0#O!4^pfET?Pke'?+jGa\L_krckEXt9;4((iZC21N6%!,W>-Mb0j
%2YWPqA=]&sfHCOU`kNocEB%jQ8',DgaMNs.Lne)8e%b.6N.d`FN+l].I%-+dZ"MH;=m-W^@9FQ._SEnQ$ie*=IN'7:N:?pG3uLU7
%.msq04Z#G?F^dfQQR(_=,c,3c,S(L-rKKts<2:bC/=XIsW6IAp'Zi?]hu^c5"\JasQ3R;JW0CB#$f<X[9aE$*%AA1O6PJDL`k`,5
%?oNq9G*J7t-PY5=N']N5SL;4-RII`Fi,T,I'17n0k8"!?JW4mfge0U/<Lm)E+u_ZH=\P>9]LXfcK98R'=#T8,nD_=M;/Bp:,HOSt
%a,U/6KS3HX';9iMP%0Ss=P6Q*;'6$$c,l+&ZrG\M/CG"goO61Cd+T\s]ILS7kqKTXQK\NMiK_IbBlssuQ+%6H%kHI*/4n-[g)F;I
%o.`[I.=rZh0YP`NI&\l,YES"Dl3u'*,*H>-K(MupCeV82kkRMtn$r$I2H-j`"to#VI?S$F5_+:7NDlGch%:[=+ujf/PV\f^rt@GE
%-kt.6M[E8D3LTQk$=`)cCJFM]F=W\8LllD-"->P#bJI>DEpI4>mg$/ee]mm3_&9]j@3eQ8p&aE,;hKlIi1I7DBL\9&YgqcL78>]:
%=QSCj1a+<&)%434lK\VG&ChKLQE)VN)t:n^D%"H+7-m:$LV*)Dqu6W)pEcr-#0D"7Jc<RA#jatp3=ed[@>!Ni]eJ)#dlb3Q6^;1c
%[Z(4!j.$cCI(*Fk$u1G(]t50Vb:,2%1,:V>R>jHC!u(3GCq;@8_Mo^g+%R1;iru"cjV!C7G$5W`?q+7"k2*+s:F]###1$7J,,9Zm
%*2=in*5&DNm!BY5,T9l.rj+B?$I=JccpjLV"XMFA)94WGkamL5?oY\ZYsJ.F@Q'a3e2`RJr,L.:jF;IQ]cRIb@k75!UB@5B]AA;\
%LnrK!d=g9COc0;N,BXEM,t'XM%)M>eksuJ8C$pU:4ncdfB(XS/g^M'[r8XN;,]>362k-p_7D+F]j_Ika2[4ViES8mD[:H1e7(1AU
%A\;XMW2HLT@hiDXa?6Ih=,;;d15noi*tsQ"p;h1eE5(e)#Y8pt%qL:5i+@3/\!p+0S[&BDF["_\a32H_^B1Ok4Gi"g4QTq_]7Td&
%6c-3W:c$!LL_JTsk=IKh^9>'c)DW9:k:9kN8#!"&MhJsp:d#ka,;W?nQ/%9R&QJ[7_frjk^+SaR0&#64-o9]kYaMRA-.Ha[eqG<'
%D#e##KfJ([\[+3a*AZBoI78EVPb?m@4c;DkOSmSd*,mUXd1=G'2\^[9/iK5#^4u'aGIMN&9=cRY!]rgd8EQ=E:l`8Y'K,^RK.R3/
%S-e3jr^GT,[)I@$5U]hBY'(_$/f_$K/i[>DD\;]Mo7u7J479(YHir%AkQ(uK91Xl/oL(qd9c@H^iNQII]+D68q(4qX2c*UAl64)i
%c>])V>>fM1*%Q,WN["+6<`o3Um"2PMN]\:EJfWS_,sp>mN0=>&"&^fkXU(;U1s>]:<(%f1j4$RC3_G4A.?"9/(W>COTUc(&[Fu>*
%TYa"Kpf6;'`7?gO(ZXF^9]91>+U;R=KFSPFF*bjYhS)=F)##db^Fj_JbPo00\\\0W5-=Bu\T?-/h3Q+[lu&'^=7s1C\"u3*[k`b(
%Q0Wk1<U%6Q/^PA@q=Se&3`TJRQ9k,P&5[RsRfd#Pd;sH(1/?\c!.bme<lsND29IAZPV@!%dt7YRQ_)@u7Y"+Cl]5NgIR\P8];G(f
%WaG5nSaf$s^U-*8Y[//J(LFffi1P5+O,l<VNUd.SIb47!:I"#gYG\(h)[Q32?DSSAlS\?oDZ5NDf;Ue4>fD.@G[/Ac<:DI#qGO#g
%ntk8acpC!B;"<@T4*o/*JC'noOB2!Q*]F/ue_j?p/C58?s&Ho,3n;R"5r'b5CQmQ9L#<;B>c:^8Cu]8e.Eead>=ptQ]`*i8RaG?i
%V_#?Xp8Wtb.r)J;2Ytmtr[Z<`jg=ma=YS!QS99=MYetrQQKt/C]`5L!pGKL/>qXYBEOV<,Y&r"A[)!hX%u,.MaupeSnsJ192C(P`
%IsnQ]h'@daKPMHYLT<%l%(5YfcNr&Z$_6u(Z)Y:3(.%N8I0&RgP_(0hG(6gbOZ+g7<?/<Z18'l`rabRVM#7\M1n_#A'TO!^'<kf)
%R\g&+"o9+lc+Z%^UFZ5*ZEb?++N,EfQmH`=X-(%e*rCTGl31DVIh-'!nq1(rOaf.$i$0KF#04*u_<;@l4j]<'1ke6TDKI"m'7M%A
%s'T;&`.308ciNNV4E]8-ZUJPD$DTL1lM.Wi(Hrtce-uO#Y]?H^;?TkZ`SpikF[?WBTg5=F@m`!g)q0$"<Y8#c?`EL"Hk(1L5Ak9G
%`ft3kfV$O8HFU213,?X=S/4'pp1BWWGss[C-U[o.:Dg[oB/80KF'PkZF:anrlb+c4M8M_lD8[Mln4Jmm+9a/584pS;&NfKVfBJ\p
%%o#hGaL[16<VF-dX^86&a)OJt+?u53Ep^sf*G>*fFIZWcn8\6>NK;=G2W>g+kH*#2m<(O6f7JK9(u2!K+,^dr+W]d92]:_7(S!jR
%.`RD?W^:N,4$es&or$?H0qMYFdP1Kq<X7^3<5(+M<4n%!,&Cr3@fujkF;UA_XKDl^mAiM,Cp<EB+\*(G1K+8HNp<:uKMYtWqu_:<
%XUZ)[;*U!M\Bqq!((WHC2Fh_%lGXYJl8b3b2&aK#j9RCgA9,(1Q2"(D\pWB<r!R%:-()7Jd*q5*,;Do-m2euncl;+h%K)bGH4du6
%^.o?hQtF\)"Y#kmV\fVSToe1n&W1P_fZjbI>7dRhX@d)J-a(Tq_"Yf7+%n)\3j(jF<.+eN?4^Mb0($kR]LIO?#3+S[39/Zl&+>Qn
%14X).50](OL964A#i6t?QDZ?H`J*]NML*!;"`\]F_J92B8AN?[5EFC`R8;"SAj7HN.`%UkY$O"4?DH1A]*J?7+S!K/c\?Zej_UQK
%6@m``44l_YnuU!e]R'\:[hO!=l#Ya3r#2^e,PW8ih5"H<`-,)#-Go,&:uinfSa[(rJ8ZGd4$le6XIlPQ5qVZm7AWf#G#h!Ss.[9:
%d9h3&J3AqAL6(s]Qd:TgXmY5@A--h5$Y4@Sh?/ei\]\(;%Y2\;]5KWY^n=c\@o!Zhck+94I8F5g.'GduQQ`F7ee%:1I/]hT>;]0p
%^A[;I%<Y'Un-;2-\bHW02-gEqg.;MkU3*<QJ6NuBD:F[::>O>0ZrJlk!W>jn`r@?+,*!HL<BuZc']U]hn5Scoee%.!q0B_iUJ8ZQ
%dl&cdngtaW#%o(F"bm#,&F9b@kOENi#%C!HH%-MJk6:D7`%D2i_2*,\`3+tO_Y&t5lPD+U`\,m^n-=T)\_R(t9r\nho8O\7Q8^gM
%gpfXdI#3S:DP3f!(qE`,#G\mWadZqR%VRN\Y.Id8e&-4s$?8Vua,3F^KQOtk*,n4AbAS-!V8/Q:MuUuj&i,!Nm`c:Eil;sCXg[G#
%WUF,?%W[1dDJUFPDfC:*9YCJ/&EGGTYRbaBWf(G/Jc*AG?5L4!:g]ijCJ]Sd\X)adg?ZH;5)H')Th"\K%A%8Gi.`u:+_9bo.$<L"
%e@[53!)iEcE5B%Ap,6"fpKfk^+.,OfgjXUc*t5Wfp?IVTmHT(o_)MAr[(4,7RE\V&$9YiG=fMSX$[V*@Q2c69]hKh<(4U]uRbpgl
%W[eM5]Etoh;!13!Js:%D#dVSP[!Ho:P;cj3\c8us!8#NF-.2lBk,1kJ2ED!66gQi>;3D`qmI(?Q"i8bqZp7IRiK?2G!D3o;7%/d*
%CEY@9"g#X2f#%3P'QRCNA=s"96u$,*3M$YfkRo<`mMOnOM%,:c>r'12UpH*e$iUdIWfrWAQ[c00dVq52)Ne>!?*rC>8+3Fq-&CDV
%7:]5OXUi@GikjM;UVJJe?5QJWji)"H;KgIY/E6QhVrPV+DJ%!C:=TUEoR]p7^r&;R>#$rF(jk0UVEHQ&?dgRYHnL4]81E2?0",(7
%/4PW:V=P)L%.9"EY>mm+#p[+/eUb*PdpmNTkGe:ITSY=1X#e(dd]T0"7@k)3in]6:IusM:Wb5g(&9G;-7\f\#hJjLpf?W/%F)BoW
%G.mA<ndrh+P9PI<lTG.oJkQ.9>p.f=&6gT@Kse!)ZjY6H<2/C)ObS)Y`h8B-]reY\`T;%<\%U9tJ@840QekMdNp[h_-')uKkGlY6
%im@$&OFlZ:lIeL\bOFlIMq*I/?FB+LAb??UPG];9;uc!Hb5'_6Id-^Y*`q+N<U-he("mmgj(T^VCC"&Y2UECrLr:(RA:,a'eLP`\
%88GMG6:C7`[-Q$KOhdR!6?][8j%A$8Td5t5/;iUd"PXHOB>>#Eq?c1mr5-?09mrb]h:`GdQNfLXlp/AR3b/eg("^%65-cAR7cnoN
%Sm@J/So<rA6rg8D?k%]='/h)fE`-BrQp7X\!aDsCong&hY\-']_6,*TdljF[`7D4<\-Loch3qb$F3PBOWP59-kDbNU<oc;h>CbrG
%EXYbZ5j)(b2mq[W&7`DAa:_m*&85;QFUN5Q+Dm->&EZ9%j",((C9eIN\"'W_+q?:1r+W:X#t*9aFY(^&Unm26*EEDr]o<`rfS<kS
%[?C8`RENQA)&#ld]7OHmo\#Wu"Z"g`S#h_K>d#%'9"n2'mtMbaA!KaI>Erd"Me""Gpf:H\BEF-*7RRgEUG@QYA;GS%rtU:GJ)*,U
%3A.2a`pe/5#P3.8l>j"t%U1!O=c0G99#qdrnL,<Rh!"2;?mZ,j+)_E#97[.m88mi$795"NbP8<n#LIm[R863KD1oO!lN7U8.]K-3
%)"O9I7<&f:TE+>o:4##gH=8JR7'h?Q4&qu"KtF3fUqB^H0S\_G%JYGO=gR"fp1KFfc+.&L?h-7Hf(a@_oFKei<09)_N\]8?0Ytb>
%NY1+*a2ECVM(XmgL)jSS)TBO/Dc\"9DqJ%(1L171WmDMV)r?r,P5[k]LV+'5bg<XW@Q,32caU_Q(.`uh@@M'@+pa">UGE<:B#Nj"
%bfYp?h'fMt'PF]Y_RcYJ4r)s<_=hR_2?gm0<hC:^m=^3bo2(1CU"YO+rLV@`]f#:p:&5)(4MFlDkrPcR?lOg3k/K9IK15-sj'ItI
%5gg-M%h\:/A]&ci5m]2fBP@P[7p'$4!AL=2[?j5O#;Ga)iU4>sjjl1^T)8t^*b09Da-hA`GT&$B,bNc,k<NR*_j\]ddsdn2h(Q$n
%h\7D/$#T'08E<f'>!8ug@sTr+6R7(ub'!u;K5nK9aslW3G82;Uc**[c',2<?"HcFd[+pV[Ce'`m#L^jW38)DEn-?c%qi#?BGmnY`
%i2nA#>%%d3L;;jj1j2lJ(Zd]&G=@*9$V,PC,l9Ce<TFqi_O<8acrR.O1[4:C\V7lrjr8C#q=Es#?]2t55:^opf#jSQMZc4^k&P.S
%3KO?q_gojHgTVREP:.I0A8CRM5kVgp!K6SGUV8a[N:1BG9TnP;aEq*EO'PQd6iZLMBZilp^RT%KXMXt"RCJ-A$rW@4N==Y`*Ga5?
%P:Aag;:RZ(pUNqi^PlSS!1JI%nnNnZd]s+mg.dXbhsZ]a,N!="."Jf-+>c&K*l8$hR7[&O)t;\Ij&,8d:HR@1]*gRDrgf[[&H>&S
%=n72DYYh@I+8,'7q*:OZ]I?^(4Y+Uja"G_'7\:bRR7q@")Qb)\)@TU)aS+%D%pUZ@"$!To@&qFVeZ7Nrkl(H$WCFUYP(\hD3;\HF
%GVl!*]<(A$9-D._7eeAGLCNDYYd"tP!c4:V*^gbakNLHaR()>h/Th$P#G`WKM6614!Bf;ddE(qfS3QB&cCA1"%QS44_shgm.TE%\
%kCpS,/7kUN'sMKPcpGu.NhY)jiXr/Jg)5U\N/:#,g@#(&#jIi?hU?6TG06C;o,n.B3?8tFFTae@]s(04`S`FWN<X.U$69niO6a34
%)mFS<?0f:,lc.)/4:+1=;+-jRZc>5eLl;pcaUNTC&Ibo@l5aE&I,\K5`>`qHNd,oh4L%S:&C)E3[5VHPi=2\ab1gN"e*$7HZ)Q_l
%ct6h'!*63D@Ype8=/g=Y-rO;1UG1=Ic84D)S!5#D4,!W!`n;[DFTelgFg-7:hH>hbLG#iHDr\6ac[C5+6P6k>"#^Zf-8d'[,O6Sp
%2ORK82difg"s.Wfk*IdpZ+1gTDps"pJ<Z^N]SIMW<!<IrWg`j?Ueot=3!g7;]CZt!M?/iL[kOis;Doa6Qg1L;D)1K1Xn.1I"ZmCl
%[?aN4#pp*O,l*n#WsVY:\WQ\X4F\,Qln^Mb[d2coE&nrE1aP8FAs87JDYcQ/gok\+O1D:pqM6p&P-$@"6fDOb_XbFcaD032o#k?t
%17#`1<%66(*hXQjNncNH"P`%?<as:Q):m0M(TS[8^^dmNVO3*?QA1kD?#0Lt9`]I$kCVN$MIEQm;XN>+""L?_AaGBk%RO,4&bH*#
%7maO&&e5c`pF!T#)sI5a5\k%W@i5'u?e,e6<'Qslh^N4Ri1c+aG!@o6aR4&5U1Xih\S^G!Z\&d">eKkG".Vj.Z_ue*DNiZ-pDXH=
%'+bUdjIR"?R;CUe]pM9FQ''qF3D9N"-!KYWSF?$5`3gWL!]MX;F/9U7k+4Cp56/"VCJmH>:b3[ZchIU*8UEJ6[K2g][,N4g;2-j!
%eeY#G/s=*Y'4s_g<&Q`4Vo,)Q(k^BN$>aT04`W#qSFKE;rs,j<@LsE>U8CtI#5q*W2rr<LTUOh-j22\/Go!i%45I'=Qlp4m,<];2
%rm,JaDH$m13ts^S$!dV8(0'uk=@81gV-]uceS_%@4El-Fe8RID_UJOd06QSqq/b$B4ZeEu]G=]fYo3+E<kdtp1;2g5,#OcL7\@Wg
%Ca+VcksaS,mdaLI7^K_6\,2a;iZ.dDbA)4\7=U>a\mr-q:s?=:XupgWO^E0K,2&>eJ?P3bZuQ(5^78Wo"PlJ!R8]#siRoD8&'$7E
%%(b$<pa]%m.Cc?gV'X%fLe1ieWtfsO,*GjD'+">H7:J&jX+HNDBmc&C&T@.+<oI8P5<lsip;ZiVos6]$Pnfq59A,>CGe/`q?s@&d
%_3NNk4u(gdN(aIff4O/o"n6@6T3Wa6O2bA[O=bmO8[pHe+Q8T@>o14We(Whm%R1KFqM+hp68tA0=Kt"2N22AYG2`P!O'TnKS@h)D
%T[P)MX$bpq*D&V*a7SVoOe-8(</B^73+]CJRHsp5Js[t80N?fq6`s+-YC[EmK[D5[)[8t]o/D]]R`J4Va?Yuu/m2Q?*F2&CI8F6U
%:q?TCQB/CcTnD@VPY;2N5K6(3aJ?k@I$(s8S$I4*r/dqP,gn^r#<]JS://KUQqS(ji#!OkQ0&[6DhaZ/@B9m9A@i;;"!7pKjTa-?
%^Ag5V*I%lHgelC@8P.tknZP'8jUf-J/T[N-MI<3#gm*(\aAs`LT"UARa6mgO@[Hg&gb%_.L&R'Uj]0g)?Lq;5j<dF;:BjRNF-&a]
%N$\&R1530nDn)c?Cr$%DCH<FpRu[8mDa?$VIl)O0d1@hINp50Ph_-]$8,8CF<r==:`['B%Q#kYMYX:q\!8>"34:s\Z5i6"lU!p%C
%ma>ad;cSuNnHFkXmA0u>/o[NWFE[i]_!Vuh/D.hi?1tNf#'L#s`Ig(5SAQc8@F\gmOsUqQhs)<c,XqNS/r.nU?JJGTjWJkNY,K!S
%N4kiiX88McRNu!_RZpZ[\)_,ha%Lan=(Mg2bXZb_j75=>3&+\WiDf>0>+/2a`)Zmf7D'5`4J0FIeZK[0555qM6Kn(`_!F3H=staM
%DMi;KC%3.\DlKW,@8pd/#=Tn+M=:OQ^q"*e>@>Y'^OS9'*l\@'HbcN_fEIl"I=X?7mRE-^%FXLoO\^Ws1X(gJ)5\fijud3L[%;_=
%oGGtc>Up"Go:f&&e3Q0<#YIc5;?pR!Bgj$.\-F@>"]$-gaR25:k\[=8jI/Q\'-@!opIRlB%\uio\.6NSj34ZH$"6>%*6lS?#3hKq
%X/?D$JoX]8RfXF0KgU3^"rmYG#cp'"^;/6mb)LO#FA_.+A:ne%guNDV2sm+N7$X7=6Lpa5T%"\L(XsAG(XsAg9iG\G^ua,Rn8+j-
%G\H9n_DUY)e,(K91rlfLC-p[YeG>Q?:q?oTb_mrB/%i"g,jI:bnOBPDOu<Ahj)B^e#V_3q!]I='GYu8Ml^0R:m1"U#U=7gC!-$sm
%Q)#.7H."?bL4DIq1hZbVl!UccraNFHb,/0tDJte-elY5qCRb<5fUMFJ6nP6'?_YTeFifM`#q"u,;B<?kmCm.s7Si%;p8Hfn/Z)ma
%R)-o0hsjTk4PCi04^YV?BmZ&\Z&KY5G@U<1g&-l,+/bp$i`-?/:oT_FQoGkKp.0%&AD'mTh#'>d%TJ%/&;4<J=Hs0h0p=Ba>Cd\8
%F?#1KKMo$'87>Tbb(^>"1pqu99?02bg;q_KIHRUK)-8T[h)04X.uUjUat19Y>eGIIpt]&FIGlUa^I&C)Ler)H=BOZH#rnYh+<Hrp
%micLKR`/.fW%GqH]:C,uO7\ob-5O8D)3C:[(bQ%P1<0SVTn^_^"<*gbau3G3q^S3@+Pn?d]HQT&>V)grNsIGk2'<<L13aYC3#PIW
%Lfe+q&4<,L7C"(iPD3tE`FR&s.MH@ZhsK'!>!g;a)&#D=NcY3t>]e!6&!m,Smba'&Cs1!7BN-0NJ"4s,ph<AOE[^e_2OGG!Kn#[l
%>W-Cs;ER4\Z`<W[]8VrIP$7n6j:Ek^ckJb\N.i/O=UlLF"aR`mp]m8a18/p8DZ1%ph$Q6B83b?+/'J@F3cc^-5kd0=gPI8AU[S4k
%/57;]D?Sq_&0&];CpH;UE1r_Cf#R9Q-]=+Q+.NFL.M_kncWiPX9cBnE\5N.sXb7XI?BfSqQWj*O?LjoMV]dIV]bgTohtsjIAR)na
%VTJS/h@6T]-hQ7G/0V)[GAD`s-B`M:5'En/cSJnF>q12Z"2q.!ppnk6WuO!)Q,[cYi:(O(qo"S*Hu/&>"MoR3o6CL/?O68Am9:FY
%d#L:L/mrt"/Ta<Q+on04aau$([M\B^kg"-q:(Xn9*LfKP)M),B<Y)c)J+2o_=SFjG*>kV.ZrS`\-)Pb5E4\K<D&^9H#uluK\Y8ah
%QqVXA.-<t-0(HAIo1?\<@4e_U!!OEQG$D$H-:KcqGDjrb&V2%'VU/_0h]+MmlhD5%JAYEId#EM[ll#Wqb<aG_$Z('<;qs(0#T!k.
%0&ZT-i@s'OVn::-eT$.^3[C)81kG-/g>sYkS!!(I_ad<!6@[Tdfm!+1GW4<QkaY7r-"CtI@O\3oaQoZ:&,hRf\#c0&l,PD"$nb-m
%^-l%:1M;5KpmBJ:gUkT@<4oRdbY)^Vh//QRrT66HBC*>",=DKsQeH#Yc*(8Bm4j5`$)\N5MuI[bkWGa/C_/BVJ7TjLi0Zq.KOm9a
%#J3""Yb$D#XRm'9gh3Ss8/>#L)q!^5WXeL"G5+lNn_s.lDsNLtRM:M\b'cI+R7(brQ;'P%dR*0!7RJIY81cfNIZhh@pDa'(5otWY
%XN/"*HQt1t!]=lCXP6/<:lRJ&ARsWOi<<5!>0l@hg1^cLgGWU7:NH/1=.?((!B&I"g8WIXY<%XKE7Td'Grhn9YiV]bQ_:kO7&q?Q
%Qp6G&Z/2;K06!dI.;OOlK$b1S`s"Y]NY^ID$#U0-2\%o8J!;]([%\R0g4SE_MJK:`.<=Ut[@(.nYtI&MI[p#g=^&u?>F\+>l?-c#
%.fDWu/iFe+RGUVq5&GR*?SoLo<GB13`nH2ppI&9W['udepTC(Ms7Vf5IC6b41!d3KVmK74X"Bp!lDXrb_S/Xo25.XT[njeF=q'_@
%RoF!C*N6+`:gbUf=h"sK1l9*"FeGeJ&?aH'*U)#V/_?p'?$dk=*U%;-CJ8GZZ(G*3aY$FTA-_4c2`a5Zp/I(<cT3.JlaD<(Gr=3>
%q)G2l?'ne)dB[V+)#(8e6h!=hZYE\2^-Cb#9HOVkd^CJi#E6i[0!VdF[kPKC(i*JXZc^#Q.^d7!n(MnmJ3Vpe^TtC"8kYn:'YZ/0
%8#IplHV^]L`c9VM37",Or=g9Xg0U[@95DGtJY+$R6^rS:%'!O$X7Js=dIHmHCsTQ&XIJu;Xb#?:Z2MB'm_WI<-(a&HW:92C_eSM]
%ab;M-nQdYjo7ObPdl<+5"]fp*S7YMt'Kj\#E),\;F-G&G^\t!PJ$e$=HJZ&XA:**)\tflH.n,?\\'6,XeMXI(:9NEWhQg3CKhEWX
%lV@5RSTt^HF6NSp/'A=4!c@l$.&tV%<dAC=T&[=rA"71,:6L=;G2(ME%Sm7!5-V;Q:#UM;jNkU=McK%hG?hPl"ha6"C$")op47g=
%&D1>$3$&>F?QjA0"A[k'HVP[7,g$(8/h):<N#(NMCWik[9pot,#JtKgg[C)t4ciU3U64/)nJV[+*tRGtgX;^2Xn%2$CE-DmNq:K:
%=4.?A9!_Oo@\C!oJO\gSa:GU/:J:,RX1E2YG?\SMoXV-71i%5e?*t@-P2JR^&+\2QaA3':q2,$Ze+aq.,cHJJ27t@Q"HmK)7#Gpb
%br!40E71\4nnJGmc`m67p1J\Z#L\Y=[VCWPn#neVl7*.i#k\@J_%a@_*=a^83h*3&96?MJ9cf'k8=XVQUVK'eG#t!F*WB5e4,.b8
%-qiDM\F/l2H<oi]gJ$EfdX+.t_&.u03].,[,okL=JaO&"\/=b\6r+Y7BA)A"LuHG$#B@BRAd?U1+X&%W2o=Q6]]Vk7Xnu8j?-)m=
%H`DV*_hY=$<r"KOZHrJm75LREm.K3$C:S6c[o.a:kO<`M8j-D6OCckKb#8()T!P>Z*r!-GioC$Hb.>?5.CoDDQ`;jd].I:Q]Vj8N
%j7)s&.JNZiY?U9T=577D0%+j,\`:hN]f.S>rPJ8BEC70l^-BU?F!/KY^Hin\fdG;^s#b#=1o$:9?lthF*ij4P)fF+63T9u>'d(<+
%I%Sfa$FADB"G_Mdi$C4U*#26g<2eNi#EFtC;qJh=cHq5M#>;m4#(6XE2/,UZMu,3@^+NMk@<QN*I,&]X7a1>i:%*"&dD8YY?h'+K
%-(A@mEeUB8qL\%mSraTeDOLmB!.*.chr\*H(K5jd\Pnb%07]0=*CMCg>eMA+B9Ih%NBbJ&[`YBl<epJc"ac`=&V:F[,G*7kUR=10
%E=:bidQFQ=q%X'd_P/J\JdI$9orV$()0(J(*(9;GAN55)0`2MXU$j934BU=U>O]g#e4QRNI>K8"cN>8IOU/rO,9*Ol8_]4DX&ml0
%'`)^;m#d80k`%qg82[]S9(in5oKl3dB!hbd>"'V:nPW]r^Y056@CS+[>M;?PFEVM#;$Ig<g.:aGn9dX72kZ-^\sC5dAn*;06A.RF
%l9&-)f9'T!o*#ULMSp]4b,EBSTt-$KibL4/,aJ%&f,JMeD"aK=lat:]=#ig;gu#l4rVPL.)c@Tca.@F>&#8C:Le<26Ri-ANeQ6qE
%rJjiT3,.[P4Q/hKj"5MV9n(O'&A"KNE"/a;lo3[-"JHBM=g37653iG0bMgS3*(Tlgl@*DpXQ(m'Q.jj[L9n*Y2@^kU662/8=#n'?
%ni*4mZi^$,9+iS35kJ2S1:.q^\SGP!*C!B'iYdlc&eT1Mc?P/=O!HEH3,eY!,*7dI_"sGt$]3`]$!)hgEi#U2Jf4,<4sc8_G@apf
%,q=*.W]fIe*U+tCj*7!m(d2?Les^693^EI(dg,n0^nj@aMQ4pXq"o$JI/n,]0\:\1!:E(KT,+PXLCiQ0M(2-Ol4)BS-8@E3,alR5
%*/AbG2Be'rmI*'0.jb^V6Pb"S%%<R+^cmLD'r2f4#[7sDb2E48Yfp7h/.;@br?MIYSWQm@&:V$Kj77JSbFHYG0$`iBXmp\X)qTX4
%2FT)r_;3g@U4Gg^)D8BM:94oJ:^?Xo$^oIEVWl[>);cOmg'*$<BH%;BX/=JLC/0^KPKX/K^/ZHG.<O_8)][Zh65C-$@bQMYFaVI5
%SEoZdi4*?-[#*bj+WlKdQntfd/??&5FMiUtp+hbR5mDRiF2=MB#")./Qtd&^1>mEh%AZ5s7T^!8s7Nk?h=-.t/Sd;$GQ[u^F^12-
%SN5W)\u"Y8kP3k:C,_ZXK*M]i5r0._6p/aSOL_l[:9c_Ac!0*d%7OVmKS%N?b6M@8%ETX;2NYfYDZa'/Jf2W>Z+(Pb;'_'_DC(i-
%"aLWR/q8])0fq7P%IkfH@Pp!`b>bApPkts<8GHk0bR:nAP.\7F"81q+!%B33SRJSIknN4Ml10J^6iN`&`]*fG*1*G'4EL!uROpSU
%3h=4p1@5@R5%,bRLdu1K0cs8_#,M+HPm\)q"[3LedNf4#6'Erh$dN28Na_TM-AP*An$C,C"@g&1q--&LNaBcL.h`Wd(EBB/KDf1g
%3\C'@m?>?LA-B2'(a-4/RThW@q.TT>ThBQ@F+Bn`TV>MacWPqEiSg&44K4i3BjNpf=Bd)&$3[0>"8<MMX;8ghs$!%aDg7u!<XJ;=
%'-l2ZS6afLN1u&f%M:Y;N:IUuI?Q.-Cs:8J94/^+5dUeXa+me8J=>u)cqnRQ,UcX#Qm'ZEJg6_`$>D_@!\O`u)/kb[%$J9ZBVink
%>@`s]p_pCYn(ZRK:H3cT')RRuK&o:#)H4asAaNe)^HZgTUtB4=ZruUZI+@VcBX2V6]]^k8^5JYjno+[n_QmI_16kN=$)0[0hLb*D
%Y9geb??#3NTdj_3\Ujc'"Z`B1i[o?u&QXIRf'Y4RlgX4!+LDlhKW?p@.K1k`GWG8hhJ1Hli\[7X!IKIPBm3pjJ29+LbqSFUM26(#
%m,<paG,HT!d>'q;5UZu]f:8E%4[D!bO@501XMBHS2D",!Eflq%&5n&G7]$eLrf..0!Tj9=8.:76PD/hqb0G&U7,ko+Qfgh!1o6nR
%#FpiL&.Y!)<;=FgWH@N=g%?61K?K[9;Is215d9/m4V6C?E_0Se`^u:(N&qSj(mO85i([80)@L;#Fb)Q-h)YPCMbaup(CQ:1La\@.
%h^OS0-C6P3OR@l"#ecOmjq->%)Nc5m&;Cds+r2o")oFW@-Eg;`L-$ESb*,eO>sXXF.)&j3NFFm*634SS#7QRpFH915,B@1s\9;f$
%f7k*S0Ud%/L5D7Q5TeRi5;jYd:B8I?2'pe?&=+[u"BVVE>Z?N,OcWF4FogDD2D$lu>E`bj<V"iNje&a>Y]]+$hQ@m71:TWJ9b_p^
%@@\7D")KY`0H'l*nIdJ%"c$UK9:Ok)en-lr"3o;V>-:2"?3aP=5kj;b*/S0^0$roX=c@0i%PH[3o$>+PAH[_lNe#-84-D$XJ_smW
%P!$,q]SEB@1C)sf.LRZ1Eb2dg;\6_b#Y-td,Z([tWafW"S$3GW8=[g6?S9Y5%t07,8#)PdU<R.\8a*PYRp%MiJcQVA=dk7Jo7Zc\
%XUJdmKa1SCY8rZq]?^dLaTb!)g<:r]q15s67"'T3qb;$.O#L=icq$ZkeiIr0CCOmM^.^qlnW/9P2EgeZOQd2fhStOcl`FP(PU..a
%ieiC!8<$KH&VN/3bWpQG_8DW@E?\Rg7gg=\?[,'Beu7"EgI4q\)6771&l"*aF0@F.0I+nA39,_(E]o_"3E!<*qLN+Ghb$=`Tt$BL
%X`^<SG'QfU/064R"n3JM(&$@V5>Y.n7,-lE"q4057Je%FS?m)TZf)cF*,K4H[!/k.hS$*/pYJ?5eM-'2Fmn.PQI4jF#SNp'V&qsY
%q11dR-$qgG`4B`%M.?*fm.-,ginalm8XjPXO]W?lPkcWCo"gq@Mb<Y'Se]fe/C.Vh3B!C$D+]9I6em]3\E,sM/*!Cj:gTR[=)u^/
%Aa0W!F3F7((ekn39DIk,j+1"/>kc1?&S`/mb/*K)&P@&Sj^q%B=*EmOS=]95bd%=kh94'2TlrB'31gQ\S"E%9l,W)KV!RMj(Ttq.
%Cl<?%CXoE,i3>(nr%.=Oe7dsl(f.T1[INRQi;Ht<">j,_gM=XHRA#%C%,c(?$jneiK'jlR$e4&X/XT//8h<',V<Lqm$S1tJ"`acV
%5X-pV#Xf;@q%`lto>g>fg",50M`_o1g(tT.6:jHP,eRMn:!0]FV8+2HJp#e-_cuQYVM<B%lk(IO0[ZfG)NkrPnJt>JbmTaYmag"4
%i)>>,E)/\'G/eU'qoD##^!?MC3%3^5H4B&QI[Trn+3W^<%<"Q[EK5Og6uKH'G%:?gZahfMK1VR4:FY-!E2.V`[l.tu#j=K#GP`%#
%GDcb&2X![@j6E7Y;i_:/r/FHM&3=44oGq),WMd,"7>)DkMG?\F(Q"$r67C\#^VR%X6QD#oisdIGY^^U_+A;m/>o<)M%Z89%(%R$_
%>&ZI<*IXg=on6c5O[iYooX'eYIERT.g_gt8n#@8qn.F"`3d8>k5o0d(DoBmh.!rIIl'6ILB-$5Bi6lY`O@TR^.T^abMKLe6lQu.d
%5Wj&t&3Be).^hD!foAo5H8@)`Sle_T2U"Xf8>C.cXF_V?(!7RA?;j%E#gM=9OP/2u$BH!1`#=:7b96Yifn`QtrCimbrHfXWih+Jf
%TdlX#ZN>#7S1%l&AiuSp.iqkfU9B-qdd8"rMLpJObRll!dtssH3aY&jE92@s-=.3)F^_sJBRmI_$8'>_cu(3:21Z!3K]GjlP!E=B
%%%t<SUdSK\b+KHQ@Mj.i,*O'j8GW6Oet7.o#<P*alaPKI.hLUrTTZ,h04]God?lm7O[Ps,@#UJS$p)+)5Vgd<0UMrYeOV:k</7La
%UGKg=hLrHZ#&?et,#mEjQtX@F)(qK8$L"HD33NW$&W0pZD'<A:_o8aO.hBnre[3p!?uuGE>GHn_:Dg[<elP1kg%@>Hi-gE_N4@b9
%a\\^a]:1?Zhq@rJgDZqFSY<SK&\NfTL)FHq3)e#I/'A_rnA1Z<W`.F:e'/V>ABI:oUVS&d&=aRE^*(8pa?;^(OHTs7-/\BAJuGer
%_MG?JJYAI<#g''06IL_o1_KCAkUTmsi"cY1[74^<Z@Uq&KeIolAW#sH"a^%0N>loY99d8Wb8p.oJN32=KKkM31dcBj=hE)!VHlJC
%OKW!9ZsYQ7()ThV89<OX+Ib@8pNLILX2('T,GXrE_1a5a=E)Ftck`^t0,Wm&_KmB[i8Ur7=-H<;D3q$0G9gRtdq,F?c336H`aNnb
%F2@Ro+12?K1s;X4C(:GjR+l76UZm*VL1eI2F7g!KCT7u_DAu':cYT6Vi0.[MHK#/<%U'_\@^T;Ln9XY:nZ3VbE'o$k3+<'l!B1:[
%`(3:'/GQ9&S$[8f"*)bIOGD>;p<[)#>,>l=IZ[P]-O9Z)5AD\+K4c>#kRRcZKOmlW93D]%-FDsEooYJt&S&'F:&:2N$T,Q@@tjjQ
%NW-SI&'=l\X5cVa-fBY:/<_XIW^plH"=2_@N43AB#riJ7>+%_k2?gI**,b46oIB;Hs+B)k<c.slHGCmC<aLEZk)?@k)84R\@iD8W
%rhJHp(L-*ZC.fO1#m#&'#GTn.3u^7R]E.%14%tMWR;m<hehJ>8HJ*-k*t[>Z'CLLs;!:a>(Yp!+OU=0ES0C].L9e+C@+->gP4G.S
%3&&@Jh4U\ldr+L=d*-q-$(8\*:9'fR"!E_9G[:M+/QB%6)&9;hFYD&rTkeQCYJ9q/>/+;.O3VpVZ!6!$(duam\Y#"Dff9%%Odr0O
%ipi2\1CNWLE2p_dbP-g*kse3&\P2Lrq5?4?(?_I!<D<QuA,L_ebocK0:3?hL%1Z$FLni]ZPSc%RVgL`lJ:rF`"n,jVR#2labrEh1
%Bb)7_&4??!<TKA/M"$3[IVunjM`3`q*`<Oo1IS^d_+QUJYiB,qMh-BY3#J=n1BBQOT!-5QOSK0*$2AHMM@mRln95D2+ik"^#W$*"
%V-!>BmUbN>24ihE:Db&i&OW#uC2WQB*<VCRrKh35#3@Y2kSR@n6B$s7p2n<(E;?/o`j6i!DB?ER_mn%N"iHY'*nO?(+>F&n^2=?V
%r-?-jQQ`RcZtuuLFu`uNg"I$?%Ss)j$I/p(`7Eh[ReZ'(*i.48F3+'t$dj%9f?lb=40f0q1_i&ol=g0^s&YgM([pF_.X50Ac+I9*
%hWj?fs,C[9EE`<ng5:C*>k/mihZ"k3jGj#i+)C/fqM'K)h]Q2lK1`]c-$"dSQpU'q=B9,l^rEo-=Wau2n<NR[9N5?L8@po2F7NcC
%b7IdIFM,'^@/_%Vcplm:+^]A&^H!tR6(oMNc)Em4N)cp_L;gikZ%S6'WZpt"d8f\O@,+9tX1S3k<K,WW>pWKB7A8nY_472Bm-5$!
%mSETmVR3]/pN<Vqn@oMA,8J;do*/')lhN"[U3=a`j"GA+V^W-9kIEgc)iZS]#:uDs)\4o\:JJiG(Me9s'b>V3^]ou]&%!!\:F]/l
%LV0r3SZrn,@$fZRjD#Ai@./9]l))iJ@"f\9#aIe9:.U<5dF'Yr^<TAGf!)3^>gTXN+RXP?*[62MMUo)S`Z%AoDOol(Y*Ib$^+AIE
%3@Mk(is:[RT23CDpr<bIISHm:ZZOan*CcDlkOR5?@4\V@O'V<Gma&WJH(Ei$39ALWE<:J5e8bicL9CVb9mcuQCVNJJ9if4##h<<4
%Q(f4>#HTn4c1tN]O\cc9e0EhE-`u3f!d@UGaYE/AZ7N/7gZP:ICfh=5N`X6f$gtM.@$uHt-H9V1:<krUL='o2-%c3;LJ#LHRKtli
%;]O_!*#oVtGrCWFH"7JY&@n8Me8g_u,')H]^PU)i1uS*X6^;+^f(jL>BAfN7rX*Ip0]LuJ.mi`TPNV\?n)`B>QUepmfU1#/"\.s@
%K@6K:"m5kJ#d;b^5&0E#mTs/1E&i(ZV-V_BTO)&.EAiX/8nKcEf3?lBUqr'EaCVq,AKq:)CTfI55]'ZV^rs?HP$[jd87'0`1r=^;
%f&8@C*#CKgQpQ[:)85@nP+K']?>Z&$lkr,>c2@%hebGL9B,9sH@U]bqdiBa=['L]:/\Xr!BHdtTatrfh<EcYPl]*YFhdN.E]BE=L
%Uoqutq(Lh*<#G'GnU2#dB!7hJh:`^;[B;JC(huFJ[[\'ST=1Ht.FJbX^@44_p'8kaQp8tK/`P$hNMn14ZkqdXhskHbFHna,GdR["
%9&MaighCoZp3VL<$-a6g<^%0H)3Kc][LBki"noW$N\5B;d+?-ZVFA+G_Y(\K-QnDk%JR:u:%W!!"`L%?T`gk>el:iIWgn$IEGq,;
%J8&e_WAf>G)WHF(o\';NV,#"rQjUcgEHT4-BN[O!6%1-bm+WPR+dNa!.)1^in%e(JHP8"XY_f,V!mhDn/tNGEkZ$WF!0_9^TsFdC
%Yfa0`i'S7XOJRlqKU:!]3pnr!@rlmMkhE:@e2cSG$`>(EVjEt2][U1tA,L=^YMeuKPA<2"_#\AaDrG%_%>[%Yj5hP_#Mcu(Xb6R+
%pjKaBEr`46f](\!"h`1Z,]R2!L7F`B#l6J1H5K<kiA0A'T9klUmt_D2Y0D%OS5Ru#f_8j=HVd/HXVc2lk28>1-&0'_\T9CYlu7"d
%PY5DlLe[Y>:(\$XHo_?OPk$:u#l$-54e]+S5$)aoJ:NEOq^ZXU:'Q,(f9X1iZYq8,N#(toTEqlAlosjjm(!H*[FE/OJ"BP[gT?>U
%2mVFP['@T2V)#&i:ril@>Bn`mo&B<l)-;A>%Ch1Mj&<53+I7&X#\t61"=WeK@)9Br3.3OH);Znh`-e.U9d(jT=KMh/3#ltQ^O[H&
%Vj)@'*P;O[c%?F,r@5pjiIh#NggbFGE?<cC#D8%7kO!TRXUL/3ppM7tP_RpT7E;@P*Y3F;f>X0F/UQ-=MMR)r7.(#?BBA\t\NIJe
%FZ$0^AtR#-;ML*OYY1l_#sg-t(a>Q?B#3S$jWar.%/YP*]'@afGY;3-H>S!XW?qSZ.<<A,n)[1Lni/M`s&EF5G`Ua[KYZiX_Ljp1
%1B%.c@URbRXqK^h^^Hq],^u@o\dokAa`,uRIq9$2!U[f,6&"Dt_A;X:ql.9i)4hLJ?:N-Q6JtR>Q=j0O1nthd4H?b'*n?9:esk(b
%$trA]hA%].F2b;^@RN8N],]AkfP"Uo8?[5U^rXAg]RpM8n.IiFDSuE9.\mfN'2Z$p?5s?D#N7iM%eTuPh]9ZiS^6<$8?RW-E^)"Z
%:*i#&[)j/MLV,C!dF:i6-^t9pPooCE);]DN0<!m0[I\Mj+C$j#:u_q&UT!anmtfWXU<sbZnV`PPDU%j&D8gfKBUu>,$M.8&kN:'4
%`Z96Sc0*a'i@+8C/,S5oX?7OUO(Yq'h0)uY!FHbJ;*'5POuCXTcklmHa[^:GM9ul<?3cQ4fOBJ^'WrX(CgI@noi5-"d+',nB'$8+
%qo40tJ*G\OGmO4\#%OB%:<di"+RX\cN*[4Ji(C-c+Q71#-NGKZg,]6C%=S@8,\NcA1u(RgBpCJ+8-:m0h]TA?:&o2>\O^49-\1rl
%';.(/C68=.f*Tfu!ff*%!ERm-&2+2O"WN%>]-T;HTU-5<?,3H*%/#,5ZaQ4D`DsV7!UPhhL7Ze@Ku*M3ARF7LeZpkJR)7s:2T.@]
%g!7G8RthG=g7rdD?6GUr_KGWk.FE]VYD5`?!M1:l#J\$qrO&=&3P@#k):I'`)Y[`ZO4+rc9&1$=]]q'sZ=id5^o>Be*(X6X32#1S
%\6CH*f=;$[S\:6HUi:@g;9G!4T`quQ>G*dJe']<34ZDO4]&@s30>%2F'lXI%="`#<'mc38N*]]XW#rDtC9)3.3XtUU'XufrXY7*J
%U[@p+o2U.-[`>EO_H3>$IX+c,#D-.%\mi;;S!Pc76tJ>\9^Ye`X"lL$0u%Qm<as'Z%uPC>LMBL[ZjjQ4jsh,1E(Wu&DE]n*@n%8<
%IoASRm$e"/s&Fp%)NJ$.nS%_c"-s^hANQ^`Jn/Q=o\EUHhM,fcOjAKoos,uG*Y^^CpJrtH9F4T?U4oc@RBj,6#En16j%7!"k2i7X
%^L421:&;UT$JDHJjWelH$u7lS]'=@)\'X5P?KlE+a4UDfE*f5B51<>[@n/>g&:ooWKu2d<fI:TkDN)<GSi\`k6%m>nIBa'R%2FTp
%Sq`FV9[I9^].bnVMa<!o\Z@CA8<?;/ULC"g6a16.(RM>ggqb!3`u<Zjd#p"0jdpJ^6bf_H./L\sF]a/YWL#8sZFl%hW_XggC]`u3
%j5KUs?iB<"s8$*dnt"S`>HnY\3ARI6L\!N9"%)&ZM!%nJG%Rn9,odI=3Z8DF6dHlM6RiU@%2H2b(3rp^S/P'XY"48B'\H,DFX=pF
%OIi;mh73"tQH\N,Ac'`pIonHW['J[,(XISe:fRd`X*jOe!FildD\!18>3Y94eJh*Q)st[\8SAl;Gup=/FqPpdLf30@UD>sB6=EcS
%jJb51L]'Zopp%l.B5fCE`-fd%%2WGlBg>op'Tj7C"*X+HICTjVSq\[GUSCr?8RE(g1+i[*Lm[$m/J4\@;r3<L(m[\=Bn:3\jhSo.
%?bru!eS0"!]Pep[%su#pB^m@?&BE0PE.ahZ=G0<"#CHR,T&$/qHe.kcY:s*m=ed\^T8%=f=2'YInb22g'JuaP.11Nq;YGlgV0X-@
%^hKWU=FpE\A'fJWB(^(fWEiQZqDpSL@>g3#osDDoGP,3Bb([HN^Y8[RnV3*D07T-Dr+;o'o+V*fkm:^Rd25=Hk:Y;q.'og=?%Y-q
%0<lrU3(<63hsaN*XL@f08rGI.g+Da$>?kBYpT/l99C7,7r@`i,kF[X7%5iX4l[KOQDblajPf6:Q77Oga\3GR#`V'^W.rPZn/2a,f
%G'MuX2I[5EgJ*EU=[<3/D*n92QeLiSG'iKLeCM_7\3HTd_`90tU`r7VZ[U95*0AB;<AmF&^fAn=MO,Hpg:?]r<Rl?Im[h\/TNM6B
%gU4SGKGXAn<:]ZOG?rH>KJSs2=4-KIdrCTO7ShD=q`_WqG^5;%9?$5P[1WGog\/Rc$s:s=dAVQXZaQ2J+-!p4(%HL5U?eg86SQq&
%'ZiAAi[f?Fg'eFQB=d2s#VW)<X1UG;hj=H'#tQTM^[A@.jAsN*E4bN]"G2h)_'K(_]j2*aZ-Z5X>2fs%7US\(Ap[cRaGr$S.:jpN
%J#O[(C3t4LR&.s,kU(!"[1R2!/RAm%V;]33pV0PBaWD7dJXIb6T;L@;`m(`ap5'S4kt(ejLM(LZHDq=-TM^?ThVHEk`a8]9bq2:N
%,BT1cmFY(!fZ,GCXah,gg&"6!]BFR3>E_dq[ug)SWP>scd?>S0A2]=G]FjCr['K+9GAYtrY=316ObgrM4Bu`EU/TgiMZE=SkGu&T
%Diad:/)Td,gW.&d^A)XG6iCqH2LPGb++F+aDr1um=9%MDJ,S.%r;5CL%qD_kq%nPZGJEtNhnK'ODuKr7r3u^Trd+J-huEE=rn$',
%rjQfqpYZ#Err@XC]>@qRe\D!Bs8F\Oir9)@m64t~>
%AI9_PrivateDataEnd
